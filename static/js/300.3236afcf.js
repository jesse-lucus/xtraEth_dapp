/*! For license information please see 300.3236afcf.js.LICENSE.txt */
(self.webpackChunk_uniswap_interface = self.webpackChunk_uniswap_interface || []).push([
    [300], {
        46320: function(e, r, t) {
            "use strict";
            t.d(r, {
                i: function() {
                    return n
                }
            });
            var n = "abi/5.6.4"
        },
        45462: function(e, r, t) {
            "use strict";
            t.d(r, {
                R: function() {
                    return F
                },
                $: function() {
                    return D
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(53237),
                a = t(87549),
                s = t(79094),
                u = t(46320),
                c = t(57802),
                f = t(81020),
                l = t(18992),
                h = t(4477),
                d = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e) {
                        return (0, n.Z)(this, t), r.call(this, "address", "address", e, !1)
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return "0x0000000000000000000000000000000000000000"
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            try {
                                r = (0, h.getAddress)(r)
                            } catch (t) {
                                this._throwError(t.message, r)
                            }
                            return e.writeValue(r)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return (0, h.getAddress)((0, o.hexZeroPad)(e.readValue().toHexString(), 20))
                        }
                    }]), t
                }(c.XI),
                p = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e) {
                        var i;
                        return (0, n.Z)(this, t), (i = r.call(this, e.name, e.type, void 0, e.dynamic)).coder = e, i
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return this.coder.defaultValue()
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            return this.coder.encode(e, r)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return this.coder.decode(e)
                        }
                    }]), t
                }(c.XI),
                v = new s.Logger(u.i);

            function g(e, r, t) {
                var n = null;
                if (Array.isArray(t)) n = t;
                else if (t && "object" === typeof t) {
                    var i = {};
                    n = r.map((function(e) {
                        var r = e.localName;
                        return r || v.throwError("cannot encode object for signature with missing names", s.Logger.errors.INVALID_ARGUMENT, {
                            argument: "values",
                            coder: e,
                            value: t
                        }), i[r] && v.throwError("cannot encode object for signature with duplicate names", s.Logger.errors.INVALID_ARGUMENT, {
                            argument: "values",
                            coder: e,
                            value: t
                        }), i[r] = !0, t[r]
                    }))
                } else v.throwArgumentError("invalid tuple value", "tuple", t);
                r.length !== n.length && v.throwArgumentError("types/value length mismatch", "tuple", t);
                var o = new c.QV(e.wordSize),
                    a = new c.QV(e.wordSize),
                    u = [];
                r.forEach((function(e, r) {
                    var t = n[r];
                    if (e.dynamic) {
                        var i = a.length;
                        e.encode(a, t);
                        var s = o.writeUpdatableValue();
                        u.push((function(e) {
                            s(e + i)
                        }))
                    } else e.encode(o, t)
                })), u.forEach((function(e) {
                    e(o.length)
                }));
                var f = e.appendWriter(o);
                return f += e.appendWriter(a)
            }

            function m(e, r) {
                var t = [],
                    n = e.subReader(0);
                r.forEach((function(r) {
                    var i = null;
                    if (r.dynamic) {
                        var o = e.readValue(),
                            a = n.subReader(o.toNumber());
                        try {
                            i = r.decode(a)
                        } catch (u) {
                            if (u.code === s.Logger.errors.BUFFER_OVERRUN) throw u;
                            (i = u).baseType = r.name, i.name = r.localName, i.type = r.type
                        }
                    } else try {
                        i = r.decode(e)
                    } catch (u) {
                        if (u.code === s.Logger.errors.BUFFER_OVERRUN) throw u;
                        (i = u).baseType = r.name, i.name = r.localName, i.type = r.type
                    }
                    void 0 != i && t.push(i)
                }));
                var i = r.reduce((function(e, r) {
                    var t = r.localName;
                    return t && (e[t] || (e[t] = 0), e[t]++), e
                }), {});
                r.forEach((function(e, r) {
                    var n = e.localName;
                    if (n && 1 === i[n] && ("length" === n && (n = "_length"), null == t[n])) {
                        var o = t[r];
                        o instanceof Error ? Object.defineProperty(t, n, {
                            enumerable: !0,
                            get: function() {
                                throw o
                            }
                        }) : t[n] = o
                    }
                }));
                for (var o = function() {
                        var e = t[a];
                        e instanceof Error && Object.defineProperty(t, a, {
                            enumerable: !0,
                            get: function() {
                                throw e
                            }
                        })
                    }, a = 0; a < t.length; a++) o();
                return Object.freeze(t)
            }
            var y = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e, i, o) {
                        var a;
                        (0, n.Z)(this, t);
                        var s = e.type + "[" + (i >= 0 ? i : "") + "]",
                            u = -1 === i || e.dynamic;
                        return (a = r.call(this, "array", s, o, u)).coder = e, a.length = i, a
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            for (var e = this.coder.defaultValue(), r = [], t = 0; t < this.length; t++) r.push(e);
                            return r
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            Array.isArray(r) || this._throwError("expected array value", r);
                            var t = this.length; - 1 === t && (t = r.length, e.writeValue(r.length)), v.checkArgumentCount(r.length, t, "coder array" + (this.localName ? " " + this.localName : ""));
                            for (var n = [], i = 0; i < r.length; i++) n.push(this.coder);
                            return g(e, n, r)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            var r = this.length; - 1 === r && 32 * (r = e.readValue().toNumber()) > e._data.length && v.throwError("insufficient data length", s.Logger.errors.BUFFER_OVERRUN, {
                                length: e._data.length,
                                count: r
                            });
                            for (var t = [], n = 0; n < r; n++) t.push(new p(this.coder));
                            return e.coerce(this.name, m(e, t))
                        }
                    }]), t
                }(c.XI),
                b = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e) {
                        return (0, n.Z)(this, t), r.call(this, "bool", "bool", e, !1)
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return !1
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            return e.writeValue(r ? 1 : 0)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return e.coerce(this.type, !e.readValue().isZero())
                        }
                    }]), t
                }(c.XI),
                E = t(44474),
                w = t(53538),
                A = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e, i) {
                        return (0, n.Z)(this, t), r.call(this, e, e, i, !0)
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return "0x"
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            r = (0, o.arrayify)(r);
                            var t = e.writeValue(r.length);
                            return t += e.writeBytes(r)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return e.readBytes(e.readValue().toNumber(), !0)
                        }
                    }]), t
                }(c.XI),
                k = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e) {
                        return (0, n.Z)(this, t), r.call(this, "bytes", e)
                    }
                    return (0, i.Z)(t, [{
                        key: "decode",
                        value: function(e) {
                            return e.coerce(this.name, (0, o.hexlify)((0, E.Z)((0, w.Z)(t.prototype), "decode", this).call(this, e)))
                        }
                    }]), t
                }(A),
                N = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e, i) {
                        var o;
                        (0, n.Z)(this, t);
                        var a = "bytes" + String(e);
                        return (o = r.call(this, a, a, i, !1)).size = e, o
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size)
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            var t = (0, o.arrayify)(r);
                            return t.length !== this.size && this._throwError("incorrect data length", r), e.writeBytes(t)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return e.coerce(this.name, (0, o.hexlify)(e.readBytes(this.size)))
                        }
                    }]), t
                }(c.XI),
                R = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e) {
                        return (0, n.Z)(this, t), r.call(this, "null", "", e, !1)
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return null
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            return null != r && this._throwError("not null", r), e.writeBytes([])
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return e.readBytes(0), e.coerce(this.name, null)
                        }
                    }]), t
                }(c.XI),
                x = t(96812),
                I = t(86217),
                P = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e, i, o) {
                        var a;
                        (0, n.Z)(this, t);
                        var s = (i ? "int" : "uint") + 8 * e;
                        return (a = r.call(this, s, s, o, !1)).size = e, a.signed = i, a
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return 0
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            var t = x.O$.from(r),
                                n = I.Bz.mask(8 * e.wordSize);
                            if (this.signed) {
                                var i = n.mask(8 * this.size - 1);
                                (t.gt(i) || t.lt(i.add(I.fh).mul(I.tL))) && this._throwError("value out-of-bounds", r)
                            } else(t.lt(I._Y) || t.gt(n.mask(8 * this.size))) && this._throwError("value out-of-bounds", r);
                            return t = t.toTwos(8 * this.size).mask(8 * this.size), this.signed && (t = t.fromTwos(8 * this.size).toTwos(8 * e.wordSize)), e.writeValue(t)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            var r = e.readValue().mask(8 * this.size);
                            return this.signed && (r = r.fromTwos(8 * this.size)), e.coerce(this.name, r)
                        }
                    }]), t
                }(c.XI),
                S = t(9759),
                _ = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e) {
                        return (0, n.Z)(this, t), r.call(this, "string", e)
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            return ""
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            return (0, E.Z)((0, w.Z)(t.prototype), "encode", this).call(this, e, (0, S.Y0)(r))
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return (0, S.ZN)((0, E.Z)((0, w.Z)(t.prototype), "decode", this).call(this, e))
                        }
                    }]), t
                }(A),
                T = function(e) {
                    (0, f.Z)(t, e);
                    var r = (0, l.Z)(t);

                    function t(e, i) {
                        var o;
                        (0, n.Z)(this, t);
                        var a = !1,
                            s = [];
                        e.forEach((function(e) {
                            e.dynamic && (a = !0), s.push(e.type)
                        }));
                        var u = "tuple(" + s.join(",") + ")";
                        return (o = r.call(this, "tuple", u, i, a)).coders = e, o
                    }
                    return (0, i.Z)(t, [{
                        key: "defaultValue",
                        value: function() {
                            var e = [];
                            this.coders.forEach((function(r) {
                                e.push(r.defaultValue())
                            }));
                            var r = this.coders.reduce((function(e, r) {
                                var t = r.localName;
                                return t && (e[t] || (e[t] = 0), e[t]++), e
                            }), {});
                            return this.coders.forEach((function(t, n) {
                                var i = t.localName;
                                i && 1 === r[i] && ("length" === i && (i = "_length"), null == e[i] && (e[i] = e[n]))
                            })), Object.freeze(e)
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            return g(e, this.coders, r)
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            return e.coerce(this.name, m(e, this.coders))
                        }
                    }]), t
                }(c.XI),
                O = t(93514),
                C = new s.Logger(u.i),
                U = new RegExp(/^bytes([0-9]*)$/),
                L = new RegExp(/^(u?int)([0-9]*)$/),
                F = function() {
                    function e(r) {
                        (0, n.Z)(this, e), (0, a.defineReadOnly)(this, "coerceFunc", r || null)
                    }
                    return (0, i.Z)(e, [{
                        key: "_getCoder",
                        value: function(e) {
                            var r = this;
                            switch (e.baseType) {
                                case "address":
                                    return new d(e.name);
                                case "bool":
                                    return new b(e.name);
                                case "string":
                                    return new _(e.name);
                                case "bytes":
                                    return new k(e.name);
                                case "array":
                                    return new y(this._getCoder(e.arrayChildren), e.arrayLength, e.name);
                                case "tuple":
                                    return new T((e.components || []).map((function(e) {
                                        return r._getCoder(e)
                                    })), e.name);
                                case "":
                                    return new R(e.name)
                            }
                            var t = e.type.match(L);
                            if (t) {
                                var n = parseInt(t[2] || "256");
                                return (0 === n || n > 256 || n % 8 !== 0) && C.throwArgumentError("invalid " + t[1] + " bit length", "param", e), new P(n / 8, "int" === t[1], e.name)
                            }
                            if (t = e.type.match(U)) {
                                var i = parseInt(t[1]);
                                return (0 === i || i > 32) && C.throwArgumentError("invalid bytes length", "param", e), new N(i, e.name)
                            }
                            return C.throwArgumentError("invalid type", "type", e.type)
                        }
                    }, {
                        key: "_getWordSize",
                        value: function() {
                            return 32
                        }
                    }, {
                        key: "_getReader",
                        value: function(e, r) {
                            return new c.Ej(e, this._getWordSize(), this.coerceFunc, r)
                        }
                    }, {
                        key: "_getWriter",
                        value: function() {
                            return new c.QV(this._getWordSize())
                        }
                    }, {
                        key: "getDefaultValue",
                        value: function(e) {
                            var r = this,
                                t = e.map((function(e) {
                                    return r._getCoder(O._R.from(e))
                                }));
                            return new T(t, "_").defaultValue()
                        }
                    }, {
                        key: "encode",
                        value: function(e, r) {
                            var t = this;
                            e.length !== r.length && C.throwError("types/values length mismatch", s.Logger.errors.INVALID_ARGUMENT, {
                                count: {
                                    types: e.length,
                                    values: r.length
                                },
                                value: {
                                    types: e,
                                    values: r
                                }
                            });
                            var n = e.map((function(e) {
                                    return t._getCoder(O._R.from(e))
                                })),
                                i = new T(n, "_"),
                                o = this._getWriter();
                            return i.encode(o, r), o.data
                        }
                    }, {
                        key: "decode",
                        value: function(e, r, t) {
                            var n = this,
                                i = e.map((function(e) {
                                    return n._getCoder(O._R.from(e))
                                }));
                            return new T(i, "_").decode(this._getReader((0, o.arrayify)(r), t))
                        }
                    }]), e
                }(),
                D = new F
        },
        57802: function(e, r, t) {
            "use strict";
            t.d(r, {
                BR: function() {
                    return l
                },
                Ej: function() {
                    return p
                },
                QV: function() {
                    return d
                },
                XI: function() {
                    return h
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(53237),
                a = t(96812),
                s = t(87549),
                u = t(79094),
                c = t(46320),
                f = new u.Logger(c.i);

            function l(e) {
                var r = [];
                return function e(t, n) {
                    if (Array.isArray(n))
                        for (var i in n) {
                            var o = t.slice();
                            o.push(i);
                            try {
                                e(o, n[i])
                            } catch (a) {
                                r.push({
                                    path: o,
                                    error: a
                                })
                            }
                        }
                }([], e), r
            }
            var h = function() {
                    function e(r, t, i, o) {
                        (0, n.Z)(this, e), this.name = r, this.type = t, this.localName = i, this.dynamic = o
                    }
                    return (0, i.Z)(e, [{
                        key: "_throwError",
                        value: function(e, r) {
                            f.throwArgumentError(e, this.localName, r)
                        }
                    }]), e
                }(),
                d = function() {
                    function e(r) {
                        (0, n.Z)(this, e), (0, s.defineReadOnly)(this, "wordSize", r || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(r)
                    }
                    return (0, i.Z)(e, [{
                        key: "data",
                        get: function() {
                            return (0, o.hexConcat)(this._data)
                        }
                    }, {
                        key: "length",
                        get: function() {
                            return this._dataLength
                        }
                    }, {
                        key: "_writeData",
                        value: function(e) {
                            return this._data.push(e), this._dataLength += e.length, e.length
                        }
                    }, {
                        key: "appendWriter",
                        value: function(e) {
                            return this._writeData((0, o.concat)(e._data))
                        }
                    }, {
                        key: "writeBytes",
                        value: function(e) {
                            var r = (0, o.arrayify)(e),
                                t = r.length % this.wordSize;
                            return t && (r = (0, o.concat)([r, this._padding.slice(t)])), this._writeData(r)
                        }
                    }, {
                        key: "_getValue",
                        value: function(e) {
                            var r = (0, o.arrayify)(a.O$.from(e));
                            return r.length > this.wordSize && f.throwError("value out-of-bounds", u.Logger.errors.BUFFER_OVERRUN, {
                                length: this.wordSize,
                                offset: r.length
                            }), r.length % this.wordSize && (r = (0, o.concat)([this._padding.slice(r.length % this.wordSize), r])), r
                        }
                    }, {
                        key: "writeValue",
                        value: function(e) {
                            return this._writeData(this._getValue(e))
                        }
                    }, {
                        key: "writeUpdatableValue",
                        value: function() {
                            var e = this,
                                r = this._data.length;
                            return this._data.push(this._padding), this._dataLength += this.wordSize,
                                function(t) {
                                    e._data[r] = e._getValue(t)
                                }
                        }
                    }]), e
                }(),
                p = function() {
                    function e(r, t, i, a) {
                        (0, n.Z)(this, e), (0, s.defineReadOnly)(this, "_data", (0, o.arrayify)(r)), (0, s.defineReadOnly)(this, "wordSize", t || 32), (0, s.defineReadOnly)(this, "_coerceFunc", i), (0, s.defineReadOnly)(this, "allowLoose", a), this._offset = 0
                    }
                    return (0, i.Z)(e, [{
                        key: "data",
                        get: function() {
                            return (0, o.hexlify)(this._data)
                        }
                    }, {
                        key: "consumed",
                        get: function() {
                            return this._offset
                        }
                    }, {
                        key: "coerce",
                        value: function(r, t) {
                            return this._coerceFunc ? this._coerceFunc(r, t) : e.coerce(r, t)
                        }
                    }, {
                        key: "_peekBytes",
                        value: function(e, r, t) {
                            var n = Math.ceil(r / this.wordSize) * this.wordSize;
                            return this._offset + n > this._data.length && (this.allowLoose && t && this._offset + r <= this._data.length ? n = r : f.throwError("data out-of-bounds", u.Logger.errors.BUFFER_OVERRUN, {
                                length: this._data.length,
                                offset: this._offset + n
                            })), this._data.slice(this._offset, this._offset + n)
                        }
                    }, {
                        key: "subReader",
                        value: function(r) {
                            return new e(this._data.slice(this._offset + r), this.wordSize, this._coerceFunc, this.allowLoose)
                        }
                    }, {
                        key: "readBytes",
                        value: function(e, r) {
                            var t = this._peekBytes(0, e, !!r);
                            return this._offset += t.length, t.slice(0, e)
                        }
                    }, {
                        key: "readValue",
                        value: function() {
                            return a.O$.from(this.readBytes(this.wordSize))
                        }
                    }], [{
                        key: "coerce",
                        value: function(e, r) {
                            var t = e.match("^u?int([0-9]+)$");
                            return t && parseInt(t[1]) <= 48 && (r = r.toNumber()), r
                        }
                    }]), e
                }()
        },
        93514: function(e, r, t) {
            "use strict";
            t.d(r, {
                HY: function() {
                    return w
                },
                IC: function() {
                    return S
                },
                QV: function() {
                    return A
                },
                Xg: function() {
                    return x
                },
                YW: function() {
                    return I
                },
                _R: function() {
                    return b
                },
                pc: function() {
                    return m
                }
            });
            var n = t(81020),
                i = t(18992),
                o = t(27853),
                a = t(84531),
                s = t(96812),
                u = t(87549),
                c = t(79094),
                f = t(46320),
                l = new c.Logger(f.i),
                h = {},
                d = {
                    calldata: !0,
                    memory: !0,
                    storage: !0
                },
                p = {
                    calldata: !0,
                    memory: !0
                };

            function v(e, r) {
                if ("bytes" === e || "string" === e) {
                    if (d[r]) return !0
                } else if ("address" === e) {
                    if ("payable" === r) return !0
                } else if ((e.indexOf("[") >= 0 || "tuple" === e) && p[r]) return !0;
                return (d[r] || "payable" === r) && l.throwArgumentError("invalid modifier", "name", r), !1
            }

            function g(e, r) {
                for (var t in r)(0, u.defineReadOnly)(e, t, r[t])
            }
            var m = Object.freeze({
                    sighash: "sighash",
                    minimal: "minimal",
                    full: "full",
                    json: "json"
                }),
                y = new RegExp(/^(.*)\[([0-9]*)\]$/),
                b = function() {
                    function e(r, t) {
                        (0, o.Z)(this, e), r !== h && l.throwError("use fromString", c.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "new ParamType()"
                        }), g(this, t);
                        var n = this.type.match(y);
                        g(this, n ? {
                            arrayLength: parseInt(n[2] || "-1"),
                            arrayChildren: e.fromObject({
                                type: n[1],
                                components: this.components
                            }),
                            baseType: "array"
                        } : {
                            arrayLength: null,
                            arrayChildren: null,
                            baseType: null != this.components ? "tuple" : this.type
                        }), this._isParamType = !0, Object.freeze(this)
                    }
                    return (0, a.Z)(e, [{
                        key: "format",
                        value: function(e) {
                            if (e || (e = m.sighash), m[e] || l.throwArgumentError("invalid format type", "format", e), e === m.json) {
                                var r = {
                                    type: "tuple" === this.baseType ? "tuple" : this.type,
                                    name: this.name || void 0
                                };
                                return "boolean" === typeof this.indexed && (r.indexed = this.indexed), this.components && (r.components = this.components.map((function(r) {
                                    return JSON.parse(r.format(e))
                                }))), JSON.stringify(r)
                            }
                            var t = "";
                            return "array" === this.baseType ? (t += this.arrayChildren.format(e), t += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : "tuple" === this.baseType ? (e !== m.sighash && (t += this.type), t += "(" + this.components.map((function(r) {
                                return r.format(e)
                            })).join(e === m.full ? ", " : ",") + ")") : t += this.type, e !== m.sighash && (!0 === this.indexed && (t += " indexed"), e === m.full && this.name && (t += " " + this.name)), t
                        }
                    }], [{
                        key: "from",
                        value: function(r, t) {
                            return "string" === typeof r ? e.fromString(r, t) : e.fromObject(r)
                        }
                    }, {
                        key: "fromObject",
                        value: function(r) {
                            return e.isParamType(r) ? r : new e(h, {
                                name: r.name || null,
                                type: _(r.type),
                                indexed: null == r.indexed ? null : !!r.indexed,
                                components: r.components ? r.components.map(e.fromObject) : null
                            })
                        }
                    }, {
                        key: "fromString",
                        value: function(r, t) {
                            return n = function(e, r) {
                                var t = e;

                                function n(r) {
                                    l.throwArgumentError("unexpected character at position ".concat(r), "param", e)
                                }

                                function i(e) {
                                    var t = {
                                        type: "",
                                        name: "",
                                        parent: e,
                                        state: {
                                            allowType: !0
                                        }
                                    };
                                    return r && (t.indexed = !1), t
                                }
                                e = e.replace(/\s/g, " ");
                                for (var o = {
                                        type: "",
                                        name: "",
                                        state: {
                                            allowType: !0
                                        }
                                    }, a = o, s = 0; s < e.length; s++) {
                                    var u = e[s];
                                    switch (u) {
                                        case "(":
                                            a.state.allowType && "" === a.type ? a.type = "tuple" : a.state.allowParams || n(s), a.state.allowType = !1, a.type = _(a.type), a.components = [i(a)], a = a.components[0];
                                            break;
                                        case ")":
                                            delete a.state, "indexed" === a.name && (r || n(s), a.indexed = !0, a.name = ""), v(a.type, a.name) && (a.name = ""), a.type = _(a.type);
                                            var c = a;
                                            (a = a.parent) || n(s), delete c.parent, a.state.allowParams = !1, a.state.allowName = !0, a.state.allowArray = !0;
                                            break;
                                        case ",":
                                            delete a.state, "indexed" === a.name && (r || n(s), a.indexed = !0, a.name = ""), v(a.type, a.name) && (a.name = ""), a.type = _(a.type);
                                            var f = i(a.parent);
                                            a.parent.components.push(f), delete a.parent, a = f;
                                            break;
                                        case " ":
                                            a.state.allowType && "" !== a.type && (a.type = _(a.type), delete a.state.allowType, a.state.allowName = !0, a.state.allowParams = !0), a.state.allowName && "" !== a.name && ("indexed" === a.name ? (r || n(s), a.indexed && n(s), a.indexed = !0, a.name = "") : v(a.type, a.name) ? a.name = "" : a.state.allowName = !1);
                                            break;
                                        case "[":
                                            a.state.allowArray || n(s), a.type += u, a.state.allowArray = !1, a.state.allowName = !1, a.state.readArray = !0;
                                            break;
                                        case "]":
                                            a.state.readArray || n(s), a.type += u, a.state.readArray = !1, a.state.allowArray = !0, a.state.allowName = !0;
                                            break;
                                        default:
                                            a.state.allowType ? (a.type += u, a.state.allowParams = !0, a.state.allowArray = !0) : a.state.allowName ? (a.name += u, delete a.state.allowArray) : a.state.readArray ? a.type += u : n(s)
                                    }
                                }
                                return a.parent && l.throwArgumentError("unexpected eof", "param", e), delete o.state, "indexed" === a.name ? (r || n(t.length - 7), a.indexed && n(t.length - 7), a.indexed = !0, a.name = "") : v(a.type, a.name) && (a.name = ""), o.type = _(o.type), o
                            }(r, !!t), e.fromObject({
                                name: n.name,
                                type: n.type,
                                indexed: n.indexed,
                                components: n.components
                            });
                            var n
                        }
                    }, {
                        key: "isParamType",
                        value: function(e) {
                            return !(null == e || !e._isParamType)
                        }
                    }]), e
                }();

            function E(e, r) {
                return function(e) {
                    e = e.trim();
                    for (var r = [], t = "", n = 0, i = 0; i < e.length; i++) {
                        var o = e[i];
                        "," === o && 0 === n ? (r.push(t), t = "") : (t += o, "(" === o ? n++ : ")" === o && -1 === --n && l.throwArgumentError("unbalanced parenthesis", "value", e))
                    }
                    t && r.push(t);
                    return r
                }(e).map((function(e) {
                    return b.fromString(e, r)
                }))
            }
            var w = function() {
                    function e(r, t) {
                        (0, o.Z)(this, e), r !== h && l.throwError("use a static from method", c.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "new Fragment()"
                        }), g(this, t), this._isFragment = !0, Object.freeze(this)
                    }
                    return (0, a.Z)(e, null, [{
                        key: "from",
                        value: function(r) {
                            return e.isFragment(r) ? r : "string" === typeof r ? e.fromString(r) : e.fromObject(r)
                        }
                    }, {
                        key: "fromObject",
                        value: function(r) {
                            if (e.isFragment(r)) return r;
                            switch (r.type) {
                                case "function":
                                    return I.fromObject(r);
                                case "event":
                                    return A.fromObject(r);
                                case "constructor":
                                    return x.fromObject(r);
                                case "error":
                                    return S.fromObject(r);
                                case "fallback":
                                case "receive":
                                    return null
                            }
                            return l.throwArgumentError("invalid fragment object", "value", r)
                        }
                    }, {
                        key: "fromString",
                        value: function(e) {
                            return "event" === (e = (e = (e = e.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? A.fromString(e.substring(5).trim()) : "function" === e.split(" ")[0] ? I.fromString(e.substring(8).trim()) : "constructor" === e.split("(")[0].trim() ? x.fromString(e.trim()) : "error" === e.split(" ")[0] ? S.fromString(e.substring(5).trim()) : l.throwArgumentError("unsupported fragment", "value", e)
                        }
                    }, {
                        key: "isFragment",
                        value: function(e) {
                            return !(!e || !e._isFragment)
                        }
                    }]), e
                }(),
                A = function(e) {
                    (0, n.Z)(t, e);
                    var r = (0, i.Z)(t);

                    function t() {
                        return (0, o.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, a.Z)(t, [{
                        key: "format",
                        value: function(e) {
                            if (e || (e = m.sighash), m[e] || l.throwArgumentError("invalid format type", "format", e), e === m.json) return JSON.stringify({
                                type: "event",
                                anonymous: this.anonymous,
                                name: this.name,
                                inputs: this.inputs.map((function(r) {
                                    return JSON.parse(r.format(e))
                                }))
                            });
                            var r = "";
                            return e !== m.sighash && (r += "event "), r += this.name + "(" + this.inputs.map((function(r) {
                                return r.format(e)
                            })).join(e === m.full ? ", " : ",") + ") ", e !== m.sighash && this.anonymous && (r += "anonymous "), r.trim()
                        }
                    }], [{
                        key: "from",
                        value: function(e) {
                            return "string" === typeof e ? t.fromString(e) : t.fromObject(e)
                        }
                    }, {
                        key: "fromObject",
                        value: function(e) {
                            if (t.isEventFragment(e)) return e;
                            "event" !== e.type && l.throwArgumentError("invalid event object", "value", e);
                            var r = {
                                name: O(e.name),
                                anonymous: e.anonymous,
                                inputs: e.inputs ? e.inputs.map(b.fromObject) : [],
                                type: "event"
                            };
                            return new t(h, r)
                        }
                    }, {
                        key: "fromString",
                        value: function(e) {
                            var r = e.match(C);
                            r || l.throwArgumentError("invalid event string", "value", e);
                            var n = !1;
                            return r[3].split(" ").forEach((function(e) {
                                switch (e.trim()) {
                                    case "anonymous":
                                        n = !0;
                                        break;
                                    case "":
                                        break;
                                    default:
                                        l.warn("unknown modifier: " + e)
                                }
                            })), t.fromObject({
                                name: r[1].trim(),
                                anonymous: n,
                                inputs: E(r[2], !0),
                                type: "event"
                            })
                        }
                    }, {
                        key: "isEventFragment",
                        value: function(e) {
                            return e && e._isFragment && "event" === e.type
                        }
                    }]), t
                }(w);

            function k(e, r) {
                r.gas = null;
                var t = e.split("@");
                return 1 !== t.length ? (t.length > 2 && l.throwArgumentError("invalid human-readable ABI signature", "value", e), t[1].match(/^[0-9]+$/) || l.throwArgumentError("invalid human-readable ABI signature gas", "value", e), r.gas = s.O$.from(t[1]), t[0]) : e
            }

            function N(e, r) {
                r.constant = !1, r.payable = !1, r.stateMutability = "nonpayable", e.split(" ").forEach((function(e) {
                    switch (e.trim()) {
                        case "constant":
                            r.constant = !0;
                            break;
                        case "payable":
                            r.payable = !0, r.stateMutability = "payable";
                            break;
                        case "nonpayable":
                            r.payable = !1, r.stateMutability = "nonpayable";
                            break;
                        case "pure":
                            r.constant = !0, r.stateMutability = "pure";
                            break;
                        case "view":
                            r.constant = !0, r.stateMutability = "view";
                            break;
                        case "external":
                        case "public":
                        case "":
                            break;
                        default:
                            console.log("unknown modifier: " + e)
                    }
                }))
            }

            function R(e) {
                var r = {
                    constant: !1,
                    payable: !0,
                    stateMutability: "payable"
                };
                return null != e.stateMutability ? (r.stateMutability = e.stateMutability, r.constant = "view" === r.stateMutability || "pure" === r.stateMutability, null != e.constant && !!e.constant !== r.constant && l.throwArgumentError("cannot have constant function with mutability " + r.stateMutability, "value", e), r.payable = "payable" === r.stateMutability, null != e.payable && !!e.payable !== r.payable && l.throwArgumentError("cannot have payable function with mutability " + r.stateMutability, "value", e)) : null != e.payable ? (r.payable = !!e.payable, null != e.constant || r.payable || "constructor" === e.type || l.throwArgumentError("unable to determine stateMutability", "value", e), r.constant = !!e.constant, r.constant ? r.stateMutability = "view" : r.stateMutability = r.payable ? "payable" : "nonpayable", r.payable && r.constant && l.throwArgumentError("cannot have constant payable function", "value", e)) : null != e.constant ? (r.constant = !!e.constant, r.payable = !r.constant, r.stateMutability = r.constant ? "view" : "payable") : "constructor" !== e.type && l.throwArgumentError("unable to determine stateMutability", "value", e), r
            }
            var x = function(e) {
                    (0, n.Z)(t, e);
                    var r = (0, i.Z)(t);

                    function t() {
                        return (0, o.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, a.Z)(t, [{
                        key: "format",
                        value: function(e) {
                            if (e || (e = m.sighash), m[e] || l.throwArgumentError("invalid format type", "format", e), e === m.json) return JSON.stringify({
                                type: "constructor",
                                stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                                payable: this.payable,
                                gas: this.gas ? this.gas.toNumber() : void 0,
                                inputs: this.inputs.map((function(r) {
                                    return JSON.parse(r.format(e))
                                }))
                            });
                            e === m.sighash && l.throwError("cannot format a constructor for sighash", c.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "format(sighash)"
                            });
                            var r = "constructor(" + this.inputs.map((function(r) {
                                return r.format(e)
                            })).join(e === m.full ? ", " : ",") + ") ";
                            return this.stateMutability && "nonpayable" !== this.stateMutability && (r += this.stateMutability + " "), r.trim()
                        }
                    }], [{
                        key: "from",
                        value: function(e) {
                            return "string" === typeof e ? t.fromString(e) : t.fromObject(e)
                        }
                    }, {
                        key: "fromObject",
                        value: function(e) {
                            if (t.isConstructorFragment(e)) return e;
                            "constructor" !== e.type && l.throwArgumentError("invalid constructor object", "value", e);
                            var r = R(e);
                            r.constant && l.throwArgumentError("constructor cannot be constant", "value", e);
                            var n = {
                                name: null,
                                type: e.type,
                                inputs: e.inputs ? e.inputs.map(b.fromObject) : [],
                                payable: r.payable,
                                stateMutability: r.stateMutability,
                                gas: e.gas ? s.O$.from(e.gas) : null
                            };
                            return new t(h, n)
                        }
                    }, {
                        key: "fromString",
                        value: function(e) {
                            var r = {
                                    type: "constructor"
                                },
                                n = (e = k(e, r)).match(C);
                            return n && "constructor" === n[1].trim() || l.throwArgumentError("invalid constructor string", "value", e), r.inputs = E(n[2].trim(), !1), N(n[3].trim(), r), t.fromObject(r)
                        }
                    }, {
                        key: "isConstructorFragment",
                        value: function(e) {
                            return e && e._isFragment && "constructor" === e.type
                        }
                    }]), t
                }(w),
                I = function(e) {
                    (0, n.Z)(t, e);
                    var r = (0, i.Z)(t);

                    function t() {
                        return (0, o.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, a.Z)(t, [{
                        key: "format",
                        value: function(e) {
                            if (e || (e = m.sighash), m[e] || l.throwArgumentError("invalid format type", "format", e), e === m.json) return JSON.stringify({
                                type: "function",
                                name: this.name,
                                constant: this.constant,
                                stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                                payable: this.payable,
                                gas: this.gas ? this.gas.toNumber() : void 0,
                                inputs: this.inputs.map((function(r) {
                                    return JSON.parse(r.format(e))
                                })),
                                outputs: this.outputs.map((function(r) {
                                    return JSON.parse(r.format(e))
                                }))
                            });
                            var r = "";
                            return e !== m.sighash && (r += "function "), r += this.name + "(" + this.inputs.map((function(r) {
                                return r.format(e)
                            })).join(e === m.full ? ", " : ",") + ") ", e !== m.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (r += this.stateMutability + " ") : this.constant && (r += "view "), this.outputs && this.outputs.length && (r += "returns (" + this.outputs.map((function(r) {
                                return r.format(e)
                            })).join(", ") + ") "), null != this.gas && (r += "@" + this.gas.toString() + " ")), r.trim()
                        }
                    }], [{
                        key: "from",
                        value: function(e) {
                            return "string" === typeof e ? t.fromString(e) : t.fromObject(e)
                        }
                    }, {
                        key: "fromObject",
                        value: function(e) {
                            if (t.isFunctionFragment(e)) return e;
                            "function" !== e.type && l.throwArgumentError("invalid function object", "value", e);
                            var r = R(e),
                                n = {
                                    type: e.type,
                                    name: O(e.name),
                                    constant: r.constant,
                                    inputs: e.inputs ? e.inputs.map(b.fromObject) : [],
                                    outputs: e.outputs ? e.outputs.map(b.fromObject) : [],
                                    payable: r.payable,
                                    stateMutability: r.stateMutability,
                                    gas: e.gas ? s.O$.from(e.gas) : null
                                };
                            return new t(h, n)
                        }
                    }, {
                        key: "fromString",
                        value: function(e) {
                            var r = {
                                    type: "function"
                                },
                                n = (e = k(e, r)).split(" returns ");
                            n.length > 2 && l.throwArgumentError("invalid function string", "value", e);
                            var i = n[0].match(C);
                            if (i || l.throwArgumentError("invalid function signature", "value", e), r.name = i[1].trim(), r.name && O(r.name), r.inputs = E(i[2], !1), N(i[3].trim(), r), n.length > 1) {
                                var o = n[1].match(C);
                                "" == o[1].trim() && "" == o[3].trim() || l.throwArgumentError("unexpected tokens", "value", e), r.outputs = E(o[2], !1)
                            } else r.outputs = [];
                            return t.fromObject(r)
                        }
                    }, {
                        key: "isFunctionFragment",
                        value: function(e) {
                            return e && e._isFragment && "function" === e.type
                        }
                    }]), t
                }(x);

            function P(e) {
                var r = e.format();
                return "Error(string)" !== r && "Panic(uint256)" !== r || l.throwArgumentError("cannot specify user defined ".concat(r, " error"), "fragment", e), e
            }
            var S = function(e) {
                (0, n.Z)(t, e);
                var r = (0, i.Z)(t);

                function t() {
                    return (0, o.Z)(this, t), r.apply(this, arguments)
                }
                return (0, a.Z)(t, [{
                    key: "format",
                    value: function(e) {
                        if (e || (e = m.sighash), m[e] || l.throwArgumentError("invalid format type", "format", e), e === m.json) return JSON.stringify({
                            type: "error",
                            name: this.name,
                            inputs: this.inputs.map((function(r) {
                                return JSON.parse(r.format(e))
                            }))
                        });
                        var r = "";
                        return e !== m.sighash && (r += "error "), (r += this.name + "(" + this.inputs.map((function(r) {
                            return r.format(e)
                        })).join(e === m.full ? ", " : ",") + ") ").trim()
                    }
                }], [{
                    key: "from",
                    value: function(e) {
                        return "string" === typeof e ? t.fromString(e) : t.fromObject(e)
                    }
                }, {
                    key: "fromObject",
                    value: function(e) {
                        if (t.isErrorFragment(e)) return e;
                        "error" !== e.type && l.throwArgumentError("invalid error object", "value", e);
                        var r = {
                            type: e.type,
                            name: O(e.name),
                            inputs: e.inputs ? e.inputs.map(b.fromObject) : []
                        };
                        return P(new t(h, r))
                    }
                }, {
                    key: "fromString",
                    value: function(e) {
                        var r = {
                                type: "error"
                            },
                            n = e.match(C);
                        return n || l.throwArgumentError("invalid error signature", "value", e), r.name = n[1].trim(), r.name && O(r.name), r.inputs = E(n[2], !1), P(t.fromObject(r))
                    }
                }, {
                    key: "isErrorFragment",
                    value: function(e) {
                        return e && e._isFragment && "error" === e.type
                    }
                }]), t
            }(w);

            function _(e) {
                return e.match(/^uint($|[^1-9])/) ? e = "uint256" + e.substring(4) : e.match(/^int($|[^1-9])/) && (e = "int256" + e.substring(3)), e
            }
            var T = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");

            function O(e) {
                return e && e.match(T) || l.throwArgumentError('invalid identifier "'.concat(e, '"'), "value", e), e
            }
            var C = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$")
        },
        67378: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                AbiCoder: function() {
                    return i.R
                },
                ConstructorFragment: function() {
                    return n.Xg
                },
                ErrorFragment: function() {
                    return n.IC
                },
                EventFragment: function() {
                    return n.QV
                },
                FormatTypes: function() {
                    return n.pc
                },
                Fragment: function() {
                    return n.HY
                },
                FunctionFragment: function() {
                    return n.YW
                },
                Indexed: function() {
                    return o.Hk
                },
                Interface: function() {
                    return o.vU
                },
                LogDescription: function() {
                    return o.CC
                },
                ParamType: function() {
                    return n._R
                },
                TransactionDescription: function() {
                    return o.vk
                },
                checkResultErrors: function() {
                    return a.BR
                },
                defaultAbiCoder: function() {
                    return i.$
                }
            });
            var n = t(93514),
                i = t(45462),
                o = t(63235),
                a = t(57802)
        },
        63235: function(e, r, t) {
            "use strict";
            t.d(r, {
                CC: function() {
                    return y
                },
                Hk: function() {
                    return w
                },
                vU: function() {
                    return N
                },
                vk: function() {
                    return b
                }
            });
            var n = t(84531),
                i = t(27853),
                o = t(81020),
                a = t(18992),
                s = t(4477),
                u = t(96812),
                c = t(53237),
                f = t(16939),
                l = t(81e3),
                h = t(87549),
                d = t(45462),
                p = t(93514),
                v = t(79094),
                g = t(46320),
                m = new v.Logger(g.i),
                y = function(e) {
                    (0, o.Z)(t, e);
                    var r = (0, a.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, n.Z)(t)
                }(h.Description),
                b = function(e) {
                    (0, o.Z)(t, e);
                    var r = (0, a.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, n.Z)(t)
                }(h.Description),
                E = function(e) {
                    (0, o.Z)(t, e);
                    var r = (0, a.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, n.Z)(t)
                }(h.Description),
                w = function(e) {
                    (0, o.Z)(t, e);
                    var r = (0, a.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, n.Z)(t, null, [{
                        key: "isIndexed",
                        value: function(e) {
                            return !(!e || !e._isIndexed)
                        }
                    }]), t
                }(h.Description),
                A = {
                    "0x08c379a0": {
                        signature: "Error(string)",
                        name: "Error",
                        inputs: ["string"],
                        reason: !0
                    },
                    "0x4e487b71": {
                        signature: "Panic(uint256)",
                        name: "Panic",
                        inputs: ["uint256"]
                    }
                };

            function k(e, r) {
                var t = new Error("deferred error during ABI decoding triggered accessing ".concat(e));
                return t.error = r, t
            }
            var N = function() {
                function e(r) {
                    var t = this;
                    (0, i.Z)(this, e);
                    var n = [];
                    n = "string" === typeof r ? JSON.parse(r) : r, (0, h.defineReadOnly)(this, "fragments", n.map((function(e) {
                        return p.HY.from(e)
                    })).filter((function(e) {
                        return null != e
                    }))), (0, h.defineReadOnly)(this, "_abiCoder", (0, h.getStatic)(this instanceof e ? this.constructor : void 0, "getAbiCoder")()), (0, h.defineReadOnly)(this, "functions", {}), (0, h.defineReadOnly)(this, "errors", {}), (0, h.defineReadOnly)(this, "events", {}), (0, h.defineReadOnly)(this, "structs", {}), this.fragments.forEach((function(e) {
                        var r = null;
                        switch (e.type) {
                            case "constructor":
                                return t.deploy ? void m.warn("duplicate definition - constructor") : void(0, h.defineReadOnly)(t, "deploy", e);
                            case "function":
                                r = t.functions;
                                break;
                            case "event":
                                r = t.events;
                                break;
                            case "error":
                                r = t.errors;
                                break;
                            default:
                                return
                        }
                        var n = e.format();
                        r[n] ? m.warn("duplicate definition - " + n) : r[n] = e
                    })), this.deploy || (0, h.defineReadOnly)(this, "deploy", p.Xg.from({
                        payable: !1,
                        type: "constructor"
                    })), (0, h.defineReadOnly)(this, "_isInterface", !0)
                }
                return (0, n.Z)(e, [{
                    key: "format",
                    value: function(e) {
                        e || (e = p.pc.full), e === p.pc.sighash && m.throwArgumentError("interface does not support formatting sighash", "format", e);
                        var r = this.fragments.map((function(r) {
                            return r.format(e)
                        }));
                        return e === p.pc.json ? JSON.stringify(r.map((function(e) {
                            return JSON.parse(e)
                        }))) : r
                    }
                }, {
                    key: "getFunction",
                    value: function(e) {
                        if ((0, c.isHexString)(e)) {
                            for (var r in this.functions)
                                if (e === this.getSighash(r)) return this.functions[r];
                            m.throwArgumentError("no matching function", "sighash", e)
                        }
                        if (-1 === e.indexOf("(")) {
                            var t = e.trim(),
                                n = Object.keys(this.functions).filter((function(e) {
                                    return e.split("(")[0] === t
                                }));
                            return 0 === n.length ? m.throwArgumentError("no matching function", "name", t) : n.length > 1 && m.throwArgumentError("multiple matching functions", "name", t), this.functions[n[0]]
                        }
                        var i = this.functions[p.YW.fromString(e).format()];
                        return i || m.throwArgumentError("no matching function", "signature", e), i
                    }
                }, {
                    key: "getEvent",
                    value: function(e) {
                        if ((0, c.isHexString)(e)) {
                            var r = e.toLowerCase();
                            for (var t in this.events)
                                if (r === this.getEventTopic(t)) return this.events[t];
                            m.throwArgumentError("no matching event", "topichash", r)
                        }
                        if (-1 === e.indexOf("(")) {
                            var n = e.trim(),
                                i = Object.keys(this.events).filter((function(e) {
                                    return e.split("(")[0] === n
                                }));
                            return 0 === i.length ? m.throwArgumentError("no matching event", "name", n) : i.length > 1 && m.throwArgumentError("multiple matching events", "name", n), this.events[i[0]]
                        }
                        var o = this.events[p.QV.fromString(e).format()];
                        return o || m.throwArgumentError("no matching event", "signature", e), o
                    }
                }, {
                    key: "getError",
                    value: function(e) {
                        if ((0, c.isHexString)(e)) {
                            var r = (0, h.getStatic)(this.constructor, "getSighash");
                            for (var t in this.errors) {
                                if (e === r(this.errors[t])) return this.errors[t]
                            }
                            m.throwArgumentError("no matching error", "sighash", e)
                        }
                        if (-1 === e.indexOf("(")) {
                            var n = e.trim(),
                                i = Object.keys(this.errors).filter((function(e) {
                                    return e.split("(")[0] === n
                                }));
                            return 0 === i.length ? m.throwArgumentError("no matching error", "name", n) : i.length > 1 && m.throwArgumentError("multiple matching errors", "name", n), this.errors[i[0]]
                        }
                        var o = this.errors[p.YW.fromString(e).format()];
                        return o || m.throwArgumentError("no matching error", "signature", e), o
                    }
                }, {
                    key: "getSighash",
                    value: function(e) {
                        if ("string" === typeof e) try {
                            e = this.getFunction(e)
                        } catch (r) {
                            try {
                                e = this.getError(e)
                            } catch (t) {
                                throw r
                            }
                        }
                        return (0, h.getStatic)(this.constructor, "getSighash")(e)
                    }
                }, {
                    key: "getEventTopic",
                    value: function(e) {
                        return "string" === typeof e && (e = this.getEvent(e)), (0, h.getStatic)(this.constructor, "getEventTopic")(e)
                    }
                }, {
                    key: "_decodeParams",
                    value: function(e, r) {
                        return this._abiCoder.decode(e, r)
                    }
                }, {
                    key: "_encodeParams",
                    value: function(e, r) {
                        return this._abiCoder.encode(e, r)
                    }
                }, {
                    key: "encodeDeploy",
                    value: function(e) {
                        return this._encodeParams(this.deploy.inputs, e || [])
                    }
                }, {
                    key: "decodeErrorResult",
                    value: function(e, r) {
                        "string" === typeof e && (e = this.getError(e));
                        var t = (0, c.arrayify)(r);
                        return (0, c.hexlify)(t.slice(0, 4)) !== this.getSighash(e) && m.throwArgumentError("data signature does not match error ".concat(e.name, "."), "data", (0, c.hexlify)(t)), this._decodeParams(e.inputs, t.slice(4))
                    }
                }, {
                    key: "encodeErrorResult",
                    value: function(e, r) {
                        return "string" === typeof e && (e = this.getError(e)), (0, c.hexlify)((0, c.concat)([this.getSighash(e), this._encodeParams(e.inputs, r || [])]))
                    }
                }, {
                    key: "decodeFunctionData",
                    value: function(e, r) {
                        "string" === typeof e && (e = this.getFunction(e));
                        var t = (0, c.arrayify)(r);
                        return (0, c.hexlify)(t.slice(0, 4)) !== this.getSighash(e) && m.throwArgumentError("data signature does not match function ".concat(e.name, "."), "data", (0, c.hexlify)(t)), this._decodeParams(e.inputs, t.slice(4))
                    }
                }, {
                    key: "encodeFunctionData",
                    value: function(e, r) {
                        return "string" === typeof e && (e = this.getFunction(e)), (0, c.hexlify)((0, c.concat)([this.getSighash(e), this._encodeParams(e.inputs, r || [])]))
                    }
                }, {
                    key: "decodeFunctionResult",
                    value: function(e, r) {
                        "string" === typeof e && (e = this.getFunction(e));
                        var t = (0, c.arrayify)(r),
                            n = null,
                            i = "",
                            o = null,
                            a = null,
                            s = null;
                        switch (t.length % this._abiCoder._getWordSize()) {
                            case 0:
                                try {
                                    return this._abiCoder.decode(e.outputs, t)
                                } catch (l) {}
                                break;
                            case 4:
                                var u = (0, c.hexlify)(t.slice(0, 4)),
                                    f = A[u];
                                if (f) o = this._abiCoder.decode(f.inputs, t.slice(4)), a = f.name, s = f.signature, f.reason && (n = o[0]), "Error" === a ? i = "; VM Exception while processing transaction: reverted with reason string ".concat(JSON.stringify(o[0])) : "Panic" === a && (i = "; VM Exception while processing transaction: reverted with panic code ".concat(o[0]));
                                else try {
                                    var l = this.getError(u);
                                    o = this._abiCoder.decode(l.inputs, t.slice(4)), a = l.name, s = l.format()
                                } catch (l) {}
                        }
                        return m.throwError("call revert exception" + i, v.Logger.errors.CALL_EXCEPTION, {
                            method: e.format(),
                            data: (0, c.hexlify)(r),
                            errorArgs: o,
                            errorName: a,
                            errorSignature: s,
                            reason: n
                        })
                    }
                }, {
                    key: "encodeFunctionResult",
                    value: function(e, r) {
                        return "string" === typeof e && (e = this.getFunction(e)), (0, c.hexlify)(this._abiCoder.encode(e.outputs, r || []))
                    }
                }, {
                    key: "encodeFilterTopics",
                    value: function(e, r) {
                        var t = this;
                        "string" === typeof e && (e = this.getEvent(e)), r.length > e.inputs.length && m.throwError("too many arguments for " + e.format(), v.Logger.errors.UNEXPECTED_ARGUMENT, {
                            argument: "values",
                            value: r
                        });
                        var n = [];
                        e.anonymous || n.push(this.getEventTopic(e));
                        var i = function(e, r) {
                            return "string" === e.type ? (0, f.id)(r) : "bytes" === e.type ? (0, l.keccak256)((0, c.hexlify)(r)) : ("bool" === e.type && "boolean" === typeof r && (r = r ? "0x01" : "0x00"), e.type.match(/^u?int/) && (r = u.O$.from(r).toHexString()), "address" === e.type && t._abiCoder.encode(["address"], [r]), (0, c.hexZeroPad)((0, c.hexlify)(r), 32))
                        };
                        for (r.forEach((function(r, t) {
                                var o = e.inputs[t];
                                o.indexed ? null == r ? n.push(null) : "array" === o.baseType || "tuple" === o.baseType ? m.throwArgumentError("filtering with tuples or arrays not supported", "contract." + o.name, r) : Array.isArray(r) ? n.push(r.map((function(e) {
                                    return i(o, e)
                                }))) : n.push(i(o, r)) : null != r && m.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + o.name, r)
                            })); n.length && null === n[n.length - 1];) n.pop();
                        return n
                    }
                }, {
                    key: "encodeEventLog",
                    value: function(e, r) {
                        var t = this;
                        "string" === typeof e && (e = this.getEvent(e));
                        var n = [],
                            i = [],
                            o = [];
                        return e.anonymous || n.push(this.getEventTopic(e)), r.length !== e.inputs.length && m.throwArgumentError("event arguments/values mismatch", "values", r), e.inputs.forEach((function(e, a) {
                            var s = r[a];
                            if (e.indexed)
                                if ("string" === e.type) n.push((0, f.id)(s));
                                else if ("bytes" === e.type) n.push((0, l.keccak256)(s));
                            else {
                                if ("tuple" === e.baseType || "array" === e.baseType) throw new Error("not implemented");
                                n.push(t._abiCoder.encode([e.type], [s]))
                            } else i.push(e), o.push(s)
                        })), {
                            data: this._abiCoder.encode(i, o),
                            topics: n
                        }
                    }
                }, {
                    key: "decodeEventLog",
                    value: function(e, r, t) {
                        if ("string" === typeof e && (e = this.getEvent(e)), null != t && !e.anonymous) {
                            var n = this.getEventTopic(e);
                            (0, c.isHexString)(t[0], 32) && t[0].toLowerCase() === n || m.throwError("fragment/topic mismatch", v.Logger.errors.INVALID_ARGUMENT, {
                                argument: "topics[0]",
                                expected: n,
                                value: t[0]
                            }), t = t.slice(1)
                        }
                        var i = [],
                            o = [],
                            a = [];
                        e.inputs.forEach((function(e, r) {
                            e.indexed ? "string" === e.type || "bytes" === e.type || "tuple" === e.baseType || "array" === e.baseType ? (i.push(p._R.fromObject({
                                type: "bytes32",
                                name: e.name
                            })), a.push(!0)) : (i.push(e), a.push(!1)) : (o.push(e), a.push(!1))
                        }));
                        var s = null != t ? this._abiCoder.decode(i, (0, c.concat)(t)) : null,
                            u = this._abiCoder.decode(o, r, !0),
                            f = [],
                            l = 0,
                            h = 0;
                        e.inputs.forEach((function(e, r) {
                            if (e.indexed)
                                if (null == s) f[r] = new w({
                                    _isIndexed: !0,
                                    hash: null
                                });
                                else if (a[r]) f[r] = new w({
                                _isIndexed: !0,
                                hash: s[h++]
                            });
                            else try {
                                f[r] = s[h++]
                            } catch (n) {
                                f[r] = n
                            } else try {
                                f[r] = u[l++]
                            } catch (n) {
                                f[r] = n
                            }
                            if (e.name && null == f[e.name]) {
                                var t = f[r];
                                t instanceof Error ? Object.defineProperty(f, e.name, {
                                    enumerable: !0,
                                    get: function() {
                                        throw k("property ".concat(JSON.stringify(e.name)), t)
                                    }
                                }) : f[e.name] = t
                            }
                        }));
                        for (var d = function(e) {
                                var r = f[e];
                                r instanceof Error && Object.defineProperty(f, e, {
                                    enumerable: !0,
                                    get: function() {
                                        throw k("index ".concat(e), r)
                                    }
                                })
                            }, g = 0; g < f.length; g++) d(g);
                        return Object.freeze(f)
                    }
                }, {
                    key: "parseTransaction",
                    value: function(e) {
                        var r = this.getFunction(e.data.substring(0, 10).toLowerCase());
                        return r ? new b({
                            args: this._abiCoder.decode(r.inputs, "0x" + e.data.substring(10)),
                            functionFragment: r,
                            name: r.name,
                            signature: r.format(),
                            sighash: this.getSighash(r),
                            value: u.O$.from(e.value || "0")
                        }) : null
                    }
                }, {
                    key: "parseLog",
                    value: function(e) {
                        var r = this.getEvent(e.topics[0]);
                        return !r || r.anonymous ? null : new y({
                            eventFragment: r,
                            name: r.name,
                            signature: r.format(),
                            topic: this.getEventTopic(r),
                            args: this.decodeEventLog(r, e.data, e.topics)
                        })
                    }
                }, {
                    key: "parseError",
                    value: function(e) {
                        var r = (0, c.hexlify)(e),
                            t = this.getError(r.substring(0, 10).toLowerCase());
                        return t ? new E({
                            args: this._abiCoder.decode(t.inputs, "0x" + r.substring(10)),
                            errorFragment: t,
                            name: t.name,
                            signature: t.format(),
                            sighash: this.getSighash(t)
                        }) : null
                    }
                }], [{
                    key: "getAbiCoder",
                    value: function() {
                        return d.$
                    }
                }, {
                    key: "getAddress",
                    value: function(e) {
                        return (0, s.getAddress)(e)
                    }
                }, {
                    key: "getSighash",
                    value: function(e) {
                        return (0, c.hexDataSlice)((0, f.id)(e.format()), 0, 4)
                    }
                }, {
                    key: "getEventTopic",
                    value: function(e) {
                        return (0, f.id)(e.format())
                    }
                }, {
                    key: "isInterface",
                    value: function(e) {
                        return !(!e || !e._isInterface)
                    }
                }]), e
            }()
        },
        99221: function(e, r, t) {
            "use strict";
            t.d(r, {
                Sg: function() {
                    return d
                },
                zt: function() {
                    return p
                }
            });
            var n = t(27166),
                i = t(27853),
                o = t(84531),
                a = t(81020),
                s = t(18992),
                u = t(96812),
                c = t(87549),
                f = t(79094),
                l = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                h = new f.Logger("abstract-provider/5.7.0"),
                d = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, null, [{
                        key: "isForkEvent",
                        value: function(e) {
                            return !(!e || !e._isForkEvent)
                        }
                    }]), t
                }(c.Description),
                p = function() {
                    function e() {
                        (0, i.Z)(this, e), h.checkAbstract(this instanceof e ? this.constructor : void 0, e), (0, c.defineReadOnly)(this, "_isProvider", !0)
                    }
                    return (0, o.Z)(e, [{
                        key: "getFeeData",
                        value: function() {
                            return l(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, t, i, o, a, s;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, (0, c.resolveProperties)({
                                                block: this.getBlock("latest"),
                                                gasPrice: this.getGasPrice().catch((function(e) {
                                                    return null
                                                }))
                                            });
                                        case 2:
                                            return r = e.sent, t = r.block, i = r.gasPrice, o = null, a = null, s = null, t && t.baseFeePerGas && (o = t.baseFeePerGas, s = u.O$.from("1500000000"), a = t.baseFeePerGas.mul(2).add(s)), e.abrupt("return", {
                                                lastBaseFeePerGas: o,
                                                maxFeePerGas: a,
                                                maxPriorityFeePerGas: s,
                                                gasPrice: i
                                            });
                                        case 8:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "addListener",
                        value: function(e, r) {
                            return this.on(e, r)
                        }
                    }, {
                        key: "removeListener",
                        value: function(e, r) {
                            return this.off(e, r)
                        }
                    }], [{
                        key: "isProvider",
                        value: function(e) {
                            return !(!e || !e._isProvider)
                        }
                    }]), e
                }()
        },
        80155: function(e, r, t) {
            "use strict";
            t.d(r, {
                E: function() {
                    return v
                },
                b: function() {
                    return g
                }
            });
            var n = t(6148),
                i = t(81020),
                o = t(18992),
                a = t(27166),
                s = t(27853),
                u = t(84531),
                c = t(87549),
                f = t(79094),
                l = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                h = new f.Logger("abstract-signer/5.7.0"),
                d = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                p = [f.Logger.errors.INSUFFICIENT_FUNDS, f.Logger.errors.NONCE_EXPIRED, f.Logger.errors.REPLACEMENT_UNDERPRICED],
                v = function() {
                    function e() {
                        (0, s.Z)(this, e), h.checkAbstract(this instanceof e ? this.constructor : void 0, e), (0, c.defineReadOnly)(this, "_isSigner", !0)
                    }
                    return (0, u.Z)(e, [{
                        key: "getBalance",
                        value: function(e) {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("getBalance"), r.next = 3, this.provider.getBalance(this.getAddress(), e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getTransactionCount",
                        value: function(e) {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("getTransactionCount"), r.next = 3, this.provider.getTransactionCount(this.getAddress(), e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "estimateGas",
                        value: function(e) {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("estimateGas"), r.next = 3, (0, c.resolveProperties)(this.checkTransaction(e));
                                        case 3:
                                            return t = r.sent, r.next = 6, this.provider.estimateGas(t);
                                        case 6:
                                            return r.abrupt("return", r.sent);
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "call",
                        value: function(e, r) {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return this._checkProvider("call"), t.next = 3, (0, c.resolveProperties)(this.checkTransaction(e));
                                        case 3:
                                            return n = t.sent, t.next = 6, this.provider.call(n, r);
                                        case 6:
                                            return t.abrupt("return", t.sent);
                                        case 7:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }, {
                        key: "sendTransaction",
                        value: function(e) {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("sendTransaction"), r.next = 3, this.populateTransaction(e);
                                        case 3:
                                            return t = r.sent, r.next = 6, this.signTransaction(t);
                                        case 6:
                                            return n = r.sent, r.next = 9, this.provider.sendTransaction(n);
                                        case 9:
                                            return r.abrupt("return", r.sent);
                                        case 10:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getChainId",
                        value: function() {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                var r;
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getChainId"), e.next = 3, this.provider.getNetwork();
                                        case 3:
                                            return r = e.sent, e.abrupt("return", r.chainId);
                                        case 5:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getGasPrice",
                        value: function() {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getGasPrice"), e.next = 3, this.provider.getGasPrice();
                                        case 3:
                                            return e.abrupt("return", e.sent);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getFeeData",
                        value: function() {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getFeeData"), e.next = 3, this.provider.getFeeData();
                                        case 3:
                                            return e.abrupt("return", e.sent);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "resolveName",
                        value: function(e) {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("resolveName"), r.next = 3, this.provider.resolveName(e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "checkTransaction",
                        value: function(e) {
                            for (var r in e) - 1 === d.indexOf(r) && h.throwArgumentError("invalid transaction key: " + r, "transaction", e);
                            var t = (0, c.shallowCopy)(e);
                            return null == t.from ? t.from = this.getAddress() : t.from = Promise.all([Promise.resolve(t.from), this.getAddress()]).then((function(r) {
                                return r[0].toLowerCase() !== r[1].toLowerCase() && h.throwArgumentError("from address mismatch", "transaction", e), r[0]
                            })), t
                        }
                    }, {
                        key: "populateTransaction",
                        value: function(e) {
                            return l(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i, o, s = this;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, (0, c.resolveProperties)(this.checkTransaction(e));
                                        case 2:
                                            if (null != (t = r.sent).to && (t.to = Promise.resolve(t.to).then((function(e) {
                                                    return l(s, void 0, void 0, (0, a.Z)().mark((function r() {
                                                        var t;
                                                        return (0, a.Z)().wrap((function(r) {
                                                            for (;;) switch (r.prev = r.next) {
                                                                case 0:
                                                                    if (null != e) {
                                                                        r.next = 2;
                                                                        break
                                                                    }
                                                                    return r.abrupt("return", null);
                                                                case 2:
                                                                    return r.next = 4, this.resolveName(e);
                                                                case 4:
                                                                    return null == (t = r.sent) && h.throwArgumentError("provided ENS name resolves to null", "tx.to", e), r.abrupt("return", t);
                                                                case 7:
                                                                case "end":
                                                                    return r.stop()
                                                            }
                                                        }), r, this)
                                                    })))
                                                })), t.to.catch((function(e) {}))), n = null != t.maxFeePerGas || null != t.maxPriorityFeePerGas, null == t.gasPrice || 2 !== t.type && !n ? 0 !== t.type && 1 !== t.type || !n || h.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e) : h.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e), 2 !== t.type && null != t.type || null == t.maxFeePerGas || null == t.maxPriorityFeePerGas) {
                                                r.next = 10;
                                                break
                                            }
                                            t.type = 2, r.next = 18;
                                            break;
                                        case 10:
                                            if (0 !== t.type && 1 !== t.type) {
                                                r.next = 14;
                                                break
                                            }
                                            null == t.gasPrice && (t.gasPrice = this.getGasPrice()), r.next = 18;
                                            break;
                                        case 14:
                                            return r.next = 16, this.getFeeData();
                                        case 16:
                                            i = r.sent, null == t.type ? null != i.maxFeePerGas && null != i.maxPriorityFeePerGas ? (t.type = 2, null != t.gasPrice ? (o = t.gasPrice, delete t.gasPrice, t.maxFeePerGas = o, t.maxPriorityFeePerGas = o) : (null == t.maxFeePerGas && (t.maxFeePerGas = i.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas))) : null != i.gasPrice ? (n && h.throwError("network does not support EIP-1559", f.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "populateTransaction"
                                            }), null == t.gasPrice && (t.gasPrice = i.gasPrice), t.type = 0) : h.throwError("failed to get consistent fee data", f.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "signer.getFeeData"
                                            }) : 2 === t.type && (null == t.maxFeePerGas && (t.maxFeePerGas = i.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas));
                                        case 18:
                                            return null == t.nonce && (t.nonce = this.getTransactionCount("pending")), null == t.gasLimit && (t.gasLimit = this.estimateGas(t).catch((function(e) {
                                                if (p.indexOf(e.code) >= 0) throw e;
                                                return h.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", f.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                                                    error: e,
                                                    tx: t
                                                })
                                            }))), null == t.chainId ? t.chainId = this.getChainId() : t.chainId = Promise.all([Promise.resolve(t.chainId), this.getChainId()]).then((function(r) {
                                                return 0 !== r[1] && r[0] !== r[1] && h.throwArgumentError("chainId address mismatch", "transaction", e), r[0]
                                            })), r.next = 23, (0, c.resolveProperties)(t);
                                        case 23:
                                            return r.abrupt("return", r.sent);
                                        case 24:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_checkProvider",
                        value: function(e) {
                            this.provider || h.throwError("missing provider", f.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: e || "_checkProvider"
                            })
                        }
                    }], [{
                        key: "isSigner",
                        value: function(e) {
                            return !(!e || !e._isSigner)
                        }
                    }]), e
                }(),
                g = function(e) {
                    (0, i.Z)(t, e);
                    var r = (0, o.Z)(t);

                    function t(e, i) {
                        var o;
                        return (0, s.Z)(this, t), o = r.call(this), (0, c.defineReadOnly)((0, n.Z)(o), "address", e), (0, c.defineReadOnly)((0, n.Z)(o), "provider", i || null), o
                    }
                    return (0, u.Z)(t, [{
                        key: "getAddress",
                        value: function() {
                            return Promise.resolve(this.address)
                        }
                    }, {
                        key: "_fail",
                        value: function(e, r) {
                            return Promise.resolve().then((function() {
                                h.throwError(e, f.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: r
                                })
                            }))
                        }
                    }, {
                        key: "signMessage",
                        value: function(e) {
                            return this._fail("VoidSigner cannot sign messages", "signMessage")
                        }
                    }, {
                        key: "signTransaction",
                        value: function(e) {
                            return this._fail("VoidSigner cannot sign transactions", "signTransaction")
                        }
                    }, {
                        key: "_signTypedData",
                        value: function(e, r, t) {
                            return this._fail("VoidSigner cannot sign typed data", "signTypedData")
                        }
                    }, {
                        key: "connect",
                        value: function(e) {
                            return new t(this.address, e)
                        }
                    }]), t
                }(v)
        },
        4477: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                getAddress: function() {
                    return v
                },
                getContractAddress: function() {
                    return y
                },
                getCreate2Address: function() {
                    return b
                },
                getIcapAddress: function() {
                    return m
                },
                isAddress: function() {
                    return g
                }
            });
            var n = t(53237),
                i = t(96812),
                o = t(81e3),
                a = t(76354),
                s = new(t(79094).Logger)("address/5.7.0");

            function u(e) {
                (0, n.isHexString)(e, 20) || s.throwArgumentError("invalid address", "address", e);
                for (var r = (e = e.toLowerCase()).substring(2).split(""), t = new Uint8Array(40), i = 0; i < 40; i++) t[i] = r[i].charCodeAt(0);
                for (var a = (0, n.arrayify)((0, o.keccak256)(t)), u = 0; u < 40; u += 2) a[u >> 1] >> 4 >= 8 && (r[u] = r[u].toUpperCase()), (15 & a[u >> 1]) >= 8 && (r[u + 1] = r[u + 1].toUpperCase());
                return "0x" + r.join("")
            }
            for (var c = {}, f = 0; f < 10; f++) c[String(f)] = String(f);
            for (var l = 0; l < 26; l++) c[String.fromCharCode(65 + l)] = String(10 + l);
            var h, d = Math.floor((h = 9007199254740991, Math.log10 ? Math.log10(h) : Math.log(h) / Math.LN10));

            function p(e) {
                for (var r = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map((function(e) {
                        return c[e]
                    })).join(""); r.length >= d;) {
                    var t = r.substring(0, d);
                    r = parseInt(t, 10) % 97 + r.substring(t.length)
                }
                for (var n = String(98 - parseInt(r, 10) % 97); n.length < 2;) n = "0" + n;
                return n
            }

            function v(e) {
                var r = null;
                if ("string" !== typeof e && s.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), r = u(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && r !== e && s.throwArgumentError("bad address checksum", "address", e);
                else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (e.substring(2, 4) !== p(e) && s.throwArgumentError("bad icap checksum", "address", e), r = (0, i.g$)(e.substring(4)); r.length < 40;) r = "0" + r;
                    r = u("0x" + r)
                } else s.throwArgumentError("invalid address", "address", e);
                return r
            }

            function g(e) {
                try {
                    return v(e), !0
                } catch (r) {}
                return !1
            }

            function m(e) {
                for (var r = (0, i.t2)(v(e).substring(2)).toUpperCase(); r.length < 30;) r = "0" + r;
                return "XE" + p("XE00" + r) + r
            }

            function y(e) {
                var r = null;
                try {
                    r = v(e.from)
                } catch (u) {
                    s.throwArgumentError("missing from address", "transaction", e)
                }
                var t = (0, n.stripZeros)((0, n.arrayify)(i.O$.from(e.nonce).toHexString()));
                return v((0, n.hexDataSlice)((0, o.keccak256)((0, a.encode)([r, t])), 12))
            }

            function b(e, r, t) {
                return 32 !== (0, n.hexDataLength)(r) && s.throwArgumentError("salt must be 32 bytes", "salt", r), 32 !== (0, n.hexDataLength)(t) && s.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", t), v((0, n.hexDataSlice)((0, o.keccak256)((0, n.concat)(["0xff", v(e), r, t])), 12))
            }
        },
        38531: function(e, r, t) {
            "use strict";
            t.d(r, {
                J: function() {
                    return i
                },
                c: function() {
                    return o
                }
            });
            var n = t(53237);

            function i(e) {
                e = atob(e);
                for (var r = [], t = 0; t < e.length; t++) r.push(e.charCodeAt(t));
                return (0, n.arrayify)(r)
            }

            function o(e) {
                e = (0, n.arrayify)(e);
                for (var r = "", t = 0; t < e.length; t++) r += String.fromCharCode(e[t]);
                return btoa(r)
            }
        },
        89081: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                decode: function() {
                    return n.J
                },
                encode: function() {
                    return n.c
                }
            });
            var n = t(38531)
        },
        8116: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                Base32: function() {
                    return u
                },
                Base58: function() {
                    return c
                },
                BaseX: function() {
                    return s
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(53237),
                a = t(87549),
                s = function() {
                    function e(r) {
                        (0, n.Z)(this, e), (0, a.defineReadOnly)(this, "alphabet", r), (0, a.defineReadOnly)(this, "base", r.length), (0, a.defineReadOnly)(this, "_alphabetMap", {}), (0, a.defineReadOnly)(this, "_leader", r.charAt(0));
                        for (var t = 0; t < r.length; t++) this._alphabetMap[r.charAt(t)] = t
                    }
                    return (0, i.Z)(e, [{
                        key: "encode",
                        value: function(e) {
                            var r = (0, o.arrayify)(e);
                            if (0 === r.length) return "";
                            for (var t = [0], n = 0; n < r.length; ++n) {
                                for (var i = r[n], a = 0; a < t.length; ++a) i += t[a] << 8, t[a] = i % this.base, i = i / this.base | 0;
                                for (; i > 0;) t.push(i % this.base), i = i / this.base | 0
                            }
                            for (var s = "", u = 0; 0 === r[u] && u < r.length - 1; ++u) s += this._leader;
                            for (var c = t.length - 1; c >= 0; --c) s += this.alphabet[t[c]];
                            return s
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            if ("string" !== typeof e) throw new TypeError("Expected String");
                            var r = [];
                            if (0 === e.length) return new Uint8Array(r);
                            r.push(0);
                            for (var t = 0; t < e.length; t++) {
                                var n = this._alphabetMap[e[t]];
                                if (void 0 === n) throw new Error("Non-base" + this.base + " character");
                                for (var i = n, a = 0; a < r.length; ++a) i += r[a] * this.base, r[a] = 255 & i, i >>= 8;
                                for (; i > 0;) r.push(255 & i), i >>= 8
                            }
                            for (var s = 0; e[s] === this._leader && s < e.length - 1; ++s) r.push(0);
                            return (0, o.arrayify)(new Uint8Array(r.reverse()))
                        }
                    }]), e
                }(),
                u = new s("abcdefghijklmnopqrstuvwxyz234567"),
                c = new s("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")
        },
        40164: function(e, r, t) {
            "use strict";
            t.d(r, {
                i: function() {
                    return n
                }
            });
            var n = "bignumber/5.7.0"
        },
        96812: function(e, r, t) {
            "use strict";
            t.d(r, {
                O$: function() {
                    return g
                },
                Zm: function() {
                    return p
                },
                g$: function() {
                    return w
                },
                t2: function() {
                    return A
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(27239),
                a = t.n(o),
                s = t(53237),
                u = t(79094),
                c = t(40164),
                f = a().BN,
                l = new u.Logger(c.i),
                h = {},
                d = 9007199254740991;

            function p(e) {
                return null != e && (g.isBigNumber(e) || "number" === typeof e && e % 1 === 0 || "string" === typeof e && !!e.match(/^-?[0-9]+$/) || (0, s.isHexString)(e) || "bigint" === typeof e || (0, s.isBytes)(e))
            }
            var v = !1,
                g = function() {
                    function e(r, t) {
                        (0, n.Z)(this, e), r !== h && l.throwError("cannot call constructor directly; use BigNumber.from", u.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "new (BigNumber)"
                        }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                    }
                    return (0, i.Z)(e, [{
                        key: "fromTwos",
                        value: function(e) {
                            return y(b(this).fromTwos(e))
                        }
                    }, {
                        key: "toTwos",
                        value: function(e) {
                            return y(b(this).toTwos(e))
                        }
                    }, {
                        key: "abs",
                        value: function() {
                            return "-" === this._hex[0] ? e.from(this._hex.substring(1)) : this
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            return y(b(this).add(b(e)))
                        }
                    }, {
                        key: "sub",
                        value: function(e) {
                            return y(b(this).sub(b(e)))
                        }
                    }, {
                        key: "div",
                        value: function(r) {
                            return e.from(r).isZero() && E("division-by-zero", "div"), y(b(this).div(b(r)))
                        }
                    }, {
                        key: "mul",
                        value: function(e) {
                            return y(b(this).mul(b(e)))
                        }
                    }, {
                        key: "mod",
                        value: function(e) {
                            var r = b(e);
                            return r.isNeg() && E("division-by-zero", "mod"), y(b(this).umod(r))
                        }
                    }, {
                        key: "pow",
                        value: function(e) {
                            var r = b(e);
                            return r.isNeg() && E("negative-power", "pow"), y(b(this).pow(r))
                        }
                    }, {
                        key: "and",
                        value: function(e) {
                            var r = b(e);
                            return (this.isNegative() || r.isNeg()) && E("unbound-bitwise-result", "and"), y(b(this).and(r))
                        }
                    }, {
                        key: "or",
                        value: function(e) {
                            var r = b(e);
                            return (this.isNegative() || r.isNeg()) && E("unbound-bitwise-result", "or"), y(b(this).or(r))
                        }
                    }, {
                        key: "xor",
                        value: function(e) {
                            var r = b(e);
                            return (this.isNegative() || r.isNeg()) && E("unbound-bitwise-result", "xor"), y(b(this).xor(r))
                        }
                    }, {
                        key: "mask",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && E("negative-width", "mask"), y(b(this).maskn(e))
                        }
                    }, {
                        key: "shl",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && E("negative-width", "shl"), y(b(this).shln(e))
                        }
                    }, {
                        key: "shr",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && E("negative-width", "shr"), y(b(this).shrn(e))
                        }
                    }, {
                        key: "eq",
                        value: function(e) {
                            return b(this).eq(b(e))
                        }
                    }, {
                        key: "lt",
                        value: function(e) {
                            return b(this).lt(b(e))
                        }
                    }, {
                        key: "lte",
                        value: function(e) {
                            return b(this).lte(b(e))
                        }
                    }, {
                        key: "gt",
                        value: function(e) {
                            return b(this).gt(b(e))
                        }
                    }, {
                        key: "gte",
                        value: function(e) {
                            return b(this).gte(b(e))
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._hex[0]
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return b(this).isZero()
                        }
                    }, {
                        key: "toNumber",
                        value: function() {
                            try {
                                return b(this).toNumber()
                            } catch (e) {
                                E("overflow", "toNumber", this.toString())
                            }
                            return null
                        }
                    }, {
                        key: "toBigInt",
                        value: function() {
                            try {
                                return BigInt(this.toString())
                            } catch (e) {}
                            return l.throwError("this platform does not support BigInt", u.Logger.errors.UNSUPPORTED_OPERATION, {
                                value: this.toString()
                            })
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return arguments.length > 0 && (10 === arguments[0] ? v || (v = !0, l.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? l.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", u.Logger.errors.UNEXPECTED_ARGUMENT, {}) : l.throwError("BigNumber.toString does not accept parameters", u.Logger.errors.UNEXPECTED_ARGUMENT, {})), b(this).toString(10)
                        }
                    }, {
                        key: "toHexString",
                        value: function() {
                            return this._hex
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            return {
                                type: "BigNumber",
                                hex: this.toHexString()
                            }
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            if ("string" === typeof r) return r.match(/^-?0x[0-9a-f]+$/i) ? new e(h, m(r)) : r.match(/^-?[0-9]+$/) ? new e(h, m(new f(r))) : l.throwArgumentError("invalid BigNumber string", "value", r);
                            if ("number" === typeof r) return r % 1 && E("underflow", "BigNumber.from", r), (r >= d || r <= -d) && E("overflow", "BigNumber.from", r), e.from(String(r));
                            var t = r;
                            if ("bigint" === typeof t) return e.from(t.toString());
                            if ((0, s.isBytes)(t)) return e.from((0, s.hexlify)(t));
                            if (t)
                                if (t.toHexString) {
                                    var n = t.toHexString();
                                    if ("string" === typeof n) return e.from(n)
                                } else {
                                    var i = t._hex;
                                    if (null == i && "BigNumber" === t.type && (i = t.hex), "string" === typeof i && ((0, s.isHexString)(i) || "-" === i[0] && (0, s.isHexString)(i.substring(1)))) return e.from(i)
                                }
                            return l.throwArgumentError("invalid BigNumber value", "value", r)
                        }
                    }, {
                        key: "isBigNumber",
                        value: function(e) {
                            return !(!e || !e._isBigNumber)
                        }
                    }]), e
                }();

            function m(e) {
                if ("string" !== typeof e) return m(e.toString(16));
                if ("-" === e[0]) return "-" === (e = e.substring(1))[0] && l.throwArgumentError("invalid hex", "value", e), "0x00" === (e = m(e)) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function y(e) {
                return g.from(m(e))
            }

            function b(e) {
                var r = g.from(e).toHexString();
                return "-" === r[0] ? new f("-" + r.substring(3), 16) : new f(r.substring(2), 16)
            }

            function E(e, r, t) {
                var n = {
                    fault: e,
                    operation: r
                };
                return null != t && (n.value = t), l.throwError(e, u.Logger.errors.NUMERIC_FAULT, n)
            }

            function w(e) {
                return new f(e, 36).toString(16)
            }

            function A(e) {
                return new f(e, 16).toString(36)
            }
        },
        28550: function(e, r, t) {
            "use strict";
            t.d(r, {
                Ox: function() {
                    return m
                },
                S5: function() {
                    return g
                },
                xO: function() {
                    return y
                },
                xs: function() {
                    return b
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(53237),
                a = t(79094),
                s = t(40164),
                u = t(96812),
                c = new a.Logger(s.i),
                f = {},
                l = u.O$.from(0),
                h = u.O$.from(-1);

            function d(e, r, t, n) {
                var i = {
                    fault: r,
                    operation: t
                };
                return void 0 !== n && (i.value = n), c.throwError(e, a.Logger.errors.NUMERIC_FAULT, i)
            }
            for (var p = "0"; p.length < 256;) p += p;

            function v(e) {
                if ("number" !== typeof e) try {
                    e = u.O$.from(e).toNumber()
                } catch (r) {}
                return "number" === typeof e && e >= 0 && e <= 256 && !(e % 1) ? "1" + p.substring(0, e) : c.throwArgumentError("invalid decimal size", "decimals", e)
            }

            function g(e, r) {
                null == r && (r = 0);
                var t = v(r),
                    n = (e = u.O$.from(e)).lt(l);
                n && (e = e.mul(h));
                for (var i = e.mod(t).toString(); i.length < t.length - 1;) i = "0" + i;
                i = i.match(/^([0-9]*[1-9]|0)(0*)/)[1];
                var o = e.div(t).toString();
                return e = 1 === t.length ? o : o + "." + i, n && (e = "-" + e), e
            }

            function m(e, r) {
                null == r && (r = 0);
                var t = v(r);
                "string" === typeof e && e.match(/^-?[0-9.]+$/) || c.throwArgumentError("invalid decimal value", "value", e);
                var n = "-" === e.substring(0, 1);
                n && (e = e.substring(1)), "." === e && c.throwArgumentError("missing value", "value", e);
                var i = e.split(".");
                i.length > 2 && c.throwArgumentError("too many decimal points", "value", e);
                var o = i[0],
                    a = i[1];
                for (o || (o = "0"), a || (a = "0");
                    "0" === a[a.length - 1];) a = a.substring(0, a.length - 1);
                for (a.length > t.length - 1 && d("fractional component exceeds decimals", "underflow", "parseFixed"), "" === a && (a = "0"); a.length < t.length - 1;) a += "0";
                var s = u.O$.from(o),
                    f = u.O$.from(a),
                    l = s.mul(t).add(f);
                return n && (l = l.mul(h)), l
            }
            var y = function() {
                    function e(r, t, i, o) {
                        (0, n.Z)(this, e), r !== f && c.throwError("cannot use FixedFormat constructor; use FixedFormat.from", a.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "new FixedFormat"
                        }), this.signed = t, this.width = i, this.decimals = o, this.name = (t ? "" : "u") + "fixed" + String(i) + "x" + String(o), this._multiplier = v(o), Object.freeze(this)
                    }
                    return (0, i.Z)(e, null, [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            "number" === typeof r && (r = "fixed128x".concat(r));
                            var t = !0,
                                n = 128,
                                i = 18;
                            if ("string" === typeof r)
                                if ("fixed" === r);
                                else if ("ufixed" === r) t = !1;
                            else {
                                var o = r.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                                o || c.throwArgumentError("invalid fixed format", "format", r), t = "u" !== o[1], n = parseInt(o[2]), i = parseInt(o[3])
                            } else if (r) {
                                var a = function(e, t, n) {
                                    return null == r[e] ? n : (typeof r[e] !== t && c.throwArgumentError("invalid fixed format (" + e + " not " + t + ")", "format." + e, r[e]), r[e])
                                };
                                t = a("signed", "boolean", t), n = a("width", "number", n), i = a("decimals", "number", i)
                            }
                            return n % 8 && c.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", n), i > 80 && c.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", i), new e(f, t, n, i)
                        }
                    }]), e
                }(),
                b = function() {
                    function e(r, t, i, o) {
                        (0, n.Z)(this, e), r !== f && c.throwError("cannot use FixedNumber constructor; use FixedNumber.from", a.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "new FixedFormat"
                        }), this.format = o, this._hex = t, this._value = i, this._isFixedNumber = !0, Object.freeze(this)
                    }
                    return (0, i.Z)(e, [{
                        key: "_checkFormat",
                        value: function(e) {
                            this.format.name !== e.format.name && c.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", e)
                        }
                    }, {
                        key: "addUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = m(this._value, this.format.decimals),
                                n = m(r._value, r.format.decimals);
                            return e.fromValue(t.add(n), this.format.decimals, this.format)
                        }
                    }, {
                        key: "subUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = m(this._value, this.format.decimals),
                                n = m(r._value, r.format.decimals);
                            return e.fromValue(t.sub(n), this.format.decimals, this.format)
                        }
                    }, {
                        key: "mulUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = m(this._value, this.format.decimals),
                                n = m(r._value, r.format.decimals);
                            return e.fromValue(t.mul(n).div(this.format._multiplier), this.format.decimals, this.format)
                        }
                    }, {
                        key: "divUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = m(this._value, this.format.decimals),
                                n = m(r._value, r.format.decimals);
                            return e.fromValue(t.mul(this.format._multiplier).div(n), this.format.decimals, this.format)
                        }
                    }, {
                        key: "floor",
                        value: function() {
                            var r = this.toString().split(".");
                            1 === r.length && r.push("0");
                            var t = e.from(r[0], this.format),
                                n = !r[1].match(/^(0*)$/);
                            return this.isNegative() && n && (t = t.subUnsafe(E.toFormat(t.format))), t
                        }
                    }, {
                        key: "ceiling",
                        value: function() {
                            var r = this.toString().split(".");
                            1 === r.length && r.push("0");
                            var t = e.from(r[0], this.format),
                                n = !r[1].match(/^(0*)$/);
                            return !this.isNegative() && n && (t = t.addUnsafe(E.toFormat(t.format))), t
                        }
                    }, {
                        key: "round",
                        value: function(r) {
                            null == r && (r = 0);
                            var t = this.toString().split(".");
                            if (1 === t.length && t.push("0"), (r < 0 || r > 80 || r % 1) && c.throwArgumentError("invalid decimal count", "decimals", r), t[1].length <= r) return this;
                            var n = e.from("1" + p.substring(0, r), this.format),
                                i = w.toFormat(this.format);
                            return this.mulUnsafe(n).addUnsafe(i).floor().divUnsafe(n)
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return "0.0" === this._value || "0" === this._value
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._value[0]
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return this._value
                        }
                    }, {
                        key: "toHexString",
                        value: function(e) {
                            if (null == e) return this._hex;
                            e % 8 && c.throwArgumentError("invalid byte width", "width", e);
                            var r = u.O$.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();
                            return (0, o.hexZeroPad)(r, e / 8)
                        }
                    }, {
                        key: "toUnsafeFloat",
                        value: function() {
                            return parseFloat(this.toString())
                        }
                    }, {
                        key: "toFormat",
                        value: function(r) {
                            return e.fromString(this._value, r)
                        }
                    }], [{
                        key: "fromValue",
                        value: function(r, t, n) {
                            return null != n || null == t || (0, u.Zm)(t) || (n = t, t = null), null == t && (t = 0), null == n && (n = "fixed"), e.fromString(g(r, t), y.from(n))
                        }
                    }, {
                        key: "fromString",
                        value: function(r, t) {
                            null == t && (t = "fixed");
                            var n = y.from(t),
                                i = m(r, n.decimals);
                            !n.signed && i.lt(l) && d("unsigned value cannot be negative", "overflow", "value", r);
                            var a = null;
                            n.signed ? a = i.toTwos(n.width).toHexString() : (a = i.toHexString(), a = (0, o.hexZeroPad)(a, n.width / 8));
                            var s = g(i, n.decimals);
                            return new e(f, a, s, n)
                        }
                    }, {
                        key: "fromBytes",
                        value: function(r, t) {
                            null == t && (t = "fixed");
                            var n = y.from(t);
                            if ((0, o.arrayify)(r).length > n.width / 8) throw new Error("overflow");
                            var i = u.O$.from(r);
                            n.signed && (i = i.fromTwos(n.width));
                            var a = i.toTwos((n.signed ? 0 : 1) + n.width).toHexString(),
                                s = g(i, n.decimals);
                            return new e(f, a, s, n)
                        }
                    }, {
                        key: "from",
                        value: function(r, t) {
                            if ("string" === typeof r) return e.fromString(r, t);
                            if ((0, o.isBytes)(r)) return e.fromBytes(r, t);
                            try {
                                return e.fromValue(r, 0, t)
                            } catch (n) {
                                if (n.code !== a.Logger.errors.INVALID_ARGUMENT) throw n
                            }
                            return c.throwArgumentError("invalid FixedNumber value", "value", r)
                        }
                    }, {
                        key: "isFixedNumber",
                        value: function(e) {
                            return !(!e || !e._isFixedNumber)
                        }
                    }]), e
                }(),
                E = b.from(1),
                w = b.from("0.5")
        },
        50905: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                BigNumber: function() {
                    return n.O$
                },
                FixedFormat: function() {
                    return i.xO
                },
                FixedNumber: function() {
                    return i.xs
                },
                _base16To36: function() {
                    return n.t2
                },
                _base36To16: function() {
                    return n.g$
                },
                formatFixed: function() {
                    return i.S5
                },
                parseFixed: function() {
                    return i.Ox
                }
            });
            var n = t(96812),
                i = t(28550)
        },
        53237: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                arrayify: function() {
                    return c
                },
                concat: function() {
                    return f
                },
                hexConcat: function() {
                    return y
                },
                hexDataLength: function() {
                    return g
                },
                hexDataSlice: function() {
                    return m
                },
                hexStripZeros: function() {
                    return E
                },
                hexValue: function() {
                    return b
                },
                hexZeroPad: function() {
                    return w
                },
                hexlify: function() {
                    return v
                },
                isBytes: function() {
                    return u
                },
                isBytesLike: function() {
                    return a
                },
                isHexString: function() {
                    return d
                },
                joinSignature: function() {
                    return k
                },
                splitSignature: function() {
                    return A
                },
                stripZeros: function() {
                    return l
                },
                zeroPad: function() {
                    return h
                }
            });
            var n = new(t(79094).Logger)("bytes/5.7.0");

            function i(e) {
                return !!e.toHexString
            }

            function o(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return o(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function a(e) {
                return d(e) && !(e.length % 2) || u(e)
            }

            function s(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function u(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!s(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!s(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function c(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), o(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e) && (e = e.toHexString()), d(e)) {
                    var a = e.substring(2);
                    a.length % 2 && ("left" === r.hexPad ? a = "0" + a : "right" === r.hexPad ? a += "0" : n.throwArgumentError("hex data is odd-length", "value", e));
                    for (var s = [], c = 0; c < a.length; c += 2) s.push(parseInt(a.substring(c, c + 2), 16));
                    return o(new Uint8Array(s))
                }
                return u(e) ? o(new Uint8Array(e)) : n.throwArgumentError("invalid arrayify value", "value", e)
            }

            function f(e) {
                var r = e.map((function(e) {
                        return c(e)
                    })),
                    t = r.reduce((function(e, r) {
                        return e + r.length
                    }), 0),
                    n = new Uint8Array(t);
                return r.reduce((function(e, r) {
                    return n.set(r, e), e + r.length
                }), 0), o(n)
            }

            function l(e) {
                var r = c(e);
                if (0 === r.length) return r;
                for (var t = 0; t < r.length && 0 === r[t];) t++;
                return t && (r = r.slice(t)), r
            }

            function h(e, r) {
                (e = c(e)).length > r && n.throwArgumentError("value out of range", "value", arguments[0]);
                var t = new Uint8Array(r);
                return t.set(e, r - e.length), o(t)
            }

            function d(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var p = "0123456789abcdef";

            function v(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = p[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e)) return e.toHexString();
                if (d(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : n.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (u(e)) {
                    for (var o = "0x", a = 0; a < e.length; a++) {
                        var s = e[a];
                        o += p[(240 & s) >> 4] + p[15 & s]
                    }
                    return o
                }
                return n.throwArgumentError("invalid hexlify value", "value", e)
            }

            function g(e) {
                if ("string" !== typeof e) e = v(e);
                else if (!d(e) || e.length % 2) return null;
                return (e.length - 2) / 2
            }

            function m(e, r, t) {
                return "string" !== typeof e ? e = v(e) : (!d(e) || e.length % 2) && n.throwArgumentError("invalid hexData", "value", e), r = 2 + 2 * r, null != t ? "0x" + e.substring(r, 2 + 2 * t) : "0x" + e.substring(r)
            }

            function y(e) {
                var r = "0x";
                return e.forEach((function(e) {
                    r += v(e).substring(2)
                })), r
            }

            function b(e) {
                var r = E(v(e, {
                    hexPad: "left"
                }));
                return "0x" === r ? "0x0" : r
            }

            function E(e) {
                "string" !== typeof e && (e = v(e)), d(e) || n.throwArgumentError("invalid hex string", "value", e), e = e.substring(2);
                for (var r = 0; r < e.length && "0" === e[r];) r++;
                return "0x" + e.substring(r)
            }

            function w(e, r) {
                for ("string" !== typeof e ? e = v(e) : d(e) || n.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && n.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }

            function A(e) {
                var r = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (a(e)) {
                    var t = c(e);
                    64 === t.length ? (r.v = 27 + (t[32] >> 7), t[32] &= 127, r.r = v(t.slice(0, 32)), r.s = v(t.slice(32, 64))) : 65 === t.length ? (r.r = v(t.slice(0, 32)), r.s = v(t.slice(32, 64)), r.v = t[64]) : n.throwArgumentError("invalid signature string", "signature", e), r.v < 27 && (0 === r.v || 1 === r.v ? r.v += 27 : n.throwArgumentError("signature invalid v byte", "signature", e)), r.recoveryParam = 1 - r.v % 2, r.recoveryParam && (t[32] |= 128), r._vs = v(t.slice(32, 64))
                } else {
                    if (r.r = e.r, r.s = e.s, r.v = e.v, r.recoveryParam = e.recoveryParam, r._vs = e._vs, null != r._vs) {
                        var i = h(c(r._vs), 32);
                        r._vs = v(i);
                        var o = i[0] >= 128 ? 1 : 0;
                        null == r.recoveryParam ? r.recoveryParam = o : r.recoveryParam !== o && n.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), i[0] &= 127;
                        var s = v(i);
                        null == r.s ? r.s = s : r.s !== s && n.throwArgumentError("signature v mismatch _vs", "signature", e)
                    }
                    if (null == r.recoveryParam) null == r.v ? n.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === r.v || 1 === r.v ? r.recoveryParam = r.v : r.recoveryParam = 1 - r.v % 2;
                    else if (null == r.v) r.v = 27 + r.recoveryParam;
                    else {
                        var u = 0 === r.v || 1 === r.v ? r.v : 1 - r.v % 2;
                        r.recoveryParam !== u && n.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                    }
                    null != r.r && d(r.r) ? r.r = w(r.r, 32) : n.throwArgumentError("signature missing or invalid r", "signature", e), null != r.s && d(r.s) ? r.s = w(r.s, 32) : n.throwArgumentError("signature missing or invalid s", "signature", e);
                    var f = c(r.s);
                    f[0] >= 128 && n.throwArgumentError("signature s out of range", "signature", e), r.recoveryParam && (f[0] |= 128);
                    var l = v(f);
                    r._vs && (d(r._vs) || n.throwArgumentError("signature invalid _vs", "signature", e), r._vs = w(r._vs, 32)), null == r._vs ? r._vs = l : r._vs !== l && n.throwArgumentError("signature _vs mismatch v and s", "signature", e)
                }
                return r.yParityAndS = r._vs, r.compact = r.r + r.yParityAndS.substring(2), r
            }

            function k(e) {
                return v(f([(e = A(e)).r, e.s, e.recoveryParam ? "0x1c" : "0x1b"]))
            }
        },
        17237: function(e, r, t) {
            "use strict";
            t.d(r, {
                d: function() {
                    return n
                }
            });
            var n = "0x0000000000000000000000000000000000000000"
        },
        86217: function(e, r, t) {
            "use strict";
            t.d(r, {
                $B: function() {
                    return f
                },
                Bz: function() {
                    return c
                },
                Ce: function() {
                    return u
                },
                PS: function() {
                    return l
                },
                Py: function() {
                    return s
                },
                _Y: function() {
                    return o
                },
                fh: function() {
                    return a
                },
                tL: function() {
                    return i
                }
            });
            var n = t(96812),
                i = n.O$.from(-1),
                o = n.O$.from(0),
                a = n.O$.from(1),
                s = n.O$.from(2),
                u = n.O$.from("1000000000000000000"),
                c = n.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                f = n.O$.from("-0x8000000000000000000000000000000000000000000000000000000000000000"),
                l = n.O$.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
        },
        70956: function(e, r, t) {
            "use strict";
            t.d(r, {
                R: function() {
                    return n
                }
            });
            var n = "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        56579: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                AddressZero: function() {
                    return n.d
                },
                EtherSymbol: function() {
                    return a
                },
                HashZero: function() {
                    return o.R
                },
                MaxInt256: function() {
                    return i.PS
                },
                MaxUint256: function() {
                    return i.Bz
                },
                MinInt256: function() {
                    return i.$B
                },
                NegativeOne: function() {
                    return i.tL
                },
                One: function() {
                    return i.fh
                },
                Two: function() {
                    return i.Py
                },
                WeiPerEther: function() {
                    return i.Ce
                },
                Zero: function() {
                    return i._Y
                }
            });
            var n = t(17237),
                i = t(86217),
                o = t(70956),
                a = "\u039e"
        },
        739: function(e, r, t) {
            "use strict";
            t.d(r, {
                VZ: function() {
                    return F
                },
                CH: function() {
                    return D
                },
                lV: function() {
                    return M
                }
            });
            var n = t(31303),
                i = t(6148),
                o = t(44474),
                a = t(53538),
                s = t(81020),
                u = t(18992),
                c = t(27853),
                f = t(84531),
                l = t(27166),
                h = t(57802),
                d = t(63235),
                p = t(99221),
                v = t(80155),
                g = t(4477),
                m = t(96812),
                y = t(53237),
                b = t(87549),
                E = t(42442),
                w = t(79094),
                A = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                k = new w.Logger("contracts/5.6.2"),
                N = {
                    chainId: !0,
                    data: !0,
                    from: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    value: !0,
                    type: !0,
                    accessList: !0,
                    maxFeePerGas: !0,
                    maxPriorityFeePerGas: !0,
                    customData: !0,
                    ccipReadEnabled: !0
                };

            function R(e, r) {
                return A(this, void 0, void 0, (0, l.Z)().mark((function t() {
                    var n, i;
                    return (0, l.Z)().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.next = 2, r;
                            case 2:
                                return "string" !== typeof(n = t.sent) && k.throwArgumentError("invalid address or ENS name", "name", n), t.prev = 4, t.abrupt("return", (0, g.getAddress)(n));
                            case 8:
                                t.prev = 8, t.t0 = t.catch(4);
                            case 10:
                                return e || k.throwError("a provider or signer is needed to resolve ENS names", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "resolveName"
                                }), t.next = 13, e.resolveName(n);
                            case 13:
                                return null == (i = t.sent) && k.throwArgumentError("resolver or addr is not configured for ENS name", "name", n), t.abrupt("return", i);
                            case 16:
                            case "end":
                                return t.stop()
                        }
                    }), t, null, [
                        [4, 8]
                    ])
                })))
            }

            function x(e, r, t) {
                return A(this, void 0, void 0, (0, l.Z)().mark((function n() {
                    return (0, l.Z)().wrap((function(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                if (!Array.isArray(t)) {
                                    n.next = 4;
                                    break
                                }
                                return n.next = 3, Promise.all(t.map((function(t, n) {
                                    return x(e, Array.isArray(r) ? r[n] : r[t.name], t)
                                })));
                            case 3:
                            case 7:
                            case 11:
                            case 17:
                                return n.abrupt("return", n.sent);
                            case 4:
                                if ("address" !== t.type) {
                                    n.next = 8;
                                    break
                                }
                                return n.next = 7, R(e, r);
                            case 8:
                                if ("tuple" !== t.type) {
                                    n.next = 12;
                                    break
                                }
                                return n.next = 11, x(e, r, t.components);
                            case 12:
                                if ("array" !== t.baseType) {
                                    n.next = 18;
                                    break
                                }
                                if (Array.isArray(r)) {
                                    n.next = 15;
                                    break
                                }
                                return n.abrupt("return", Promise.reject(k.makeError("invalid value for array", w.Logger.errors.INVALID_ARGUMENT, {
                                    argument: "value",
                                    value: r
                                })));
                            case 15:
                                return n.next = 17, Promise.all(r.map((function(r) {
                                    return x(e, r, t.arrayChildren)
                                })));
                            case 18:
                                return n.abrupt("return", r);
                            case 19:
                            case "end":
                                return n.stop()
                        }
                    }), n)
                })))
            }

            function I(e, r, t) {
                return A(this, void 0, void 0, (0, l.Z)().mark((function n() {
                    var i, o, a, s, u, c, f, h, d, p, v = this;
                    return (0, l.Z)().wrap((function(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                return i = {}, t.length === r.inputs.length + 1 && "object" === typeof t[t.length - 1] && (i = (0, b.shallowCopy)(t.pop())), k.checkArgumentCount(t.length, r.inputs.length, "passed to contract"), e.signer ? i.from ? i.from = (0, b.resolveProperties)({
                                    override: R(e.signer, i.from),
                                    signer: e.signer.getAddress()
                                }).then((function(e) {
                                    return A(v, void 0, void 0, (0, l.Z)().mark((function r() {
                                        return (0, l.Z)().wrap((function(r) {
                                            for (;;) switch (r.prev = r.next) {
                                                case 0:
                                                    return (0, g.getAddress)(e.signer) !== e.override && k.throwError("Contract with a Signer cannot override from", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                                        operation: "overrides.from"
                                                    }), r.abrupt("return", e.override);
                                                case 2:
                                                case "end":
                                                    return r.stop()
                                            }
                                        }), r)
                                    })))
                                })) : i.from = e.signer.getAddress() : i.from && (i.from = R(e.provider, i.from)), n.next = 6, (0, b.resolveProperties)({
                                    args: x(e.signer || e.provider, t, r.inputs),
                                    address: e.resolvedAddress,
                                    overrides: (0, b.resolveProperties)(i) || {}
                                });
                            case 6:
                                if (o = n.sent, a = e.interface.encodeFunctionData(r, o.args), s = {
                                        data: a,
                                        to: o.address
                                    }, null != (u = o.overrides).nonce && (s.nonce = m.O$.from(u.nonce).toNumber()), null != u.gasLimit && (s.gasLimit = m.O$.from(u.gasLimit)), null != u.gasPrice && (s.gasPrice = m.O$.from(u.gasPrice)), null != u.maxFeePerGas && (s.maxFeePerGas = m.O$.from(u.maxFeePerGas)), null != u.maxPriorityFeePerGas && (s.maxPriorityFeePerGas = m.O$.from(u.maxPriorityFeePerGas)), null != u.from && (s.from = u.from), null != u.type && (s.type = u.type), null != u.accessList && (s.accessList = (0, E.accessListify)(u.accessList)), null == s.gasLimit && null != r.gas) {
                                    for (c = 21e3, f = (0, y.arrayify)(a), h = 0; h < f.length; h++) c += 4, f[h] && (c += 64);
                                    s.gasLimit = m.O$.from(r.gas).add(c)
                                }
                                return u.value && ((d = m.O$.from(u.value)).isZero() || r.payable || k.throwError("non-payable method cannot override value", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "overrides.value",
                                    value: i.value
                                }), s.value = d), u.customData && (s.customData = (0, b.shallowCopy)(u.customData)), u.ccipReadEnabled && (s.ccipReadEnabled = !!u.ccipReadEnabled), delete i.nonce, delete i.gasLimit, delete i.gasPrice, delete i.from, delete i.value, delete i.type, delete i.accessList, delete i.maxFeePerGas, delete i.maxPriorityFeePerGas, delete i.customData, delete i.ccipReadEnabled, (p = Object.keys(i).filter((function(e) {
                                    return null != i[e]
                                }))).length && k.throwError("cannot override ".concat(p.map((function(e) {
                                    return JSON.stringify(e)
                                })).join(",")), w.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "overrides",
                                    overrides: p
                                }), n.abrupt("return", s);
                            case 36:
                            case "end":
                                return n.stop()
                        }
                    }), n)
                })))
            }

            function P(e, r) {
                var t = r.wait.bind(r);
                r.wait = function(r) {
                    return t(r).then((function(r) {
                        return r.events = r.logs.map((function(t) {
                            var n = (0, b.deepCopy)(t),
                                i = null;
                            try {
                                i = e.interface.parseLog(t)
                            } catch (o) {}
                            return i && (n.args = i.args, n.decode = function(r, t) {
                                return e.interface.decodeEventLog(i.eventFragment, r, t)
                            }, n.event = i.name, n.eventSignature = i.signature), n.removeListener = function() {
                                return e.provider
                            }, n.getBlock = function() {
                                return e.provider.getBlock(r.blockHash)
                            }, n.getTransaction = function() {
                                return e.provider.getTransaction(r.transactionHash)
                            }, n.getTransactionReceipt = function() {
                                return Promise.resolve(r)
                            }, n
                        })), r
                    }))
                }
            }

            function S(e, r, t) {
                var n = e.signer || e.provider;
                return function() {
                    for (var i = arguments.length, o = new Array(i), a = 0; a < i; a++) o[a] = arguments[a];
                    return A(this, void 0, void 0, (0, l.Z)().mark((function i() {
                        var a, s, u, c, f;
                        return (0, l.Z)().wrap((function(i) {
                            for (;;) switch (i.prev = i.next) {
                                case 0:
                                    if (a = void 0, o.length !== r.inputs.length + 1 || "object" !== typeof o[o.length - 1]) {
                                        i.next = 9;
                                        break
                                    }
                                    if (null == (s = (0, b.shallowCopy)(o.pop())).blockTag) {
                                        i.next = 7;
                                        break
                                    }
                                    return i.next = 6, s.blockTag;
                                case 6:
                                    a = i.sent;
                                case 7:
                                    delete s.blockTag, o.push(s);
                                case 9:
                                    if (null == e.deployTransaction) {
                                        i.next = 12;
                                        break
                                    }
                                    return i.next = 12, e._deployed(a);
                                case 12:
                                    return i.next = 14, I(e, r, o);
                                case 14:
                                    return u = i.sent, i.next = 17, n.call(u, a);
                                case 17:
                                    return c = i.sent, i.prev = 18, f = e.interface.decodeFunctionResult(r, c), t && 1 === r.outputs.length && (f = f[0]), i.abrupt("return", f);
                                case 24:
                                    throw i.prev = 24, i.t0 = i.catch(18), i.t0.code === w.Logger.errors.CALL_EXCEPTION && (i.t0.address = e.address, i.t0.args = o, i.t0.transaction = u), i.t0;
                                case 28:
                                case "end":
                                    return i.stop()
                            }
                        }), i, null, [
                            [18, 24]
                        ])
                    })))
                }
            }

            function _(e, r, t) {
                return r.constant ? S(e, r, t) : function(e, r) {
                    return function() {
                        for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) n[i] = arguments[i];
                        return A(this, void 0, void 0, (0, l.Z)().mark((function t() {
                            var i, o;
                            return (0, l.Z)().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        if (e.signer || k.throwError("sending a transaction requires a signer", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "sendTransaction"
                                            }), null == e.deployTransaction) {
                                            t.next = 4;
                                            break
                                        }
                                        return t.next = 4, e._deployed();
                                    case 4:
                                        return t.next = 6, I(e, r, n);
                                    case 6:
                                        return i = t.sent, t.next = 9, e.signer.sendTransaction(i);
                                    case 9:
                                        return o = t.sent, P(e, o), t.abrupt("return", o);
                                    case 12:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })))
                    }
                }(e, r)
            }

            function T(e) {
                return !e.address || null != e.topics && 0 !== e.topics.length ? (e.address || "*") + "@" + (e.topics ? e.topics.map((function(e) {
                    return Array.isArray(e) ? e.join("|") : e
                })).join(":") : "") : "*"
            }
            var O = function() {
                    function e(r, t) {
                        (0, c.Z)(this, e), (0, b.defineReadOnly)(this, "tag", r), (0, b.defineReadOnly)(this, "filter", t), this._listeners = []
                    }
                    return (0, f.Z)(e, [{
                        key: "addListener",
                        value: function(e, r) {
                            this._listeners.push({
                                listener: e,
                                once: r
                            })
                        }
                    }, {
                        key: "removeListener",
                        value: function(e) {
                            var r = !1;
                            this._listeners = this._listeners.filter((function(t) {
                                return !(!r && t.listener === e) || (r = !0, !1)
                            }))
                        }
                    }, {
                        key: "removeAllListeners",
                        value: function() {
                            this._listeners = []
                        }
                    }, {
                        key: "listeners",
                        value: function() {
                            return this._listeners.map((function(e) {
                                return e.listener
                            }))
                        }
                    }, {
                        key: "listenerCount",
                        value: function() {
                            return this._listeners.length
                        }
                    }, {
                        key: "run",
                        value: function(e) {
                            var r = this,
                                t = this.listenerCount();
                            return this._listeners = this._listeners.filter((function(t) {
                                var n = e.slice();
                                return setTimeout((function() {
                                    t.listener.apply(r, n)
                                }), 0), !t.once
                            })), t
                        }
                    }, {
                        key: "prepareEvent",
                        value: function(e) {}
                    }, {
                        key: "getEmit",
                        value: function(e) {
                            return [e]
                        }
                    }]), e
                }(),
                C = function(e) {
                    (0, s.Z)(t, e);
                    var r = (0, u.Z)(t);

                    function t() {
                        return (0, c.Z)(this, t), r.call(this, "error", null)
                    }
                    return (0, f.Z)(t)
                }(O),
                U = function(e) {
                    (0, s.Z)(t, e);
                    var r = (0, u.Z)(t);

                    function t(e, n, o, a) {
                        var s;
                        (0, c.Z)(this, t);
                        var u = {
                                address: e
                            },
                            f = n.getEventTopic(o);
                        return a ? (f !== a[0] && k.throwArgumentError("topic mismatch", "topics", a), u.topics = a.slice()) : u.topics = [f], s = r.call(this, T(u), u), (0, b.defineReadOnly)((0, i.Z)(s), "address", e), (0, b.defineReadOnly)((0, i.Z)(s), "interface", n), (0, b.defineReadOnly)((0, i.Z)(s), "fragment", o), s
                    }
                    return (0, f.Z)(t, [{
                        key: "prepareEvent",
                        value: function(e) {
                            var r = this;
                            (0, o.Z)((0, a.Z)(t.prototype), "prepareEvent", this).call(this, e), e.event = this.fragment.name, e.eventSignature = this.fragment.format(), e.decode = function(e, t) {
                                return r.interface.decodeEventLog(r.fragment, e, t)
                            };
                            try {
                                e.args = this.interface.decodeEventLog(this.fragment, e.data, e.topics)
                            } catch (n) {
                                e.args = null, e.decodeError = n
                            }
                        }
                    }, {
                        key: "getEmit",
                        value: function(e) {
                            var r = (0, h.BR)(e.args);
                            if (r.length) throw r[0].error;
                            var t = (e.args || []).slice();
                            return t.push(e), t
                        }
                    }]), t
                }(O),
                L = function(e) {
                    (0, s.Z)(t, e);
                    var r = (0, u.Z)(t);

                    function t(e, n) {
                        var o;
                        return (0, c.Z)(this, t), o = r.call(this, "*", {
                            address: e
                        }), (0, b.defineReadOnly)((0, i.Z)(o), "address", e), (0, b.defineReadOnly)((0, i.Z)(o), "interface", n), o
                    }
                    return (0, f.Z)(t, [{
                        key: "prepareEvent",
                        value: function(e) {
                            var r = this;
                            (0, o.Z)((0, a.Z)(t.prototype), "prepareEvent", this).call(this, e);
                            try {
                                var n = this.interface.parseLog(e);
                                e.event = n.name, e.eventSignature = n.signature, e.decode = function(e, t) {
                                    return r.interface.decodeEventLog(n.eventFragment, e, t)
                                }, e.args = n.args
                            } catch (i) {}
                        }
                    }]), t
                }(O),
                F = function() {
                    function e(r, t, n) {
                        var i = this;
                        (0, c.Z)(this, e), (0, b.defineReadOnly)(this, "interface", (0, b.getStatic)(this instanceof e ? this.constructor : void 0, "getInterface")(t)), null == n ? ((0, b.defineReadOnly)(this, "provider", null), (0, b.defineReadOnly)(this, "signer", null)) : v.E.isSigner(n) ? ((0, b.defineReadOnly)(this, "provider", n.provider || null), (0, b.defineReadOnly)(this, "signer", n)) : p.zt.isProvider(n) ? ((0, b.defineReadOnly)(this, "provider", n), (0, b.defineReadOnly)(this, "signer", null)) : k.throwArgumentError("invalid signer or provider", "signerOrProvider", n), (0, b.defineReadOnly)(this, "callStatic", {}), (0, b.defineReadOnly)(this, "estimateGas", {}), (0, b.defineReadOnly)(this, "functions", {}), (0, b.defineReadOnly)(this, "populateTransaction", {}), (0, b.defineReadOnly)(this, "filters", {});
                        var o = {};
                        if (Object.keys(this.interface.events).forEach((function(e) {
                                var r = i.interface.events[e];
                                (0, b.defineReadOnly)(i.filters, e, (function() {
                                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                                    return {
                                        address: i.address,
                                        topics: i.interface.encodeFilterTopics(r, t)
                                    }
                                })), o[r.name] || (o[r.name] = []), o[r.name].push(e)
                            })), Object.keys(o).forEach((function(e) {
                                var r = o[e];
                                1 === r.length ? (0, b.defineReadOnly)(i.filters, e, i.filters[r[0]]) : k.warn("Duplicate definition of ".concat(e, " (").concat(r.join(", "), ")"))
                            })), (0, b.defineReadOnly)(this, "_runningEvents", {}), (0, b.defineReadOnly)(this, "_wrappedEmits", {}), null == r && k.throwArgumentError("invalid contract address or ENS name", "addressOrName", r), (0, b.defineReadOnly)(this, "address", r), this.provider)(0, b.defineReadOnly)(this, "resolvedAddress", R(this.provider, r));
                        else try {
                            (0, b.defineReadOnly)(this, "resolvedAddress", Promise.resolve((0, g.getAddress)(r)))
                        } catch (u) {
                            k.throwError("provider is required to use ENS name as contract address", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "new Contract"
                            })
                        }
                        this.resolvedAddress.catch((function(e) {}));
                        var a = {},
                            s = {};
                        Object.keys(this.interface.functions).forEach((function(e) {
                            var r = i.interface.functions[e];
                            if (s[e]) k.warn("Duplicate ABI entry for ".concat(JSON.stringify(e)));
                            else {
                                s[e] = !0;
                                var t = r.name;
                                a["%".concat(t)] || (a["%".concat(t)] = []), a["%".concat(t)].push(e), null == i[e] && (0, b.defineReadOnly)(i, e, _(i, r, !0)), null == i.functions[e] && (0, b.defineReadOnly)(i.functions, e, _(i, r, !1)), null == i.callStatic[e] && (0, b.defineReadOnly)(i.callStatic, e, S(i, r, !0)), null == i.populateTransaction[e] && (0, b.defineReadOnly)(i.populateTransaction, e, function(e, r) {
                                    return function() {
                                        for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++) n[i] = arguments[i];
                                        return I(e, r, n)
                                    }
                                }(i, r)), null == i.estimateGas[e] && (0, b.defineReadOnly)(i.estimateGas, e, function(e, r) {
                                    var t = e.signer || e.provider;
                                    return function() {
                                        for (var n = arguments.length, i = new Array(n), o = 0; o < n; o++) i[o] = arguments[o];
                                        return A(this, void 0, void 0, (0, l.Z)().mark((function n() {
                                            var o;
                                            return (0, l.Z)().wrap((function(n) {
                                                for (;;) switch (n.prev = n.next) {
                                                    case 0:
                                                        return t || k.throwError("estimate require a provider or signer", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                                            operation: "estimateGas"
                                                        }), n.next = 3, I(e, r, i);
                                                    case 3:
                                                        return o = n.sent, n.next = 6, t.estimateGas(o);
                                                    case 6:
                                                        return n.abrupt("return", n.sent);
                                                    case 7:
                                                    case "end":
                                                        return n.stop()
                                                }
                                            }), n)
                                        })))
                                    }
                                }(i, r))
                            }
                        })), Object.keys(a).forEach((function(e) {
                            var r = a[e];
                            if (!(r.length > 1)) {
                                e = e.substring(1);
                                var t = r[0];
                                try {
                                    null == i[e] && (0, b.defineReadOnly)(i, e, i[t])
                                } catch (n) {}
                                null == i.functions[e] && (0, b.defineReadOnly)(i.functions, e, i.functions[t]), null == i.callStatic[e] && (0, b.defineReadOnly)(i.callStatic, e, i.callStatic[t]), null == i.populateTransaction[e] && (0, b.defineReadOnly)(i.populateTransaction, e, i.populateTransaction[t]), null == i.estimateGas[e] && (0, b.defineReadOnly)(i.estimateGas, e, i.estimateGas[t])
                            }
                        }))
                    }
                    return (0, f.Z)(e, [{
                        key: "deployed",
                        value: function() {
                            return this._deployed()
                        }
                    }, {
                        key: "_deployed",
                        value: function(e) {
                            var r = this;
                            return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then((function() {
                                return r
                            })) : this._deployedPromise = this.provider.getCode(this.address, e).then((function(e) {
                                return "0x" === e && k.throwError("contract not deployed", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                    contractAddress: r.address,
                                    operation: "getDeployed"
                                }), r
                            }))), this._deployedPromise
                        }
                    }, {
                        key: "fallback",
                        value: function(e) {
                            var r = this;
                            this.signer || k.throwError("sending a transactions require a signer", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "sendTransaction(fallback)"
                            });
                            var t = (0, b.shallowCopy)(e || {});
                            return ["from", "to"].forEach((function(e) {
                                null != t[e] && k.throwError("cannot override " + e, w.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: e
                                })
                            })), t.to = this.resolvedAddress, this.deployed().then((function() {
                                return r.signer.sendTransaction(t)
                            }))
                        }
                    }, {
                        key: "connect",
                        value: function(e) {
                            "string" === typeof e && (e = new v.b(e, this.provider));
                            var r = new this.constructor(this.address, this.interface, e);
                            return this.deployTransaction && (0, b.defineReadOnly)(r, "deployTransaction", this.deployTransaction), r
                        }
                    }, {
                        key: "attach",
                        value: function(e) {
                            return new this.constructor(e, this.interface, this.signer || this.provider)
                        }
                    }, {
                        key: "_normalizeRunningEvent",
                        value: function(e) {
                            return this._runningEvents[e.tag] ? this._runningEvents[e.tag] : e
                        }
                    }, {
                        key: "_getRunningEvent",
                        value: function(e) {
                            if ("string" === typeof e) {
                                if ("error" === e) return this._normalizeRunningEvent(new C);
                                if ("event" === e) return this._normalizeRunningEvent(new O("event", null));
                                if ("*" === e) return this._normalizeRunningEvent(new L(this.address, this.interface));
                                var r = this.interface.getEvent(e);
                                return this._normalizeRunningEvent(new U(this.address, this.interface, r))
                            }
                            if (e.topics && e.topics.length > 0) {
                                try {
                                    var t = e.topics[0];
                                    if ("string" !== typeof t) throw new Error("invalid topic");
                                    var n = this.interface.getEvent(t);
                                    return this._normalizeRunningEvent(new U(this.address, this.interface, n, e.topics))
                                } catch (o) {}
                                var i = {
                                    address: this.address,
                                    topics: e.topics
                                };
                                return this._normalizeRunningEvent(new O(T(i), i))
                            }
                            return this._normalizeRunningEvent(new L(this.address, this.interface))
                        }
                    }, {
                        key: "_checkRunningEvents",
                        value: function(e) {
                            if (0 === e.listenerCount()) {
                                delete this._runningEvents[e.tag];
                                var r = this._wrappedEmits[e.tag];
                                r && e.filter && (this.provider.off(e.filter, r), delete this._wrappedEmits[e.tag])
                            }
                        }
                    }, {
                        key: "_wrapEvent",
                        value: function(e, r, t) {
                            var n = this,
                                i = (0, b.deepCopy)(r);
                            return i.removeListener = function() {
                                t && (e.removeListener(t), n._checkRunningEvents(e))
                            }, i.getBlock = function() {
                                return n.provider.getBlock(r.blockHash)
                            }, i.getTransaction = function() {
                                return n.provider.getTransaction(r.transactionHash)
                            }, i.getTransactionReceipt = function() {
                                return n.provider.getTransactionReceipt(r.transactionHash)
                            }, e.prepareEvent(i), i
                        }
                    }, {
                        key: "_addEventListener",
                        value: function(e, r, t) {
                            var i = this;
                            if (this.provider || k.throwError("events require a provider or a signer with a provider", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "once"
                                }), e.addListener(r, t), this._runningEvents[e.tag] = e, !this._wrappedEmits[e.tag]) {
                                var o = function(t) {
                                    var o = i._wrapEvent(e, t, r);
                                    if (null == o.decodeError) try {
                                        var a = e.getEmit(o);
                                        i.emit.apply(i, [e.filter].concat((0, n.Z)(a)))
                                    } catch (s) {
                                        o.decodeError = s.error
                                    }
                                    null != e.filter && i.emit("event", o), null != o.decodeError && i.emit("error", o.decodeError, o)
                                };
                                this._wrappedEmits[e.tag] = o, null != e.filter && this.provider.on(e.filter, o)
                            }
                        }
                    }, {
                        key: "queryFilter",
                        value: function(e, r, t) {
                            var n = this,
                                i = this._getRunningEvent(e),
                                o = (0, b.shallowCopy)(i.filter);
                            return "string" === typeof r && (0, y.isHexString)(r, 32) ? (null != t && k.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", t), o.blockHash = r) : (o.fromBlock = null != r ? r : 0, o.toBlock = null != t ? t : "latest"), this.provider.getLogs(o).then((function(e) {
                                return e.map((function(e) {
                                    return n._wrapEvent(i, e, null)
                                }))
                            }))
                        }
                    }, {
                        key: "on",
                        value: function(e, r) {
                            return this._addEventListener(this._getRunningEvent(e), r, !1), this
                        }
                    }, {
                        key: "once",
                        value: function(e, r) {
                            return this._addEventListener(this._getRunningEvent(e), r, !0), this
                        }
                    }, {
                        key: "emit",
                        value: function(e) {
                            if (!this.provider) return !1;
                            for (var r = this._getRunningEvent(e), t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];
                            var o = r.run(n) > 0;
                            return this._checkRunningEvents(r), o
                        }
                    }, {
                        key: "listenerCount",
                        value: function(e) {
                            var r = this;
                            return this.provider ? null == e ? Object.keys(this._runningEvents).reduce((function(e, t) {
                                return e + r._runningEvents[t].listenerCount()
                            }), 0) : this._getRunningEvent(e).listenerCount() : 0
                        }
                    }, {
                        key: "listeners",
                        value: function(e) {
                            if (!this.provider) return [];
                            if (null == e) {
                                var r = [];
                                for (var t in this._runningEvents) this._runningEvents[t].listeners().forEach((function(e) {
                                    r.push(e)
                                }));
                                return r
                            }
                            return this._getRunningEvent(e).listeners()
                        }
                    }, {
                        key: "removeAllListeners",
                        value: function(e) {
                            if (!this.provider) return this;
                            if (null == e) {
                                for (var r in this._runningEvents) {
                                    var t = this._runningEvents[r];
                                    t.removeAllListeners(), this._checkRunningEvents(t)
                                }
                                return this
                            }
                            var n = this._getRunningEvent(e);
                            return n.removeAllListeners(), this._checkRunningEvents(n), this
                        }
                    }, {
                        key: "off",
                        value: function(e, r) {
                            if (!this.provider) return this;
                            var t = this._getRunningEvent(e);
                            return t.removeListener(r), this._checkRunningEvents(t), this
                        }
                    }, {
                        key: "removeListener",
                        value: function(e, r) {
                            return this.off(e, r)
                        }
                    }], [{
                        key: "getContractAddress",
                        value: function(e) {
                            return (0, g.getContractAddress)(e)
                        }
                    }, {
                        key: "getInterface",
                        value: function(e) {
                            return d.vU.isInterface(e) ? e : new d.vU(e)
                        }
                    }, {
                        key: "isIndexed",
                        value: function(e) {
                            return d.Hk.isIndexed(e)
                        }
                    }]), e
                }(),
                D = function(e) {
                    (0, s.Z)(t, e);
                    var r = (0, u.Z)(t);

                    function t() {
                        return (0, c.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, f.Z)(t)
                }(F),
                M = function() {
                    function e(r, t, n) {
                        (0, c.Z)(this, e);
                        var i = null;
                        "0x" !== (i = "string" === typeof t ? t : (0, y.isBytes)(t) ? (0, y.hexlify)(t) : t && "string" === typeof t.object ? t.object : "!").substring(0, 2) && (i = "0x" + i), (!(0, y.isHexString)(i) || i.length % 2) && k.throwArgumentError("invalid bytecode", "bytecode", t), n && !v.E.isSigner(n) && k.throwArgumentError("invalid signer", "signer", n), (0, b.defineReadOnly)(this, "bytecode", i), (0, b.defineReadOnly)(this, "interface", (0, b.getStatic)(this instanceof e ? this.constructor : void 0, "getInterface")(r)), (0, b.defineReadOnly)(this, "signer", n || null)
                    }
                    return (0, f.Z)(e, [{
                        key: "getDeployTransaction",
                        value: function() {
                            for (var e = {}, r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            if (t.length === this.interface.deploy.inputs.length + 1 && "object" === typeof t[t.length - 1])
                                for (var i in e = (0, b.shallowCopy)(t.pop()))
                                    if (!N[i]) throw new Error("unknown transaction override " + i);
                            (["data", "from", "to"].forEach((function(r) {
                                null != e[r] && k.throwError("cannot override " + r, w.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: r
                                })
                            })), e.value) && (m.O$.from(e.value).isZero() || this.interface.deploy.payable || k.throwError("non-payable constructor cannot override value", w.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "overrides.value",
                                value: e.value
                            }));
                            return k.checkArgumentCount(t.length, this.interface.deploy.inputs.length, " in Contract constructor"), e.data = (0, y.hexlify)((0, y.concat)([this.bytecode, this.interface.encodeDeploy(t)])), e
                        }
                    }, {
                        key: "deploy",
                        value: function() {
                            for (var e = arguments.length, r = new Array(e), t = 0; t < e; t++) r[t] = arguments[t];
                            return A(this, void 0, void 0, (0, l.Z)().mark((function e() {
                                var t, i, o, a, s, u;
                                return (0, l.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return t = {}, r.length === this.interface.deploy.inputs.length + 1 && (t = r.pop()), k.checkArgumentCount(r.length, this.interface.deploy.inputs.length, " in Contract constructor"), e.next = 5, x(this.signer, r, this.interface.deploy.inputs);
                                        case 5:
                                            return (i = e.sent).push(t), o = this.getDeployTransaction.apply(this, (0, n.Z)(i)), e.next = 10, this.signer.sendTransaction(o);
                                        case 10:
                                            return a = e.sent, s = (0, b.getStatic)(this.constructor, "getContractAddress")(a), P(u = (0, b.getStatic)(this.constructor, "getContract")(s, this.interface, this.signer), a), (0, b.defineReadOnly)(u, "deployTransaction", a), e.abrupt("return", u);
                                        case 16:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "attach",
                        value: function(e) {
                            return this.constructor.getContract(e, this.interface, this.signer)
                        }
                    }, {
                        key: "connect",
                        value: function(e) {
                            return new this.constructor(this.interface, this.bytecode, e)
                        }
                    }], [{
                        key: "fromSolidity",
                        value: function(e, r) {
                            null == e && k.throwError("missing compiler output", w.Logger.errors.MISSING_ARGUMENT, {
                                argument: "compilerOutput"
                            }), "string" === typeof e && (e = JSON.parse(e));
                            var t = e.abi,
                                n = null;
                            return e.bytecode ? n = e.bytecode : e.evm && e.evm.bytecode && (n = e.evm.bytecode), new this(t, n, r)
                        }
                    }, {
                        key: "getInterface",
                        value: function(e) {
                            return D.getInterface(e)
                        }
                    }, {
                        key: "getContractAddress",
                        value: function(e) {
                            return (0, g.getContractAddress)(e)
                        }
                    }, {
                        key: "getContract",
                        value: function(e, r, t) {
                            return new D(e, r, t)
                        }
                    }]), e
                }()
        },
        21651: function(e, r, t) {
            "use strict";
            t.d(r, {
                i: function() {
                    return n
                }
            });
            var n = "hash/5.7.0"
        },
        16939: function(e, r, t) {
            "use strict";
            t.d(r, {
                id: function() {
                    return o
                }
            });
            var n = t(81e3),
                i = t(9759);

            function o(e) {
                return (0, n.keccak256)((0, i.Y0)(e))
            }
        },
        71370: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                _TypedDataEncoder: function() {
                    return a.E
                },
                dnsEncode: function() {
                    return i.Kn
                },
                ensNormalize: function() {
                    return i.w3
                },
                hashMessage: function() {
                    return o.r
                },
                id: function() {
                    return n.id
                },
                isValidName: function() {
                    return i.r1
                },
                messagePrefix: function() {
                    return o.B
                },
                namehash: function() {
                    return i.VM
                }
            });
            var n = t(16939),
                i = t(3910),
                o = t(50001),
                a = t(81795)
        },
        50001: function(e, r, t) {
            "use strict";
            t.d(r, {
                B: function() {
                    return a
                },
                r: function() {
                    return s
                }
            });
            var n = t(53237),
                i = t(81e3),
                o = t(9759),
                a = "\x19Ethereum Signed Message:\n";

            function s(e) {
                return "string" === typeof e && (e = (0, o.Y0)(e)), (0, i.keccak256)((0, n.concat)([(0, o.Y0)(a), (0, o.Y0)(String(e.length)), e]))
            }
        },
        3910: function(e, r, t) {
            "use strict";
            t.d(r, {
                Kn: function() {
                    return M
                },
                w3: function() {
                    return L
                },
                r1: function() {
                    return F
                },
                VM: function() {
                    return D
                }
            });
            var n = t(53237),
                i = t(9759),
                o = t(81e3),
                a = t(79094),
                s = t(21651),
                u = t(31303),
                c = t(89472);

            function f(e, r) {
                null == r && (r = 1);
                var t = [],
                    n = t.forEach;
                return function e(r, i) {
                    n.call(r, (function(r) {
                        i > 0 && Array.isArray(r) ? e(r, i - 1) : t.push(r)
                    }))
                }(e, r), t
            }

            function l(e) {
                return function(e) {
                    var r = 0;
                    return function() {
                        return e[r++]
                    }
                }(function(e) {
                    var r = 0;

                    function t() {
                        return e[r++] << 8 | e[r++]
                    }
                    for (var n = t(), i = 1, o = [0, 1], a = 1; a < n; a++) o.push(i += t());
                    var s = t(),
                        u = r;
                    r += s;
                    var c = 0,
                        f = 0;

                    function l() {
                        return 0 == c && (f = f << 8 | e[r++], c = 8), f >> --c & 1
                    }
                    for (var h = Math.pow(2, 31), d = h >>> 1, p = d >> 1, v = h - 1, g = 0, m = 0; m < 31; m++) g = g << 1 | l();
                    for (var y = [], b = 0, E = h;;) {
                        for (var w = Math.floor(((g - b + 1) * i - 1) / E), A = 0, k = n; k - A > 1;) {
                            var N = A + k >>> 1;
                            w < o[N] ? k = N : A = N
                        }
                        if (0 == A) break;
                        y.push(A);
                        for (var R = b + Math.floor(E * o[A] / i), x = b + Math.floor(E * o[A + 1] / i) - 1; 0 == ((R ^ x) & d);) g = g << 1 & v | l(), R = R << 1 & v, x = x << 1 & v | 1;
                        for (; R & ~x & p;) g = g & d | g << 1 & v >>> 1 | l(), R = R << 1 ^ d, x = (x ^ d) << 1 | d | 1;
                        b = R, E = 1 + x - R
                    }
                    var I = n - 4;
                    return y.map((function(r) {
                        switch (r - I) {
                            case 3:
                                return I + 65792 + (e[u++] << 16 | e[u++] << 8 | e[u++]);
                            case 2:
                                return I + 256 + (e[u++] << 8 | e[u++]);
                            case 1:
                                return I + e[u++];
                            default:
                                return r - 1
                        }
                    }))
                }(e))
            }

            function h(e) {
                return 1 & e ? ~e >> 1 : e >> 1
            }

            function d(e, r) {
                for (var t = Array(e), n = 0, i = -1; n < e; n++) t[n] = i += 1 + r();
                return t
            }

            function p(e, r) {
                for (var t = Array(e), n = 0, i = 0; n < e; n++) t[n] = i += h(r());
                return t
            }

            function v(e, r) {
                for (var t = d(e(), e), n = e(), i = d(n, e), o = function(e, r) {
                        for (var t = Array(e), n = 0; n < e; n++) t[n] = 1 + r();
                        return t
                    }(n, e), a = 0; a < n; a++)
                    for (var s = 0; s < o[a]; s++) t.push(i[a] + s);
                return r ? t.map((function(e) {
                    return r[e]
                })) : t
            }

            function g(e, r, t) {
                for (var n = Array(e).fill(void 0).map((function() {
                        return []
                    })), i = 0; i < r; i++) p(e, t).forEach((function(e, r) {
                    return n[r].push(e)
                }));
                return n
            }

            function m(e, r) {
                var t = 1 + r(),
                    n = r(),
                    i = function(e) {
                        for (var r = [];;) {
                            var t = e();
                            if (0 == t) break;
                            r.push(t)
                        }
                        return r
                    }(r);
                return f(g(i.length, 1 + e, r).map((function(e, r) {
                    var o = e[0],
                        a = e.slice(1);
                    return Array(i[r]).fill(void 0).map((function(e, r) {
                        var i = r * n;
                        return [o + r * t, a.map((function(e) {
                            return e + i
                        }))]
                    }))
                })))
            }

            function y(e, r) {
                return g(1 + r(), 1 + e, r).map((function(e) {
                    return [e[0], e.slice(1)]
                }))
            }
            var b = l((0, t(38531).J)("")),
                E = new Set(v(b)),
                w = new Set(v(b)),
                A = function(e) {
                    for (var r = [];;) {
                        var t = e();
                        if (0 == t) break;
                        r.push(m(t, e))
                    }
                    for (;;) {
                        var n = e() - 1;
                        if (n < 0) break;
                        r.push(y(n, e))
                    }
                    return function(e) {
                        for (var r = {}, t = 0; t < e.length; t++) {
                            var n = e[t];
                            r[n[0]] = n[1]
                        }
                        return r
                    }(f(r))
                }(b),
                k = function(e) {
                    var r = v(e).sort((function(e, r) {
                        return e - r
                    }));
                    return function t() {
                        var n = [];
                        for (;;) {
                            var i = v(e, r);
                            if (0 == i.length) break;
                            n.push({
                                set: new Set(i),
                                node: t()
                            })
                        }
                        n.sort((function(e, r) {
                            return r.set.size - e.set.size
                        }));
                        var o = e();
                        return {
                            branches: n,
                            valid: o % 3,
                            fe0f: !!(1 & (o = o / 3 | 0)),
                            save: 1 == (o >>= 1),
                            check: 2 == o
                        }
                    }()
                }(b),
                N = 45,
                R = 95;

            function x(e) {
                return (0, i.XL)(e)
            }

            function I(e) {
                return e.filter((function(e) {
                    return 65039 != e
                }))
            }

            function P(e) {
                var r, t = (0, c.Z)(e.split("."));
                try {
                    for (t.s(); !(r = t.n()).done;) {
                        var n = r.value,
                            i = x(n);
                        try {
                            for (var o = i.lastIndexOf(R) - 1; o >= 0; o--)
                                if (i[o] !== R) throw new Error("underscore only allowed at start");
                            if (i.length >= 4 && i.every((function(e) {
                                    return e < 128
                                })) && i[2] === N && i[3] === N) throw new Error("invalid label extension")
                        } catch (a) {
                            throw new Error('Invalid label "'.concat(n, '": ').concat(a.message))
                        }
                    }
                } catch (a) {
                    t.e(a)
                } finally {
                    t.f()
                }
                return e
            }

            function S(e) {
                return P(function(e, r) {
                    var t = x(e).reverse(),
                        n = [];
                    for (; t.length;) {
                        var i = _(t);
                        if (i) n.push.apply(n, (0, u.Z)(r(i)));
                        else {
                            var o = t.pop();
                            if (E.has(o)) n.push(o);
                            else if (!w.has(o)) {
                                var a = A[o];
                                if (!a) throw new Error("Disallowed codepoint: 0x".concat(o.toString(16).toUpperCase()));
                                n.push.apply(n, (0, u.Z)(a))
                            }
                        }
                    }
                    return P((s = String.fromCodePoint.apply(String, n), s.normalize("NFC")));
                    var s
                }(e, I))
            }

            function _(e, r) {
                var t, n, i, o = k,
                    a = [],
                    s = e.length;
                r && (r.length = 0);
                for (var c = function() {
                        var c = e[--s];
                        if (!(o = null === (t = o.branches.find((function(e) {
                                return e.set.has(c)
                            }))) || void 0 === t ? void 0 : t.node)) return "break";
                        if (o.save) i = c;
                        else if (o.check && c === i) return "break";
                        a.push(c), o.fe0f && (a.push(65039), s > 0 && 65039 == e[s - 1] && s--), o.valid && (n = a.slice(), 2 == o.valid && n.splice(1, 1), r && r.push.apply(r, (0, u.Z)(e.slice(s).reverse())), e.length = s)
                    }; s;) {
                    if ("break" === c()) break
                }
                return n
            }
            var T = new a.Logger(s.i),
                O = new Uint8Array(32);

            function C(e) {
                if (0 === e.length) throw new Error("invalid ENS name; empty component");
                return e
            }

            function U(e) {
                var r = (0, i.Y0)(S(e)),
                    t = [];
                if (0 === e.length) return t;
                for (var n = 0, o = 0; o < r.length; o++) {
                    46 === r[o] && (t.push(C(r.slice(n, o))), n = o + 1)
                }
                if (n >= r.length) throw new Error("invalid ENS name; empty component");
                return t.push(C(r.slice(n))), t
            }

            function L(e) {
                return U(e).map((function(e) {
                    return (0, i.ZN)(e)
                })).join(".")
            }

            function F(e) {
                try {
                    return 0 !== U(e).length
                } catch (r) {}
                return !1
            }

            function D(e) {
                "string" !== typeof e && T.throwArgumentError("invalid ENS name; not a string", "name", e);
                for (var r = O, t = U(e); t.length;) r = (0, o.keccak256)((0, n.concat)([r, (0, o.keccak256)(t.pop())]));
                return (0, n.hexlify)(r)
            }

            function M(e) {
                return (0, n.hexlify)((0, n.concat)(U(e).map((function(e) {
                    if (e.length > 63) throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
                    var r = new Uint8Array(e.length + 1);
                    return r.set(e, 1), r[0] = r.length - 1, r
                })))) + "00"
            }
            O.fill(0)
        },
        81795: function(e, r, t) {
            "use strict";
            t.d(r, {
                E: function() {
                    return S
                }
            });
            var n = t(27166),
                i = t(27853),
                o = t(84531),
                a = t(4477),
                s = t(96812),
                u = t(53237),
                c = t(81e3),
                f = t(87549),
                l = t(79094),
                h = t(21651),
                d = t(16939),
                p = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                v = new l.Logger(h.i),
                g = new Uint8Array(32);
            g.fill(0);
            var m = s.O$.from(-1),
                y = s.O$.from(0),
                b = s.O$.from(1),
                E = s.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
            var w = (0, u.hexZeroPad)(b.toHexString(), 32),
                A = (0, u.hexZeroPad)(y.toHexString(), 32),
                k = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                N = ["name", "version", "chainId", "verifyingContract", "salt"];

            function R(e) {
                return function(r) {
                    return "string" !== typeof r && v.throwArgumentError("invalid domain value for ".concat(JSON.stringify(e)), "domain.".concat(e), r), r
                }
            }
            var x = {
                name: R("name"),
                version: R("version"),
                chainId: function(e) {
                    try {
                        return s.O$.from(e).toString()
                    } catch (r) {}
                    return v.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", e)
                },
                verifyingContract: function(e) {
                    try {
                        return (0, a.getAddress)(e).toLowerCase()
                    } catch (r) {}
                    return v.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", e)
                },
                salt: function(e) {
                    try {
                        var r = (0, u.arrayify)(e);
                        if (32 !== r.length) throw new Error("bad length");
                        return (0, u.hexlify)(r)
                    } catch (t) {}
                    return v.throwArgumentError('invalid domain value "salt"', "domain.salt", e)
                }
            };

            function I(e) {
                var r = e.match(/^(u?)int(\d*)$/);
                if (r) {
                    var t = "" === r[1],
                        n = parseInt(r[2] || "256");
                    (n % 8 !== 0 || n > 256 || r[2] && r[2] !== String(n)) && v.throwArgumentError("invalid numeric width", "type", e);
                    var i = E.mask(t ? n - 1 : n),
                        o = t ? i.add(b).mul(m) : y;
                    return function(r) {
                        var t = s.O$.from(r);
                        return (t.lt(o) || t.gt(i)) && v.throwArgumentError("value out-of-bounds for ".concat(e), "value", r), (0, u.hexZeroPad)(t.toTwos(256).toHexString(), 32)
                    }
                }
                var f = e.match(/^bytes(\d+)$/);
                if (f) {
                    var l = parseInt(f[1]);
                    return (0 === l || l > 32 || f[1] !== String(l)) && v.throwArgumentError("invalid bytes width", "type", e),
                        function(r) {
                            return (0, u.arrayify)(r).length !== l && v.throwArgumentError("invalid length for ".concat(e), "value", r),
                                function(e) {
                                    var r = (0, u.arrayify)(e),
                                        t = r.length % 32;
                                    return t ? (0, u.hexConcat)([r, g.slice(t)]) : (0, u.hexlify)(r)
                                }(r)
                        }
                }
                switch (e) {
                    case "address":
                        return function(e) {
                            return (0, u.hexZeroPad)((0, a.getAddress)(e), 32)
                        };
                    case "bool":
                        return function(e) {
                            return e ? w : A
                        };
                    case "bytes":
                        return function(e) {
                            return (0, c.keccak256)(e)
                        };
                    case "string":
                        return function(e) {
                            return (0, d.id)(e)
                        }
                }
                return null
            }

            function P(e, r) {
                return "".concat(e, "(").concat(r.map((function(e) {
                    var r = e.name;
                    return e.type + " " + r
                })).join(","), ")")
            }
            var S = function() {
                function e(r) {
                    (0, i.Z)(this, e), (0, f.defineReadOnly)(this, "types", Object.freeze((0, f.deepCopy)(r))), (0, f.defineReadOnly)(this, "_encoderCache", {}), (0, f.defineReadOnly)(this, "_types", {});
                    var t = {},
                        n = {},
                        o = {};
                    Object.keys(r).forEach((function(e) {
                        t[e] = {}, n[e] = [], o[e] = {}
                    }));
                    var a = function(e) {
                        var i = {};
                        r[e].forEach((function(o) {
                            i[o.name] && v.throwArgumentError("duplicate variable name ".concat(JSON.stringify(o.name), " in ").concat(JSON.stringify(e)), "types", r), i[o.name] = !0;
                            var a = o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                            a === e && v.throwArgumentError("circular type reference to ".concat(JSON.stringify(a)), "types", r), I(a) || (n[a] || v.throwArgumentError("unknown type ".concat(JSON.stringify(a)), "types", r), n[a].push(e), t[e][a] = !0)
                        }))
                    };
                    for (var s in r) a(s);
                    var u = Object.keys(n).filter((function(e) {
                        return 0 === n[e].length
                    }));
                    for (var c in 0 === u.length ? v.throwArgumentError("missing primary type", "types", r) : u.length > 1 && v.throwArgumentError("ambiguous primary types or unused types: ".concat(u.map((function(e) {
                                return JSON.stringify(e)
                            })).join(", ")), "types", r), (0, f.defineReadOnly)(this, "primaryType", u[0]),
                            function e(i, a) {
                                a[i] && v.throwArgumentError("circular type reference to ".concat(JSON.stringify(i)), "types", r), a[i] = !0, Object.keys(t[i]).forEach((function(r) {
                                    n[r] && (e(r, a), Object.keys(a).forEach((function(e) {
                                        o[e][r] = !0
                                    })))
                                })), delete a[i]
                            }(this.primaryType, {}), o) {
                        var l = Object.keys(o[c]);
                        l.sort(), this._types[c] = P(c, r[c]) + l.map((function(e) {
                            return P(e, r[e])
                        })).join("")
                    }
                }
                return (0, o.Z)(e, [{
                    key: "getEncoder",
                    value: function(e) {
                        var r = this._encoderCache[e];
                        return r || (r = this._encoderCache[e] = this._getEncoder(e)), r
                    }
                }, {
                    key: "_getEncoder",
                    value: function(e) {
                        var r = this,
                            t = I(e);
                        if (t) return t;
                        var n = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                        if (n) {
                            var i = n[1],
                                o = this.getEncoder(i),
                                a = parseInt(n[3]);
                            return function(e) {
                                a >= 0 && e.length !== a && v.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e);
                                var t = e.map(o);
                                return r._types[i] && (t = t.map(c.keccak256)), (0, c.keccak256)((0, u.hexConcat)(t))
                            }
                        }
                        var s = this.types[e];
                        if (s) {
                            var f = (0, d.id)(this._types[e]);
                            return function(e) {
                                var t = s.map((function(t) {
                                    var n = t.name,
                                        i = t.type,
                                        o = r.getEncoder(i)(e[n]);
                                    return r._types[i] ? (0, c.keccak256)(o) : o
                                }));
                                return t.unshift(f), (0, u.hexConcat)(t)
                            }
                        }
                        return v.throwArgumentError("unknown type: ".concat(e), "type", e)
                    }
                }, {
                    key: "encodeType",
                    value: function(e) {
                        var r = this._types[e];
                        return r || v.throwArgumentError("unknown type: ".concat(JSON.stringify(e)), "name", e), r
                    }
                }, {
                    key: "encodeData",
                    value: function(e, r) {
                        return this.getEncoder(e)(r)
                    }
                }, {
                    key: "hashStruct",
                    value: function(e, r) {
                        return (0, c.keccak256)(this.encodeData(e, r))
                    }
                }, {
                    key: "encode",
                    value: function(e) {
                        return this.encodeData(this.primaryType, e)
                    }
                }, {
                    key: "hash",
                    value: function(e) {
                        return this.hashStruct(this.primaryType, e)
                    }
                }, {
                    key: "_visit",
                    value: function(e, r, t) {
                        var n = this;
                        if (I(e)) return t(e, r);
                        var i = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                        if (i) {
                            var o = i[1],
                                a = parseInt(i[3]);
                            return a >= 0 && r.length !== a && v.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", r), r.map((function(e) {
                                return n._visit(o, e, t)
                            }))
                        }
                        var s = this.types[e];
                        return s ? s.reduce((function(e, i) {
                            var o = i.name,
                                a = i.type;
                            return e[o] = n._visit(a, r[o], t), e
                        }), {}) : v.throwArgumentError("unknown type: ".concat(e), "type", e)
                    }
                }, {
                    key: "visit",
                    value: function(e, r) {
                        return this._visit(this.primaryType, e, r)
                    }
                }], [{
                    key: "from",
                    value: function(r) {
                        return new e(r)
                    }
                }, {
                    key: "getPrimaryType",
                    value: function(r) {
                        return e.from(r).primaryType
                    }
                }, {
                    key: "hashStruct",
                    value: function(r, t, n) {
                        return e.from(t).hashStruct(r, n)
                    }
                }, {
                    key: "hashDomain",
                    value: function(r) {
                        var t = [];
                        for (var n in r) {
                            var i = k[n];
                            i || v.throwArgumentError("invalid typed-data domain key: ".concat(JSON.stringify(n)), "domain", r), t.push({
                                name: n,
                                type: i
                            })
                        }
                        return t.sort((function(e, r) {
                            return N.indexOf(e.name) - N.indexOf(r.name)
                        })), e.hashStruct("EIP712Domain", {
                            EIP712Domain: t
                        }, r)
                    }
                }, {
                    key: "encode",
                    value: function(r, t, n) {
                        return (0, u.hexConcat)(["0x1901", e.hashDomain(r), e.from(t).hash(n)])
                    }
                }, {
                    key: "hash",
                    value: function(r, t, n) {
                        return (0, c.keccak256)(e.encode(r, t, n))
                    }
                }, {
                    key: "resolveNames",
                    value: function(r, t, i, o) {
                        return p(this, void 0, void 0, (0, n.Z)().mark((function a() {
                            var s, c, l;
                            return (0, n.Z)().wrap((function(a) {
                                for (;;) switch (a.prev = a.next) {
                                    case 0:
                                        r = (0, f.shallowCopy)(r), s = {}, r.verifyingContract && !(0, u.isHexString)(r.verifyingContract, 20) && (s[r.verifyingContract] = "0x"), (c = e.from(t)).visit(i, (function(e, r) {
                                            return "address" !== e || (0, u.isHexString)(r, 20) || (s[r] = "0x"), r
                                        })), a.t0 = (0, n.Z)().keys(s);
                                    case 6:
                                        if ((a.t1 = a.t0()).done) {
                                            a.next = 13;
                                            break
                                        }
                                        return l = a.t1.value, a.next = 10, o(l);
                                    case 10:
                                        s[l] = a.sent, a.next = 6;
                                        break;
                                    case 13:
                                        return r.verifyingContract && s[r.verifyingContract] && (r.verifyingContract = s[r.verifyingContract]), i = c.visit(i, (function(e, r) {
                                            return "address" === e && s[r] ? s[r] : r
                                        })), a.abrupt("return", {
                                            domain: r,
                                            value: i
                                        });
                                    case 16:
                                    case "end":
                                        return a.stop()
                                }
                            }), a)
                        })))
                    }
                }, {
                    key: "getPayload",
                    value: function(r, t, n) {
                        e.hashDomain(r);
                        var i = {},
                            o = [];
                        N.forEach((function(e) {
                            var t = r[e];
                            null != t && (i[e] = x[e](t), o.push({
                                name: e,
                                type: k[e]
                            }))
                        }));
                        var a = e.from(t),
                            c = (0, f.shallowCopy)(t);
                        return c.EIP712Domain ? v.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", t) : c.EIP712Domain = o, a.encode(n), {
                            types: c,
                            domain: i,
                            primaryType: a.primaryType,
                            message: a.visit(n, (function(e, r) {
                                if (e.match(/^bytes(\d*)/)) return (0, u.hexlify)((0, u.arrayify)(r));
                                if (e.match(/^u?int/)) return s.O$.from(r).toString();
                                switch (e) {
                                    case "address":
                                        return r.toLowerCase();
                                    case "bool":
                                        return !!r;
                                    case "string":
                                        return "string" !== typeof r && v.throwArgumentError("invalid string", "value", r), r
                                }
                                return v.throwArgumentError("unsupported type", "type", e)
                            }))
                        }
                    }
                }]), e
            }()
        },
        36723: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                HDNode: function() {
                    return x
                },
                defaultPath: function() {
                    return R
                },
                entropyToMnemonic: function() {
                    return S
                },
                getAccountPath: function() {
                    return T
                },
                isValidMnemonic: function() {
                    return _
                },
                mnemonicToEntropy: function() {
                    return P
                },
                mnemonicToSeed: function() {
                    return I
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(8116),
                a = t(53237),
                s = t(96812),
                u = t(9759),
                c = t(64476),
                f = t(87549),
                l = t(31654),
                h = t(30226),
                d = t(71129),
                p = t(42442),
                v = t(80896),
                g = new(t(79094).Logger)("hdnode/5.6.2"),
                m = s.O$.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                y = (0, u.Y0)("Bitcoin seed"),
                b = 2147483648;

            function E(e) {
                return (1 << e) - 1 << 8 - e
            }

            function w(e) {
                return (0, a.hexZeroPad)((0, a.hexlify)(e), 32)
            }

            function A(e) {
                return o.Base58.encode((0, a.concat)([e, (0, a.hexDataSlice)((0, h.JQ)((0, h.JQ)(e)), 0, 4)]))
            }

            function k(e) {
                if (null == e) return v.E.en;
                if ("string" === typeof e) {
                    var r = v.E[e];
                    return null == r && g.throwArgumentError("unknown locale", "wordlist", e), r
                }
                return e
            }
            var N = {},
                R = "m/44'/60'/0'/0/0",
                x = function() {
                    function e(r, t, i, o, s, u, c, d) {
                        if ((0, n.Z)(this, e), r !== N) throw new Error("HDNode constructor cannot be called directly");
                        if (t) {
                            var v = new l.SigningKey(t);
                            (0, f.defineReadOnly)(this, "privateKey", v.privateKey), (0, f.defineReadOnly)(this, "publicKey", v.compressedPublicKey)
                        } else(0, f.defineReadOnly)(this, "privateKey", null), (0, f.defineReadOnly)(this, "publicKey", (0, a.hexlify)(i));
                        (0, f.defineReadOnly)(this, "parentFingerprint", o), (0, f.defineReadOnly)(this, "fingerprint", (0, a.hexDataSlice)((0, h.bP)((0, h.JQ)(this.publicKey)), 0, 4)), (0, f.defineReadOnly)(this, "address", (0, p.computeAddress)(this.publicKey)), (0, f.defineReadOnly)(this, "chainCode", s), (0, f.defineReadOnly)(this, "index", u), (0, f.defineReadOnly)(this, "depth", c), null == d ? ((0, f.defineReadOnly)(this, "mnemonic", null), (0, f.defineReadOnly)(this, "path", null)) : "string" === typeof d ? ((0, f.defineReadOnly)(this, "mnemonic", null), (0, f.defineReadOnly)(this, "path", d)) : ((0, f.defineReadOnly)(this, "mnemonic", d), (0, f.defineReadOnly)(this, "path", d.path))
                    }
                    return (0, i.Z)(e, [{
                        key: "extendedKey",
                        get: function() {
                            if (this.depth >= 256) throw new Error("Depth too large!");
                            return A((0, a.concat)([null != this.privateKey ? "0x0488ADE4" : "0x0488B21E", (0, a.hexlify)(this.depth), this.parentFingerprint, (0, a.hexZeroPad)((0, a.hexlify)(this.index), 4), this.chainCode, null != this.privateKey ? (0, a.concat)(["0x00", this.privateKey]) : this.publicKey]))
                        }
                    }, {
                        key: "neuter",
                        value: function() {
                            return new e(N, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path)
                        }
                    }, {
                        key: "_derive",
                        value: function(r) {
                            if (r > 4294967295) throw new Error("invalid index - " + String(r));
                            var t = this.path;
                            t && (t += "/" + (r & ~b));
                            var n = new Uint8Array(37);
                            if (r & b) {
                                if (!this.privateKey) throw new Error("cannot derive child of neutered node");
                                n.set((0, a.arrayify)(this.privateKey), 1), t && (t += "'")
                            } else n.set((0, a.arrayify)(this.publicKey));
                            for (var i = 24; i >= 0; i -= 8) n[33 + (i >> 3)] = r >> 24 - i & 255;
                            var o = (0, a.arrayify)((0, h.Gy)(d.p.sha512, this.chainCode, n)),
                                u = o.slice(0, 32),
                                c = o.slice(32),
                                f = null,
                                p = null;
                            this.privateKey ? f = w(s.O$.from(u).add(this.privateKey).mod(m)) : p = new l.SigningKey((0, a.hexlify)(u))._addPoint(this.publicKey);
                            var v = t,
                                g = this.mnemonic;
                            return g && (v = Object.freeze({
                                phrase: g.phrase,
                                path: t,
                                locale: g.locale || "en"
                            })), new e(N, f, p, this.fingerprint, w(c), r, this.depth + 1, v)
                        }
                    }, {
                        key: "derivePath",
                        value: function(e) {
                            var r = e.split("/");
                            if (0 === r.length || "m" === r[0] && 0 !== this.depth) throw new Error("invalid path - " + e);
                            "m" === r[0] && r.shift();
                            for (var t = this, n = 0; n < r.length; n++) {
                                var i = r[n];
                                if (i.match(/^[0-9]+'$/)) {
                                    var o = parseInt(i.substring(0, i.length - 1));
                                    if (o >= b) throw new Error("invalid path index - " + i);
                                    t = t._derive(b + o)
                                } else {
                                    if (!i.match(/^[0-9]+$/)) throw new Error("invalid path component - " + i);
                                    var a = parseInt(i);
                                    if (a >= b) throw new Error("invalid path index - " + i);
                                    t = t._derive(a)
                                }
                            }
                            return t
                        }
                    }], [{
                        key: "_fromSeed",
                        value: function(r, t) {
                            var n = (0, a.arrayify)(r);
                            if (n.length < 16 || n.length > 64) throw new Error("invalid seed");
                            var i = (0, a.arrayify)((0, h.Gy)(d.p.sha512, y, n));
                            return new e(N, w(i.slice(0, 32)), null, "0x00000000", w(i.slice(32)), 0, 0, t)
                        }
                    }, {
                        key: "fromMnemonic",
                        value: function(r, t, n) {
                            return r = S(P(r, n = k(n)), n), e._fromSeed(I(r, t), {
                                phrase: r,
                                path: "m",
                                locale: n.locale
                            })
                        }
                    }, {
                        key: "fromSeed",
                        value: function(r) {
                            return e._fromSeed(r, null)
                        }
                    }, {
                        key: "fromExtendedKey",
                        value: function(r) {
                            var t = o.Base58.decode(r);
                            82 === t.length && A(t.slice(0, 78)) === r || g.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
                            var n = t[4],
                                i = (0, a.hexlify)(t.slice(5, 9)),
                                s = parseInt((0, a.hexlify)(t.slice(9, 13)).substring(2), 16),
                                u = (0, a.hexlify)(t.slice(13, 45)),
                                c = t.slice(45, 78);
                            switch ((0, a.hexlify)(t.slice(0, 4))) {
                                case "0x0488b21e":
                                case "0x043587cf":
                                    return new e(N, null, (0, a.hexlify)(c), i, u, s, n, null);
                                case "0x0488ade4":
                                case "0x04358394 ":
                                    if (0 !== c[0]) break;
                                    return new e(N, (0, a.hexlify)(c.slice(1)), null, i, u, s, n, null)
                            }
                            return g.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]")
                        }
                    }]), e
                }();

            function I(e, r) {
                r || (r = "");
                var t = (0, u.Y0)("mnemonic" + r, u.Uj.NFKD);
                return (0, c.n)((0, u.Y0)(e, u.Uj.NFKD), t, 2048, 64, "sha512")
            }

            function P(e, r) {
                r = k(r), g.checkNormalize();
                var t = r.split(e);
                if (t.length % 3 !== 0) throw new Error("invalid mnemonic");
                for (var n = (0, a.arrayify)(new Uint8Array(Math.ceil(11 * t.length / 8))), i = 0, o = 0; o < t.length; o++) {
                    var s = r.getWordIndex(t[o].normalize("NFKD"));
                    if (-1 === s) throw new Error("invalid mnemonic");
                    for (var u = 0; u < 11; u++) s & 1 << 10 - u && (n[i >> 3] |= 1 << 7 - i % 8), i++
                }
                var c = 32 * t.length / 3,
                    f = E(t.length / 3);
                if (((0, a.arrayify)((0, h.JQ)(n.slice(0, c / 8)))[0] & f) !== (n[n.length - 1] & f)) throw new Error("invalid checksum");
                return (0, a.hexlify)(n.slice(0, c / 8))
            }

            function S(e, r) {
                if (r = k(r), (e = (0, a.arrayify)(e)).length % 4 !== 0 || e.length < 16 || e.length > 32) throw new Error("invalid entropy");
                for (var t = [0], n = 11, i = 0; i < e.length; i++) n > 8 ? (t[t.length - 1] <<= 8, t[t.length - 1] |= e[i], n -= 8) : (t[t.length - 1] <<= n, t[t.length - 1] |= e[i] >> 8 - n, t.push(e[i] & (1 << 8 - n) - 1), n += 3);
                var o = e.length / 4,
                    s = (0, a.arrayify)((0, h.JQ)(e))[0] & E(o);
                return t[t.length - 1] <<= o, t[t.length - 1] |= s >> 8 - o, r.join(t.map((function(e) {
                    return r.getWord(e)
                })))
            }

            function _(e, r) {
                try {
                    return P(e, r), !0
                } catch (t) {}
                return !1
            }

            function T(e) {
                return ("number" !== typeof e || e < 0 || e >= b || e % 1) && g.throwArgumentError("invalid account index", "index", e), "m/44'/60'/".concat(e, "'/0/0")
            }
        },
        8600: function(e, r, t) {
            "use strict";
            t.d(r, {
                i: function() {
                    return n
                }
            });
            var n = "json-wallets/5.6.1"
        },
        69449: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                decryptCrowdsale: function() {
                    return E
                },
                decryptJsonWallet: function() {
                    return k
                },
                decryptJsonWalletSync: function() {
                    return N
                },
                decryptKeystore: function() {
                    return A.pe
                },
                decryptKeystoreSync: function() {
                    return A.hb
                },
                encryptKeystore: function() {
                    return A.HI
                },
                getJsonWalletAddress: function() {
                    return w.Rb
                },
                isCrowdsaleWallet: function() {
                    return w.LW
                },
                isKeystoreWallet: function() {
                    return w.aO
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(81020),
                a = t(18992),
                s = t(90471),
                u = t.n(s),
                c = t(4477),
                f = t(53237),
                l = t(81e3),
                h = t(64476),
                d = t(9759),
                p = t(87549),
                v = t(79094),
                g = t(8600),
                m = t(40961),
                y = new v.Logger(g.i),
                b = function(e) {
                    (0, o.Z)(t, e);
                    var r = (0, a.Z)(t);

                    function t() {
                        return (0, n.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, i.Z)(t, [{
                        key: "isCrowdsaleAccount",
                        value: function(e) {
                            return !(!e || !e._isCrowdsaleAccount)
                        }
                    }]), t
                }(p.Description);

            function E(e, r) {
                var t = JSON.parse(e);
                r = (0, m.Ij)(r);
                var n = (0, c.getAddress)((0, m.gx)(t, "ethaddr")),
                    i = (0, m.p3)((0, m.gx)(t, "encseed"));
                i && i.length % 16 === 0 || y.throwArgumentError("invalid encseed", "json", e);
                for (var o = (0, f.arrayify)((0, h.n)(r, r, 2e3, 32, "sha256")).slice(0, 16), a = i.slice(0, 16), s = i.slice(16), p = new(u().ModeOfOperation.cbc)(o, a), v = u().padding.pkcs7.strip((0, f.arrayify)(p.decrypt(s))), g = "", E = 0; E < v.length; E++) g += String.fromCharCode(v[E]);
                var w = (0, d.Y0)(g),
                    A = (0, l.keccak256)(w);
                return new b({
                    _isCrowdsaleAccount: !0,
                    address: n,
                    privateKey: A
                })
            }
            var w = t(69596),
                A = t(75750);

            function k(e, r, t) {
                if ((0, w.LW)(e)) {
                    t && t(0);
                    var n = E(e, r);
                    return t && t(1), Promise.resolve(n)
                }
                return (0, w.aO)(e) ? (0, A.pe)(e, r, t) : Promise.reject(new Error("invalid JSON wallet"))
            }

            function N(e, r) {
                if ((0, w.LW)(e)) return E(e, r);
                if ((0, w.aO)(e)) return (0, A.hb)(e, r);
                throw new Error("invalid JSON wallet")
            }
        },
        69596: function(e, r, t) {
            "use strict";
            t.d(r, {
                LW: function() {
                    return i
                },
                Rb: function() {
                    return a
                },
                aO: function() {
                    return o
                }
            });
            var n = t(4477);

            function i(e) {
                var r = null;
                try {
                    r = JSON.parse(e)
                } catch (t) {
                    return !1
                }
                return r.encseed && r.ethaddr
            }

            function o(e) {
                var r = null;
                try {
                    r = JSON.parse(e)
                } catch (t) {
                    return !1
                }
                return !(!r.version || parseInt(r.version) !== r.version || 3 !== parseInt(r.version))
            }

            function a(e) {
                if (i(e)) try {
                    return (0, n.getAddress)(JSON.parse(e).ethaddr)
                } catch (r) {
                    return null
                }
                if (o(e)) try {
                    return (0, n.getAddress)(JSON.parse(e).address)
                } catch (r) {
                    return null
                }
                return null
            }
        },
        75750: function(e, r, t) {
            "use strict";
            t.d(r, {
                HI: function() {
                    return C
                },
                hb: function() {
                    return T
                },
                pe: function() {
                    return O
                }
            });
            var n = t(27166),
                i = t(27853),
                o = t(84531),
                a = t(81020),
                s = t(18992),
                u = t(90471),
                c = t.n(u),
                f = t(6946),
                l = t.n(f),
                h = t(4477),
                d = t(53237),
                p = t(36723),
                v = t(81e3),
                g = t(64476),
                m = t(3697),
                y = t(87549),
                b = t(42442),
                E = t(40961),
                w = t(79094),
                A = t(8600),
                k = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                N = new w.Logger(A.i);

            function R(e) {
                return null != e && e.mnemonic && e.mnemonic.phrase
            }
            var x = function(e) {
                (0, a.Z)(t, e);
                var r = (0, s.Z)(t);

                function t() {
                    return (0, i.Z)(this, t), r.apply(this, arguments)
                }
                return (0, o.Z)(t, [{
                    key: "isKeystoreAccount",
                    value: function(e) {
                        return !(!e || !e._isKeystoreAccount)
                    }
                }]), t
            }(y.Description);

            function I(e, r) {
                var t = (0, E.p3)((0, E.gx)(e, "crypto/ciphertext"));
                if ((0, d.hexlify)((0, v.keccak256)((0, d.concat)([r.slice(16, 32), t]))).substring(2) !== (0, E.gx)(e, "crypto/mac").toLowerCase()) throw new Error("invalid password");
                var n = function(e, r, t) {
                    if ("aes-128-ctr" === (0, E.gx)(e, "crypto/cipher")) {
                        var n = (0, E.p3)((0, E.gx)(e, "crypto/cipherparams/iv")),
                            i = new(c().Counter)(n),
                            o = new(c().ModeOfOperation.ctr)(r, i);
                        return (0, d.arrayify)(o.decrypt(t))
                    }
                    return null
                }(e, r.slice(0, 16), t);
                n || N.throwError("unsupported cipher", w.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "decrypt"
                });
                var i = r.slice(32, 64),
                    o = (0, b.computeAddress)(n);
                if (e.address) {
                    var a = e.address.toLowerCase();
                    if ("0x" !== a.substring(0, 2) && (a = "0x" + a), (0, h.getAddress)(a) !== o) throw new Error("address mismatch")
                }
                var s = {
                    _isKeystoreAccount: !0,
                    address: o,
                    privateKey: (0, d.hexlify)(n)
                };
                if ("0.1" === (0, E.gx)(e, "x-ethers/version")) {
                    var u = (0, E.p3)((0, E.gx)(e, "x-ethers/mnemonicCiphertext")),
                        f = (0, E.p3)((0, E.gx)(e, "x-ethers/mnemonicCounter")),
                        l = new(c().Counter)(f),
                        g = new(c().ModeOfOperation.ctr)(i, l),
                        m = (0, E.gx)(e, "x-ethers/path") || p.defaultPath,
                        y = (0, E.gx)(e, "x-ethers/locale") || "en",
                        A = (0, d.arrayify)(g.decrypt(u));
                    try {
                        var k = (0, p.entropyToMnemonic)(A, y),
                            R = p.HDNode.fromMnemonic(k, null, y).derivePath(m);
                        if (R.privateKey != s.privateKey) throw new Error("mnemonic mismatch");
                        s.mnemonic = R.mnemonic
                    } catch (I) {
                        if (I.code !== w.Logger.errors.INVALID_ARGUMENT || "wordlist" !== I.argument) throw I
                    }
                }
                return new x(s)
            }

            function P(e, r, t, n, i) {
                return (0, d.arrayify)((0, g.n)(e, r, t, n, i))
            }

            function S(e, r, t, n, i) {
                return Promise.resolve(P(e, r, t, n, i))
            }

            function _(e, r, t, n, i) {
                var o = (0, E.Ij)(r),
                    a = (0, E.gx)(e, "crypto/kdf");
                if (a && "string" === typeof a) {
                    var s = function(e, r) {
                        return N.throwArgumentError("invalid key-derivation function parameters", e, r)
                    };
                    if ("scrypt" === a.toLowerCase()) {
                        var u = (0, E.p3)((0, E.gx)(e, "crypto/kdfparams/salt")),
                            c = parseInt((0, E.gx)(e, "crypto/kdfparams/n")),
                            f = parseInt((0, E.gx)(e, "crypto/kdfparams/r")),
                            l = parseInt((0, E.gx)(e, "crypto/kdfparams/p"));
                        c && f && l || s("kdf", a), 0 !== (c & c - 1) && s("N", c);
                        var h = parseInt((0, E.gx)(e, "crypto/kdfparams/dklen"));
                        return 32 !== h && s("dklen", h), n(o, u, c, f, l, 64, i)
                    }
                    if ("pbkdf2" === a.toLowerCase()) {
                        var d = (0, E.p3)((0, E.gx)(e, "crypto/kdfparams/salt")),
                            p = null,
                            v = (0, E.gx)(e, "crypto/kdfparams/prf");
                        "hmac-sha256" === v ? p = "sha256" : "hmac-sha512" === v ? p = "sha512" : s("prf", v);
                        var g = parseInt((0, E.gx)(e, "crypto/kdfparams/c")),
                            m = parseInt((0, E.gx)(e, "crypto/kdfparams/dklen"));
                        return 32 !== m && s("dklen", m), t(o, d, g, m, p)
                    }
                }
                return N.throwArgumentError("unsupported key-derivation function", "kdf", a)
            }

            function T(e, r) {
                var t = JSON.parse(e);
                return I(t, _(t, r, P, l().syncScrypt))
            }

            function O(e, r, t) {
                return k(this, void 0, void 0, (0, n.Z)().mark((function i() {
                    var o, a;
                    return (0, n.Z)().wrap((function(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                return o = JSON.parse(e), n.next = 3, _(o, r, S, l().scrypt, t);
                            case 3:
                                return a = n.sent, n.abrupt("return", I(o, a));
                            case 5:
                            case "end":
                                return n.stop()
                        }
                    }), i)
                })))
            }

            function C(e, r, t, n) {
                try {
                    if ((0, h.getAddress)(e.address) !== (0, b.computeAddress)(e.privateKey)) throw new Error("address/privateKey mismatch");
                    if (R(e)) {
                        var i = e.mnemonic;
                        if (p.HDNode.fromMnemonic(i.phrase, null, i.locale).derivePath(i.path || p.defaultPath).privateKey != e.privateKey) throw new Error("mnemonic mismatch")
                    }
                } catch (P) {
                    return Promise.reject(P)
                }
                "function" !== typeof t || n || (n = t, t = {}), t || (t = {});
                var o = (0, d.arrayify)(e.privateKey),
                    a = (0, E.Ij)(r),
                    s = null,
                    u = null,
                    f = null;
                if (R(e)) {
                    var g = e.mnemonic;
                    s = (0, d.arrayify)((0, p.mnemonicToEntropy)(g.phrase, g.locale || "en")), u = g.path || p.defaultPath, f = g.locale || "en"
                }
                var y = t.client;
                y || (y = "ethers.js");
                var w = null;
                w = t.salt ? (0, d.arrayify)(t.salt) : (0, m.O)(32);
                var A = null;
                if (t.iv) {
                    if (16 !== (A = (0, d.arrayify)(t.iv)).length) throw new Error("invalid iv")
                } else A = (0, m.O)(16);
                var k = null;
                if (t.uuid) {
                    if (16 !== (k = (0, d.arrayify)(t.uuid)).length) throw new Error("invalid uuid")
                } else k = (0, m.O)(16);
                var N = 1 << 17,
                    x = 8,
                    I = 1;
                return t.scrypt && (t.scrypt.N && (N = t.scrypt.N), t.scrypt.r && (x = t.scrypt.r), t.scrypt.p && (I = t.scrypt.p)), l().scrypt(a, w, N, x, I, 64, n).then((function(r) {
                    var t = (r = (0, d.arrayify)(r)).slice(0, 16),
                        n = r.slice(16, 32),
                        i = r.slice(32, 64),
                        a = new(c().Counter)(A),
                        l = new(c().ModeOfOperation.ctr)(t, a),
                        h = (0, d.arrayify)(l.encrypt(o)),
                        p = (0, v.keccak256)((0, d.concat)([n, h])),
                        g = {
                            address: e.address.substring(2).toLowerCase(),
                            id: (0, E.EH)(k),
                            version: 3,
                            Crypto: {
                                cipher: "aes-128-ctr",
                                cipherparams: {
                                    iv: (0, d.hexlify)(A).substring(2)
                                },
                                ciphertext: (0, d.hexlify)(h).substring(2),
                                kdf: "scrypt",
                                kdfparams: {
                                    salt: (0, d.hexlify)(w).substring(2),
                                    n: N,
                                    dklen: 32,
                                    p: I,
                                    r: x
                                },
                                mac: p.substring(2)
                            }
                        };
                    if (s) {
                        var b = (0, m.O)(16),
                            R = new(c().Counter)(b),
                            P = new(c().ModeOfOperation.ctr)(i, R),
                            S = (0, d.arrayify)(P.encrypt(s)),
                            _ = new Date,
                            T = _.getUTCFullYear() + "-" + (0, E.VP)(_.getUTCMonth() + 1, 2) + "-" + (0, E.VP)(_.getUTCDate(), 2) + "T" + (0, E.VP)(_.getUTCHours(), 2) + "-" + (0, E.VP)(_.getUTCMinutes(), 2) + "-" + (0, E.VP)(_.getUTCSeconds(), 2) + ".0Z";
                        g["x-ethers"] = {
                            client: y,
                            gethFilename: "UTC--" + T + "--" + g.address,
                            mnemonicCounter: (0, d.hexlify)(b).substring(2),
                            mnemonicCiphertext: (0, d.hexlify)(S).substring(2),
                            path: u,
                            locale: f,
                            version: "0.1"
                        }
                    }
                    return JSON.stringify(g)
                }))
            }
        },
        40961: function(e, r, t) {
            "use strict";
            t.d(r, {
                EH: function() {
                    return c
                },
                Ij: function() {
                    return s
                },
                VP: function() {
                    return a
                },
                gx: function() {
                    return u
                },
                p3: function() {
                    return o
                }
            });
            var n = t(53237),
                i = t(9759);

            function o(e) {
                return "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), (0, n.arrayify)(e)
            }

            function a(e, r) {
                for (e = String(e); e.length < r;) e = "0" + e;
                return e
            }

            function s(e) {
                return "string" === typeof e ? (0, i.Y0)(e, i.Uj.NFKC) : (0, n.arrayify)(e)
            }

            function u(e, r) {
                for (var t = e, n = r.toLowerCase().split("/"), i = 0; i < n.length; i++) {
                    var o = null;
                    for (var a in t)
                        if (a.toLowerCase() === n[i]) {
                            o = t[a];
                            break
                        }
                    if (null === o) return null;
                    t = o
                }
                return t
            }

            function c(e) {
                var r = (0, n.arrayify)(e);
                r[6] = 15 & r[6] | 64, r[8] = 63 & r[8] | 128;
                var t = (0, n.hexlify)(r);
                return [t.substring(2, 10), t.substring(10, 14), t.substring(14, 18), t.substring(18, 22), t.substring(22, 34)].join("-")
            }
        },
        81e3: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                keccak256: function() {
                    return a
                }
            });
            var n = t(3425),
                i = t.n(n),
                o = t(53237);

            function a(e) {
                return "0x" + i().keccak_256((0, o.arrayify)(e))
            }
        },
        79094: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                ErrorCode: function() {
                    return l
                },
                LogLevel: function() {
                    return f
                },
                Logger: function() {
                    return p
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f
        },
        60573: function(e, r, t) {
            "use strict";
            t.d(r, {
                H: function() {
                    return f
                }
            });
            var n = new(t(79094).Logger)("networks/5.7.1");

            function i(e) {
                var r = function(r, t) {
                    null == t && (t = {});
                    var n = [];
                    if (r.InfuraProvider && "-" !== t.infura) try {
                        n.push(new r.InfuraProvider(e, t.infura))
                    } catch (s) {}
                    if (r.EtherscanProvider && "-" !== t.etherscan) try {
                        n.push(new r.EtherscanProvider(e, t.etherscan))
                    } catch (s) {}
                    if (r.AlchemyProvider && "-" !== t.alchemy) try {
                        n.push(new r.AlchemyProvider(e, t.alchemy))
                    } catch (s) {}
                    if (r.PocketProvider && "-" !== t.pocket) {
                        try {
                            var i = new r.PocketProvider(e, t.pocket);
                            i.network && -1 === ["goerli", "ropsten", "rinkeby", "sepolia"].indexOf(i.network.name) && n.push(i)
                        } catch (s) {}
                    }
                    if (r.CloudflareProvider && "-" !== t.cloudflare) try {
                        n.push(new r.CloudflareProvider(e))
                    } catch (s) {}
                    if (r.AnkrProvider && "-" !== t.ankr) try {
                        var o = new r.AnkrProvider(e, t.ankr);
                        o.network && -1 === ["ropsten"].indexOf(o.network.name) && n.push(o)
                    } catch (s) {}
                    if (0 === n.length) return null;
                    if (r.FallbackProvider) {
                        var a = 1;
                        return null != t.quorum ? a = t.quorum : "homestead" === e && (a = 2), new r.FallbackProvider(n, a)
                    }
                    return n[0]
                };
                return r.renetwork = function(e) {
                    return i(e)
                }, r
            }

            function o(e, r) {
                var t = function(t, n) {
                    return t.JsonRpcProvider ? new t.JsonRpcProvider(e, r) : null
                };
                return t.renetwork = function(r) {
                    return o(e, r)
                }, t
            }
            var a = {
                    chainId: 1,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "homestead",
                    _defaultProvider: i("homestead")
                },
                s = {
                    chainId: 3,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "ropsten",
                    _defaultProvider: i("ropsten")
                },
                u = {
                    chainId: 63,
                    name: "classicMordor",
                    _defaultProvider: o("https://www.ethercluster.com/mordor", "classicMordor")
                },
                c = {
                    unspecified: {
                        chainId: 0,
                        name: "unspecified"
                    },
                    homestead: a,
                    mainnet: a,
                    morden: {
                        chainId: 2,
                        name: "morden"
                    },
                    ropsten: s,
                    testnet: s,
                    rinkeby: {
                        chainId: 4,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "rinkeby",
                        _defaultProvider: i("rinkeby")
                    },
                    kovan: {
                        chainId: 42,
                        name: "kovan",
                        _defaultProvider: i("kovan")
                    },
                    goerli: {
                        chainId: 5,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "goerli",
                        _defaultProvider: i("goerli")
                    },
                    kintsugi: {
                        chainId: 1337702,
                        name: "kintsugi"
                    },
                    sepolia: {
                        chainId: 11155111,
                        name: "sepolia",
                        _defaultProvider: i("sepolia")
                    },
                    classic: {
                        chainId: 61,
                        name: "classic",
                        _defaultProvider: o("https://www.ethercluster.com/etc", "classic")
                    },
                    classicMorden: {
                        chainId: 62,
                        name: "classicMorden"
                    },
                    classicMordor: u,
                    classicTestnet: u,
                    classicKotti: {
                        chainId: 6,
                        name: "classicKotti",
                        _defaultProvider: o("https://www.ethercluster.com/kotti", "classicKotti")
                    },
                    xdai: {
                        chainId: 100,
                        name: "xdai"
                    },
                    matic: {
                        chainId: 137,
                        name: "matic",
                        _defaultProvider: i("matic")
                    },
                    maticmum: {
                        chainId: 80001,
                        name: "maticmum"
                    },
                    optimism: {
                        chainId: 10,
                        name: "optimism",
                        _defaultProvider: i("optimism")
                    },
                    "optimism-kovan": {
                        chainId: 69,
                        name: "optimism-kovan"
                    },
                    "optimism-goerli": {
                        chainId: 420,
                        name: "optimism-goerli"
                    },
                    arbitrum: {
                        chainId: 42161,
                        name: "arbitrum"
                    },
                    "arbitrum-rinkeby": {
                        chainId: 421611,
                        name: "arbitrum-rinkeby"
                    },
                    "arbitrum-goerli": {
                        chainId: 421613,
                        name: "arbitrum-goerli"
                    },
                    bnb: {
                        chainId: 56,
                        name: "bnb"
                    },
                    bnbt: {
                        chainId: 97,
                        name: "bnbt"
                    }
                };

            function f(e) {
                if (null == e) return null;
                if ("number" === typeof e) {
                    for (var r in c) {
                        var t = c[r];
                        if (t.chainId === e) return {
                            name: t.name,
                            chainId: t.chainId,
                            ensAddress: t.ensAddress || null,
                            _defaultProvider: t._defaultProvider || null
                        }
                    }
                    return {
                        chainId: e,
                        name: "unknown"
                    }
                }
                if ("string" === typeof e) {
                    var i = c[e];
                    return null == i ? null : {
                        name: i.name,
                        chainId: i.chainId,
                        ensAddress: i.ensAddress,
                        _defaultProvider: i._defaultProvider || null
                    }
                }
                var o = c[e.name];
                if (!o) return "number" !== typeof e.chainId && n.throwArgumentError("invalid network chainId", "network", e), e;
                0 !== e.chainId && e.chainId !== o.chainId && n.throwArgumentError("network chainId mismatch", "network", e);
                var a, s = e._defaultProvider || null;
                return null == s && o._defaultProvider && (s = (a = o._defaultProvider) && "function" === typeof a.renetwork ? o._defaultProvider.renetwork(e) : o._defaultProvider), {
                    name: e.name,
                    chainId: o.chainId,
                    ensAddress: e.ensAddress || o.ensAddress || null,
                    _defaultProvider: s
                }
            }
        },
        64476: function(e, r, t) {
            "use strict";
            t.d(r, {
                n: function() {
                    return o
                }
            });
            var n = t(53237),
                i = t(30226);

            function o(e, r, t, o, a) {
                var s;
                e = (0, n.arrayify)(e), r = (0, n.arrayify)(r);
                var u, c, f = 1,
                    l = new Uint8Array(o),
                    h = new Uint8Array(r.length + 4);
                h.set(r);
                for (var d = 1; d <= f; d++) {
                    h[r.length] = d >> 24 & 255, h[r.length + 1] = d >> 16 & 255, h[r.length + 2] = d >> 8 & 255, h[r.length + 3] = 255 & d;
                    var p = (0, n.arrayify)((0, i.Gy)(a, e, h));
                    s || (s = p.length, c = new Uint8Array(s), u = o - ((f = Math.ceil(o / s)) - 1) * s), c.set(p);
                    for (var v = 1; v < t; v++) {
                        p = (0, n.arrayify)((0, i.Gy)(a, e, p));
                        for (var g = 0; g < s; g++) c[g] ^= p[g]
                    }
                    var m = (d - 1) * s,
                        y = d === f ? u : s;
                    l.set((0, n.arrayify)(c).slice(0, y), m)
                }
                return (0, n.hexlify)(l)
            }
        },
        87549: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                Description: function() {
                    return y
                },
                checkProperties: function() {
                    return h
                },
                deepCopy: function() {
                    return m
                },
                defineReadOnly: function() {
                    return c
                },
                getStatic: function() {
                    return f
                },
                resolveProperties: function() {
                    return l
                },
                shallowCopy: function() {
                    return d
                }
            });
            var n = t(84531),
                i = t(27853),
                o = t(27166),
                a = t(79094),
                s = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                u = new a.Logger("properties/5.7.0");

            function c(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }

            function f(e, r) {
                for (var t = 0; t < 32; t++) {
                    if (e[r]) return e[r];
                    if (!e.prototype || "object" !== typeof e.prototype) break;
                    e = Object.getPrototypeOf(e.prototype).constructor
                }
                return null
            }

            function l(e) {
                return s(this, void 0, void 0, (0, o.Z)().mark((function r() {
                    var t, n;
                    return (0, o.Z)().wrap((function(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return t = Object.keys(e).map((function(r) {
                                    var t = e[r];
                                    return Promise.resolve(t).then((function(e) {
                                        return {
                                            key: r,
                                            value: e
                                        }
                                    }))
                                })), r.next = 3, Promise.all(t);
                            case 3:
                                return n = r.sent, r.abrupt("return", n.reduce((function(e, r) {
                                    return e[r.key] = r.value, e
                                }), {}));
                            case 5:
                            case "end":
                                return r.stop()
                        }
                    }), r)
                })))
            }

            function h(e, r) {
                e && "object" === typeof e || u.throwArgumentError("invalid object", "object", e), Object.keys(e).forEach((function(t) {
                    r[t] || u.throwArgumentError("invalid object key - " + t, "transaction:" + t, e)
                }))
            }

            function d(e) {
                var r = {};
                for (var t in e) r[t] = e[t];
                return r
            }
            var p = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function v(e) {
                if (void 0 === e || null === e || p[typeof e]) return !0;
                if (Array.isArray(e) || "object" === typeof e) {
                    if (!Object.isFrozen(e)) return !1;
                    for (var r = Object.keys(e), t = 0; t < r.length; t++) {
                        var n = null;
                        try {
                            n = e[r[t]]
                        } catch (i) {
                            continue
                        }
                        if (!v(n)) return !1
                    }
                    return !0
                }
                return u.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function g(e) {
                if (v(e)) return e;
                if (Array.isArray(e)) return Object.freeze(e.map((function(e) {
                    return m(e)
                })));
                if ("object" === typeof e) {
                    var r = {};
                    for (var t in e) {
                        var n = e[t];
                        void 0 !== n && c(r, t, m(n))
                    }
                    return r
                }
                return u.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function m(e) {
                return g(e)
            }
            var y = (0, n.Z)((function e(r) {
                for (var t in (0, i.Z)(this, e), r) this[t] = m(r[t])
            }))
        },
        10731: function(e, r, t) {
            "use strict";
            t.d(r, {
                i: function() {
                    return n
                }
            });
            var n = "providers/5.7.2"
        },
        69800: function(e, r, t) {
            "use strict";
            t.d(r, {
                H2: function() {
                    return H
                },
                Zk: function() {
                    return J
                }
            });
            var n = t(6148),
                i = t(81020),
                o = t(18992),
                a = t(27166),
                s = t(27853),
                u = t(84531),
                c = t(99221),
                f = t(38531),
                l = t(8116),
                h = t(96812),
                d = t(53237),
                p = t(70956),
                v = t(3910),
                g = t(60573),
                m = t(87549),
                y = t(30226),
                b = t(9759),
                E = t(16819),
                w = t(98334),
                A = t.n(w),
                k = t(79094),
                N = t(10731),
                R = t(29728),
                x = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                I = new k.Logger(N.i);

            function P(e) {
                return null == e ? "null" : (32 !== (0, d.hexDataLength)(e) && I.throwArgumentError("invalid topic", "topic", e), e.toLowerCase())
            }

            function S(e) {
                for (e = e.slice(); e.length > 0 && null == e[e.length - 1];) e.pop();
                return e.map((function(e) {
                    if (Array.isArray(e)) {
                        var r = {};
                        e.forEach((function(e) {
                            r[P(e)] = !0
                        }));
                        var t = Object.keys(r);
                        return t.sort(), t.join("|")
                    }
                    return P(e)
                })).join("&")
            }

            function _(e) {
                if ("string" === typeof e) {
                    if (e = e.toLowerCase(), 32 === (0, d.hexDataLength)(e)) return "tx:" + e;
                    if (-1 === e.indexOf(":")) return e
                } else {
                    if (Array.isArray(e)) return "filter:*:" + S(e);
                    if (c.Sg.isForkEvent(e)) throw I.warn("not implemented"), new Error("not implemented");
                    if (e && "object" === typeof e) return "filter:" + (e.address || "*") + ":" + S(e.topics || [])
                }
                throw new Error("invalid event - " + e)
            }

            function T() {
                return (new Date).getTime()
            }

            function O(e) {
                return new Promise((function(r) {
                    setTimeout(r, e)
                }))
            }
            var C = ["block", "network", "pending", "poll"],
                U = function() {
                    function e(r, t, n) {
                        (0, s.Z)(this, e), (0, m.defineReadOnly)(this, "tag", r), (0, m.defineReadOnly)(this, "listener", t), (0, m.defineReadOnly)(this, "once", n), this._lastBlockNumber = -2, this._inflight = !1
                    }
                    return (0, u.Z)(e, [{
                        key: "event",
                        get: function() {
                            switch (this.type) {
                                case "tx":
                                    return this.hash;
                                case "filter":
                                    return this.filter
                            }
                            return this.tag
                        }
                    }, {
                        key: "type",
                        get: function() {
                            return this.tag.split(":")[0]
                        }
                    }, {
                        key: "hash",
                        get: function() {
                            var e = this.tag.split(":");
                            return "tx" !== e[0] ? null : e[1]
                        }
                    }, {
                        key: "filter",
                        get: function() {
                            var e = this.tag.split(":");
                            if ("filter" !== e[0]) return null;
                            var r, t = e[1],
                                n = "" === (r = e[2]) ? [] : r.split(/&/g).map((function(e) {
                                    if ("" === e) return [];
                                    var r = e.split("|").map((function(e) {
                                        return "null" === e ? null : e
                                    }));
                                    return 1 === r.length ? r[0] : r
                                })),
                                i = {};
                            return n.length > 0 && (i.topics = n), t && "*" !== t && (i.address = t), i
                        }
                    }, {
                        key: "pollable",
                        value: function() {
                            return this.tag.indexOf(":") >= 0 || C.indexOf(this.tag) >= 0
                        }
                    }]), e
                }(),
                L = {
                    0: {
                        symbol: "btc",
                        p2pkh: 0,
                        p2sh: 5,
                        prefix: "bc"
                    },
                    2: {
                        symbol: "ltc",
                        p2pkh: 48,
                        p2sh: 50,
                        prefix: "ltc"
                    },
                    3: {
                        symbol: "doge",
                        p2pkh: 30,
                        p2sh: 22
                    },
                    60: {
                        symbol: "eth",
                        ilk: "eth"
                    },
                    61: {
                        symbol: "etc",
                        ilk: "eth"
                    },
                    700: {
                        symbol: "xdai",
                        ilk: "eth"
                    }
                };

            function F(e) {
                return (0, d.hexZeroPad)(h.O$.from(e).toHexString(), 32)
            }

            function D(e) {
                return l.Base58.encode((0, d.concat)([e, (0, d.hexDataSlice)((0, y.JQ)((0, y.JQ)(e)), 0, 4)]))
            }
            var M = new RegExp("^(ipfs)://(.*)$", "i"),
                B = [new RegExp("^(https)://(.*)$", "i"), new RegExp("^(data):(.*)$", "i"), M, new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];

            function G(e, r) {
                try {
                    return (0, b.ZN)(Z(e, r))
                } catch (t) {}
                return null
            }

            function Z(e, r) {
                if ("0x" === e) return null;
                var t = h.O$.from((0, d.hexDataSlice)(e, r, r + 32)).toNumber(),
                    n = h.O$.from((0, d.hexDataSlice)(e, t, t + 32)).toNumber();
                return (0, d.hexDataSlice)(e, t + 32, t + 32 + n)
            }

            function j(e) {
                return e.match(/^ipfs:\/\/ipfs\//i) ? e = e.substring(12) : e.match(/^ipfs:\/\//i) ? e = e.substring(7) : I.throwArgumentError("unsupported IPFS format", "link", e), "https://gateway.ipfs.io/ipfs/".concat(e)
            }

            function K(e) {
                var r = (0, d.arrayify)(e);
                if (r.length > 32) throw new Error("internal; should not happen");
                var t = new Uint8Array(32);
                return t.set(r, 32 - r.length), t
            }

            function z(e) {
                if (e.length % 32 === 0) return e;
                var r = new Uint8Array(32 * Math.ceil(e.length / 32));
                return r.set(e), r
            }

            function q(e) {
                for (var r = [], t = 0, n = 0; n < e.length; n++) r.push(null), t += 32;
                for (var i = 0; i < e.length; i++) {
                    var o = (0, d.arrayify)(e[i]);
                    r[i] = K(t), r.push(K(o.length)), r.push(z(o)), t += 32 + 32 * Math.ceil(o.length / 32)
                }
                return (0, d.hexConcat)(r)
            }
            var H = function() {
                    function e(r, t, n, i) {
                        (0, s.Z)(this, e), (0, m.defineReadOnly)(this, "provider", r), (0, m.defineReadOnly)(this, "name", n), (0, m.defineReadOnly)(this, "address", r.formatter.address(t)), (0, m.defineReadOnly)(this, "_resolvedAddress", i)
                    }
                    return (0, u.Z)(e, [{
                        key: "supportsWildcard",
                        value: function() {
                            var e = this;
                            return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                                to: this.address,
                                data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                            }).then((function(e) {
                                return h.O$.from(e).eq(1)
                            })).catch((function(r) {
                                if (r.code === k.Logger.errors.CALL_EXCEPTION) return !1;
                                throw e._supportsEip2544 = null, r
                            }))), this._supportsEip2544
                        }
                    }, {
                        key: "_fetch",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n, i, o;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return n = {
                                                to: this.address,
                                                ccipReadEnabled: !0,
                                                data: (0, d.hexConcat)([e, (0, v.VM)(this.name), r || "0x"])
                                            }, i = !1, t.next = 4, this.supportsWildcard();
                                        case 4:
                                            if (!t.sent) {
                                                t.next = 7;
                                                break
                                            }
                                            i = !0, n.data = (0, d.hexConcat)(["0x9061b923", q([(0, v.Kn)(this.name), n.data])]);
                                        case 7:
                                            return t.prev = 7, t.next = 10, this.provider.call(n);
                                        case 10:
                                            return o = t.sent, (0, d.arrayify)(o).length % 32 === 4 && I.throwError("resolver threw error", k.Logger.errors.CALL_EXCEPTION, {
                                                transaction: n,
                                                data: o
                                            }), i && (o = Z(o, 0)), t.abrupt("return", o);
                                        case 16:
                                            if (t.prev = 16, t.t0 = t.catch(7), t.t0.code !== k.Logger.errors.CALL_EXCEPTION) {
                                                t.next = 20;
                                                break
                                            }
                                            return t.abrupt("return", null);
                                        case 20:
                                            throw t.t0;
                                        case 21:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [7, 16]
                                ])
                            })))
                        }
                    }, {
                        key: "_fetchBytes",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this._fetch(e, r);
                                        case 2:
                                            if (null == (n = t.sent)) {
                                                t.next = 5;
                                                break
                                            }
                                            return t.abrupt("return", Z(n, 0));
                                        case 5:
                                            return t.abrupt("return", null);
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }, {
                        key: "_getAddress",
                        value: function(e, r) {
                            var t = L[String(e)];
                            if (null == t && I.throwError("unsupported coin type: ".concat(e), k.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "getAddress(".concat(e, ")")
                                }), "eth" === t.ilk) return this.provider.formatter.address(r);
                            var n = (0, d.arrayify)(r);
                            if (null != t.p2pkh) {
                                var i = r.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                                if (i) {
                                    var o = parseInt(i[1], 16);
                                    if (i[2].length === 2 * o && o >= 1 && o <= 75) return D((0, d.concat)([
                                        [t.p2pkh], "0x" + i[2]
                                    ]))
                                }
                            }
                            if (null != t.p2sh) {
                                var a = r.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                                if (a) {
                                    var s = parseInt(a[1], 16);
                                    if (a[2].length === 2 * s && s >= 1 && s <= 75) return D((0, d.concat)([
                                        [t.p2sh], "0x" + a[2]
                                    ]))
                                }
                            }
                            if (null != t.prefix) {
                                var u = n[1],
                                    c = n[0];
                                if (0 === c ? 20 !== u && 32 !== u && (c = -1) : c = -1, c >= 0 && n.length === 2 + u && u >= 1 && u <= 75) {
                                    var f = A().toWords(n.slice(2));
                                    return f.unshift(c), A().encode(t.prefix, f)
                                }
                            }
                            return null
                        }
                    }, {
                        key: "getAddress",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            if (null == e && (e = 60), 60 !== e) {
                                                r.next = 16;
                                                break
                                            }
                                            return r.prev = 2, r.next = 5, this._fetch("0x3b3b57de");
                                        case 5:
                                            if ("0x" !== (t = r.sent) && t !== p.R) {
                                                r.next = 8;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 8:
                                            return r.abrupt("return", this.provider.formatter.callAddress(t));
                                        case 11:
                                            if (r.prev = 11, r.t0 = r.catch(2), r.t0.code !== k.Logger.errors.CALL_EXCEPTION) {
                                                r.next = 15;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 15:
                                            throw r.t0;
                                        case 16:
                                            return r.next = 18, this._fetchBytes("0xf1cb7e06", F(e));
                                        case 18:
                                            if (null != (n = r.sent) && "0x" !== n) {
                                                r.next = 21;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 21:
                                            return null == (i = this._getAddress(e, n)) && I.throwError("invalid or unsupported coin data", k.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "getAddress(".concat(e, ")"),
                                                coinType: e,
                                                data: n
                                            }), r.abrupt("return", i);
                                        case 24:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [2, 11]
                                ])
                            })))
                        }
                    }, {
                        key: "getAvatar",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                var r, t, n, i, o, s, u, c, f, l, p, v, g, m, y, b;
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return r = [{
                                                type: "name",
                                                content: this.name
                                            }], e.prev = 1, e.next = 4, this.getText("avatar");
                                        case 4:
                                            if (null != (t = e.sent)) {
                                                e.next = 7;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 7:
                                            n = 0;
                                        case 8:
                                            if (!(n < B.length)) {
                                                e.next = 91;
                                                break
                                            }
                                            if (null != (i = t.match(B[n]))) {
                                                e.next = 12;
                                                break
                                            }
                                            return e.abrupt("continue", 88);
                                        case 12:
                                            o = i[1].toLowerCase(), e.t0 = o, e.next = "https" === e.t0 ? 16 : "data" === e.t0 ? 18 : "ipfs" === e.t0 ? 20 : "erc721" === e.t0 || "erc1155" === e.t0 ? 22 : 88;
                                            break;
                                        case 16:
                                            return r.push({
                                                type: "url",
                                                content: t
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: t
                                            });
                                        case 18:
                                            return r.push({
                                                type: "data",
                                                content: t
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: t
                                            });
                                        case 20:
                                            return r.push({
                                                type: "ipfs",
                                                content: t
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: j(t)
                                            });
                                        case 22:
                                            if (s = "erc721" === o ? "0xc87b56dd" : "0x0e89341c", r.push({
                                                    type: o,
                                                    content: t
                                                }), e.t1 = this._resolvedAddress, e.t1) {
                                                e.next = 29;
                                                break
                                            }
                                            return e.next = 28, this.getAddress();
                                        case 28:
                                            e.t1 = e.sent;
                                        case 29:
                                            if (u = e.t1, 2 === (c = (i[2] || "").split("/")).length) {
                                                e.next = 33;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 33:
                                            return e.next = 35, this.provider.formatter.address(c[0]);
                                        case 35:
                                            if (f = e.sent, l = (0, d.hexZeroPad)(h.O$.from(c[1]).toHexString(), 32), "erc721" !== o) {
                                                e.next = 48;
                                                break
                                            }
                                            return e.t2 = this.provider.formatter, e.next = 41, this.provider.call({
                                                to: f,
                                                data: (0, d.hexConcat)(["0x6352211e", l])
                                            });
                                        case 41:
                                            if (e.t3 = e.sent, p = e.t2.callAddress.call(e.t2, e.t3), u === p) {
                                                e.next = 45;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 45:
                                            r.push({
                                                type: "owner",
                                                content: p
                                            }), e.next = 57;
                                            break;
                                        case 48:
                                            if ("erc1155" !== o) {
                                                e.next = 57;
                                                break
                                            }
                                            return e.t4 = h.O$, e.next = 52, this.provider.call({
                                                to: f,
                                                data: (0, d.hexConcat)(["0x00fdd58e", (0, d.hexZeroPad)(u, 32), l])
                                            });
                                        case 52:
                                            if (e.t5 = e.sent, !(v = e.t4.from.call(e.t4, e.t5)).isZero()) {
                                                e.next = 56;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 56:
                                            r.push({
                                                type: "balance",
                                                content: v.toString()
                                            });
                                        case 57:
                                            return g = {
                                                to: this.provider.formatter.address(c[0]),
                                                data: (0, d.hexConcat)([s, l])
                                            }, e.t6 = G, e.next = 61, this.provider.call(g);
                                        case 61:
                                            if (e.t7 = e.sent, null != (m = (0, e.t6)(e.t7, 0))) {
                                                e.next = 65;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 65:
                                            return r.push({
                                                type: "metadata-url-base",
                                                content: m
                                            }), "erc1155" === o && (m = m.replace("{id}", l.substring(2)), r.push({
                                                type: "metadata-url-expanded",
                                                content: m
                                            })), m.match(/^ipfs:/i) && (m = j(m)), r.push({
                                                type: "metadata-url",
                                                content: m
                                            }), e.next = 71, (0, E.fetchJson)(m);
                                        case 71:
                                            if (y = e.sent) {
                                                e.next = 74;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 74:
                                            if (r.push({
                                                    type: "metadata",
                                                    content: JSON.stringify(y)
                                                }), "string" === typeof(b = y.image)) {
                                                e.next = 78;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 78:
                                            if (!b.match(/^(https:\/\/|data:)/i)) {
                                                e.next = 81;
                                                break
                                            }
                                            e.next = 86;
                                            break;
                                        case 81:
                                            if (null != b.match(M)) {
                                                e.next = 84;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 84:
                                            r.push({
                                                type: "url-ipfs",
                                                content: b
                                            }), b = j(b);
                                        case 86:
                                            return r.push({
                                                type: "url",
                                                content: b
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: b
                                            });
                                        case 88:
                                            n++, e.next = 8;
                                            break;
                                        case 91:
                                            e.next = 95;
                                            break;
                                        case 93:
                                            e.prev = 93, e.t8 = e.catch(1);
                                        case 95:
                                            return e.abrupt("return", null);
                                        case 96:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [1, 93]
                                ])
                            })))
                        }
                    }, {
                        key: "getContentHash",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                var r, t, n, i, o, s, u, c, h;
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this._fetchBytes("0xbc1c58d1");
                                        case 2:
                                            if (null != (r = e.sent) && "0x" !== r) {
                                                e.next = 5;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 5:
                                            if (!(t = r.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))) {
                                                e.next = 10;
                                                break
                                            }
                                            if (n = parseInt(t[3], 16), t[4].length !== 2 * n) {
                                                e.next = 10;
                                                break
                                            }
                                            return e.abrupt("return", "ipfs://" + l.Base58.encode("0x" + t[1]));
                                        case 10:
                                            if (!(i = r.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))) {
                                                e.next = 15;
                                                break
                                            }
                                            if (o = parseInt(i[3], 16), i[4].length !== 2 * o) {
                                                e.next = 15;
                                                break
                                            }
                                            return e.abrupt("return", "ipns://" + l.Base58.encode("0x" + i[1]));
                                        case 15:
                                            if (!(s = r.match(/^0xe40101fa011b20([0-9a-f]*)$/))) {
                                                e.next = 19;
                                                break
                                            }
                                            if (64 !== s[1].length) {
                                                e.next = 19;
                                                break
                                            }
                                            return e.abrupt("return", "bzz://" + s[1]);
                                        case 19:
                                            if (!(u = r.match(/^0x90b2c605([0-9a-f]*)$/))) {
                                                e.next = 25;
                                                break
                                            }
                                            if (68 !== u[1].length) {
                                                e.next = 25;
                                                break
                                            }
                                            return c = {
                                                "=": "",
                                                "+": "-",
                                                "/": "_"
                                            }, h = (0, f.c)("0x" + u[1]).replace(/[=+\/]/g, (function(e) {
                                                return c[e]
                                            })), e.abrupt("return", "sia://" + h);
                                        case 25:
                                            return e.abrupt("return", I.throwError("invalid or unsupported content hash data", k.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "getContentHash()",
                                                data: r
                                            }));
                                        case 26:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getText",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = (0, b.Y0)(e), (t = (0, d.concat)([F(64), F(t.length), t])).length % 32 !== 0 && (t = (0, d.concat)([t, (0, d.hexZeroPad)("0x", 32 - e.length % 32)])), r.next = 5, this._fetchBytes("0x59d1d43c", (0, d.hexlify)(t));
                                        case 5:
                                            if (null != (n = r.sent) && "0x" !== n) {
                                                r.next = 8;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 8:
                                            return r.abrupt("return", (0, b.ZN)(n));
                                        case 9:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }]), e
                }(),
                W = null,
                V = 1,
                J = function(e) {
                    (0, i.Z)(t, e);
                    var r = (0, o.Z)(t);

                    function t(e) {
                        var i;
                        if ((0, s.Z)(this, t), (i = r.call(this))._events = [], i._emitted = {
                                block: -2
                            }, i.disableCcipRead = !1, i.formatter = (this instanceof t ? this.constructor : void 0).getFormatter(), (0, m.defineReadOnly)((0, n.Z)(i), "anyNetwork", "any" === e), i.anyNetwork && (e = i.detectNetwork()), e instanceof Promise) i._networkPromise = e, e.catch((function(e) {})), i._ready().catch((function(e) {}));
                        else {
                            var o = (0, m.getStatic)(this instanceof t ? this.constructor : void 0, "getNetwork")(e);
                            o ? ((0, m.defineReadOnly)((0, n.Z)(i), "_network", o), i.emit("network", o, null)) : I.throwArgumentError("invalid network", "network", e)
                        }
                        return i._maxInternalBlockNumber = -1024, i._lastBlockNumber = -2, i._maxFilterBlockRange = 10, i._pollingInterval = 4e3, i._fastQueryDate = 0, i
                    }
                    return (0, u.Z)(t, [{
                        key: "_ready",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                var r;
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (null != this._network) {
                                                e.next = 17;
                                                break
                                            }
                                            if (r = null, !this._networkPromise) {
                                                e.next = 11;
                                                break
                                            }
                                            return e.prev = 3, e.next = 6, this._networkPromise;
                                        case 6:
                                            r = e.sent, e.next = 11;
                                            break;
                                        case 9:
                                            e.prev = 9, e.t0 = e.catch(3);
                                        case 11:
                                            if (null != r) {
                                                e.next = 15;
                                                break
                                            }
                                            return e.next = 14, this.detectNetwork();
                                        case 14:
                                            r = e.sent;
                                        case 15:
                                            r || I.throwError("no network detected", k.Logger.errors.UNKNOWN_ERROR, {}), null == this._network && (this.anyNetwork ? this._network = r : (0, m.defineReadOnly)(this, "_network", r), this.emit("network", r, null));
                                        case 17:
                                            return e.abrupt("return", this._network);
                                        case 18:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [3, 9]
                                ])
                            })))
                        }
                    }, {
                        key: "ready",
                        get: function() {
                            var e = this;
                            return (0, E.poll)((function() {
                                return e._ready().then((function(e) {
                                    return e
                                }), (function(e) {
                                    if (e.code !== k.Logger.errors.NETWORK_ERROR || "noNetwork" !== e.event) throw e
                                }))
                            }))
                        }
                    }, {
                        key: "ccipReadFetch",
                        value: function(e, r, t) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function n() {
                                var i, o, s, u, c, f, l, h, d;
                                return (0, a.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            if (!this.disableCcipRead && 0 !== t.length) {
                                                n.next = 2;
                                                break
                                            }
                                            return n.abrupt("return", null);
                                        case 2:
                                            i = e.to.toLowerCase(), o = r.toLowerCase(), s = [], u = 0;
                                        case 6:
                                            if (!(u < t.length)) {
                                                n.next = 22;
                                                break
                                            }
                                            return c = t[u], f = c.replace("{sender}", i).replace("{data}", o), l = c.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                                data: o,
                                                sender: i
                                            }), n.next = 12, (0, E.fetchJson)({
                                                url: f,
                                                errorPassThrough: !0
                                            }, l, (function(e, r) {
                                                return e.status = r.statusCode, e
                                            }));
                                        case 12:
                                            if (!(h = n.sent).data) {
                                                n.next = 15;
                                                break
                                            }
                                            return n.abrupt("return", h.data);
                                        case 15:
                                            if (d = h.message || "unknown error", !(h.status >= 400 && h.status < 500)) {
                                                n.next = 18;
                                                break
                                            }
                                            return n.abrupt("return", I.throwError("response not found during CCIP fetch: ".concat(d), k.Logger.errors.SERVER_ERROR, {
                                                url: c,
                                                errorMessage: d
                                            }));
                                        case 18:
                                            s.push(d);
                                        case 19:
                                            u++, n.next = 6;
                                            break;
                                        case 22:
                                            return n.abrupt("return", I.throwError("error encountered during CCIP fetch: ".concat(s.map((function(e) {
                                                return JSON.stringify(e)
                                            })).join(", ")), k.Logger.errors.SERVER_ERROR, {
                                                urls: t,
                                                errorMessages: s
                                            }));
                                        case 23:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this)
                            })))
                        }
                    }, {
                        key: "_getInternalBlockNumber",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i, o, s = this;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this._ready();
                                        case 2:
                                            if (!(e > 0)) {
                                                r.next = 20;
                                                break
                                            }
                                        case 3:
                                            if (!this._internalBlockNumber) {
                                                r.next = 20;
                                                break
                                            }
                                            return t = this._internalBlockNumber, r.prev = 5, r.next = 8, t;
                                        case 8:
                                            if (n = r.sent, !(T() - n.respTime <= e)) {
                                                r.next = 11;
                                                break
                                            }
                                            return r.abrupt("return", n.blockNumber);
                                        case 11:
                                            return r.abrupt("break", 20);
                                        case 14:
                                            if (r.prev = 14, r.t0 = r.catch(5), this._internalBlockNumber !== t) {
                                                r.next = 18;
                                                break
                                            }
                                            return r.abrupt("break", 20);
                                        case 18:
                                            r.next = 3;
                                            break;
                                        case 20:
                                            return i = T(), o = (0, m.resolveProperties)({
                                                blockNumber: this.perform("getBlockNumber", {}),
                                                networkError: this.getNetwork().then((function(e) {
                                                    return null
                                                }), (function(e) {
                                                    return e
                                                }))
                                            }).then((function(e) {
                                                var r = e.blockNumber,
                                                    t = e.networkError;
                                                if (t) throw s._internalBlockNumber === o && (s._internalBlockNumber = null), t;
                                                var n = T();
                                                return (r = h.O$.from(r).toNumber()) < s._maxInternalBlockNumber && (r = s._maxInternalBlockNumber), s._maxInternalBlockNumber = r, s._setFastBlockNumber(r), {
                                                    blockNumber: r,
                                                    reqTime: i,
                                                    respTime: n
                                                }
                                            })), this._internalBlockNumber = o, o.catch((function(e) {
                                                s._internalBlockNumber === o && (s._internalBlockNumber = null)
                                            })), r.next = 26, o;
                                        case 26:
                                            return r.abrupt("return", r.sent.blockNumber);
                                        case 27:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [5, 14]
                                ])
                            })))
                        }
                    }, {
                        key: "poll",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                var r, t, n, i, o = this;
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return r = V++, t = [], n = null, e.prev = 3, e.next = 6, this._getInternalBlockNumber(100 + this.pollingInterval / 2);
                                        case 6:
                                            n = e.sent, e.next = 13;
                                            break;
                                        case 9:
                                            return e.prev = 9, e.t0 = e.catch(3), this.emit("error", e.t0), e.abrupt("return");
                                        case 13:
                                            if (this._setFastBlockNumber(n), this.emit("poll", r, n), n !== this._lastBlockNumber) {
                                                e.next = 18;
                                                break
                                            }
                                            return this.emit("didPoll", r), e.abrupt("return");
                                        case 18:
                                            if (-2 === this._emitted.block && (this._emitted.block = n - 1), Math.abs(this._emitted.block - n) > 1e3) I.warn("network block skew detected; skipping block events (emitted=".concat(this._emitted.block, " blockNumber").concat(n, ")")), this.emit("error", I.makeError("network block skew detected", k.Logger.errors.NETWORK_ERROR, {
                                                blockNumber: n,
                                                event: "blockSkew",
                                                previousBlockNumber: this._emitted.block
                                            })), this.emit("block", n);
                                            else
                                                for (i = this._emitted.block + 1; i <= n; i++) this.emit("block", i);
                                            return this._emitted.block !== n && (this._emitted.block = n, Object.keys(this._emitted).forEach((function(e) {
                                                if ("block" !== e) {
                                                    var r = o._emitted[e];
                                                    "pending" !== r && n - r > 12 && delete o._emitted[e]
                                                }
                                            }))), -2 === this._lastBlockNumber && (this._lastBlockNumber = n - 1), this._events.forEach((function(e) {
                                                switch (e.type) {
                                                    case "tx":
                                                        var r = e.hash,
                                                            i = o.getTransactionReceipt(r).then((function(e) {
                                                                return e && null != e.blockNumber ? (o._emitted["t:" + r] = e.blockNumber, o.emit(r, e), null) : null
                                                            })).catch((function(e) {
                                                                o.emit("error", e)
                                                            }));
                                                        t.push(i);
                                                        break;
                                                    case "filter":
                                                        if (!e._inflight) {
                                                            e._inflight = !0, -2 === e._lastBlockNumber && (e._lastBlockNumber = n - 1);
                                                            var a = e.filter;
                                                            a.fromBlock = e._lastBlockNumber + 1, a.toBlock = n;
                                                            var s = a.toBlock - o._maxFilterBlockRange;
                                                            s > a.fromBlock && (a.fromBlock = s), a.fromBlock < 0 && (a.fromBlock = 0);
                                                            var u = o.getLogs(a).then((function(r) {
                                                                e._inflight = !1, 0 !== r.length && r.forEach((function(r) {
                                                                    r.blockNumber > e._lastBlockNumber && (e._lastBlockNumber = r.blockNumber), o._emitted["b:" + r.blockHash] = r.blockNumber, o._emitted["t:" + r.transactionHash] = r.blockNumber, o.emit(a, r)
                                                                }))
                                                            })).catch((function(r) {
                                                                o.emit("error", r), e._inflight = !1
                                                            }));
                                                            t.push(u)
                                                        }
                                                }
                                            })), this._lastBlockNumber = n, Promise.all(t).then((function() {
                                                o.emit("didPoll", r)
                                            })).catch((function(e) {
                                                o.emit("error", e)
                                            })), e.abrupt("return");
                                        case 26:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [3, 9]
                                ])
                            })))
                        }
                    }, {
                        key: "resetEventsBlock",
                        value: function(e) {
                            this._lastBlockNumber = e - 1, this.polling && this.poll()
                        }
                    }, {
                        key: "network",
                        get: function() {
                            return this._network
                        }
                    }, {
                        key: "detectNetwork",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.abrupt("return", I.throwError("provider does not support network detection", k.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "provider.detectNetwork"
                                            }));
                                        case 1:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            })))
                        }
                    }, {
                        key: "getNetwork",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                var r, t, n;
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this._ready();
                                        case 2:
                                            return r = e.sent, e.next = 5, this.detectNetwork();
                                        case 5:
                                            if (t = e.sent, r.chainId === t.chainId) {
                                                e.next = 23;
                                                break
                                            }
                                            if (!this.anyNetwork) {
                                                e.next = 20;
                                                break
                                            }
                                            return this._network = t, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", t, r), e.next = 19, O(0);
                                        case 19:
                                            return e.abrupt("return", this._network);
                                        case 20:
                                            throw n = I.makeError("underlying network changed", k.Logger.errors.NETWORK_ERROR, {
                                                event: "changed",
                                                network: r,
                                                detectedNetwork: t
                                            }), this.emit("error", n), n;
                                        case 23:
                                            return e.abrupt("return", r);
                                        case 24:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "blockNumber",
                        get: function() {
                            var e = this;
                            return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((function(r) {
                                e._setFastBlockNumber(r)
                            }), (function(e) {})), null != this._fastBlockNumber ? this._fastBlockNumber : -1
                        }
                    }, {
                        key: "polling",
                        get: function() {
                            return null != this._poller
                        },
                        set: function(e) {
                            var r = this;
                            e && !this._poller ? (this._poller = setInterval((function() {
                                r.poll()
                            }), this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout((function() {
                                r.poll(), r._bootstrapPoll = setTimeout((function() {
                                    r._poller || r.poll(), r._bootstrapPoll = null
                                }), r.pollingInterval)
                            }), 0))) : !e && this._poller && (clearInterval(this._poller), this._poller = null)
                        }
                    }, {
                        key: "pollingInterval",
                        get: function() {
                            return this._pollingInterval
                        },
                        set: function(e) {
                            var r = this;
                            if ("number" !== typeof e || e <= 0 || parseInt(String(e)) != e) throw new Error("invalid polling interval");
                            this._pollingInterval = e, this._poller && (clearInterval(this._poller), this._poller = setInterval((function() {
                                r.poll()
                            }), this._pollingInterval))
                        }
                    }, {
                        key: "_getFastBlockNumber",
                        value: function() {
                            var e = this,
                                r = T();
                            return r - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = r, this._fastBlockNumberPromise = this.getBlockNumber().then((function(r) {
                                return (null == e._fastBlockNumber || r > e._fastBlockNumber) && (e._fastBlockNumber = r), e._fastBlockNumber
                            }))), this._fastBlockNumberPromise
                        }
                    }, {
                        key: "_setFastBlockNumber",
                        value: function(e) {
                            null != this._fastBlockNumber && e < this._fastBlockNumber || (this._fastQueryDate = T(), (null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e, this._fastBlockNumberPromise = Promise.resolve(e)))
                        }
                    }, {
                        key: "waitForTransaction",
                        value: function(e, r, t) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function n() {
                                return (0, a.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return n.abrupt("return", this._waitForTransaction(e, null == r ? 1 : r, t || 0, null));
                                        case 1:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this)
                            })))
                        }
                    }, {
                        key: "_waitForTransaction",
                        value: function(e, r, t, n) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function i() {
                                var o, s = this;
                                return (0, a.Z)().wrap((function(i) {
                                    for (;;) switch (i.prev = i.next) {
                                        case 0:
                                            return i.next = 2, this.getTransactionReceipt(e);
                                        case 2:
                                            if (!(((o = i.sent) ? o.confirmations : 0) >= r)) {
                                                i.next = 5;
                                                break
                                            }
                                            return i.abrupt("return", o);
                                        case 5:
                                            return i.abrupt("return", new Promise((function(i, o) {
                                                var u = [],
                                                    c = !1,
                                                    f = function() {
                                                        return !!c || (c = !0, u.forEach((function(e) {
                                                            e()
                                                        })), !1)
                                                    },
                                                    l = function(e) {
                                                        e.confirmations < r || f() || i(e)
                                                    };
                                                if (s.on(e, l), u.push((function() {
                                                        s.removeListener(e, l)
                                                    })), n) {
                                                    var h = n.startBlock,
                                                        d = null,
                                                        p = function t(i) {
                                                            return x(s, void 0, void 0, (0, a.Z)().mark((function s() {
                                                                var u = this;
                                                                return (0, a.Z)().wrap((function(s) {
                                                                    for (;;) switch (s.prev = s.next) {
                                                                        case 0:
                                                                            if (!c) {
                                                                                s.next = 2;
                                                                                break
                                                                            }
                                                                            return s.abrupt("return");
                                                                        case 2:
                                                                            return s.next = 4, O(1e3);
                                                                        case 4:
                                                                            this.getTransactionCount(n.from).then((function(s) {
                                                                                return x(u, void 0, void 0, (0, a.Z)().mark((function u() {
                                                                                    var l, p, v, g, m, y;
                                                                                    return (0, a.Z)().wrap((function(a) {
                                                                                        for (;;) switch (a.prev = a.next) {
                                                                                            case 0:
                                                                                                if (!c) {
                                                                                                    a.next = 2;
                                                                                                    break
                                                                                                }
                                                                                                return a.abrupt("return");
                                                                                            case 2:
                                                                                                if (!(s <= n.nonce)) {
                                                                                                    a.next = 6;
                                                                                                    break
                                                                                                }
                                                                                                h = i, a.next = 41;
                                                                                                break;
                                                                                            case 6:
                                                                                                return a.next = 8, this.getTransaction(e);
                                                                                            case 8:
                                                                                                if (!(l = a.sent) || null == l.blockNumber) {
                                                                                                    a.next = 11;
                                                                                                    break
                                                                                                }
                                                                                                return a.abrupt("return");
                                                                                            case 11:
                                                                                                null == d && (d = h - 3) < n.startBlock && (d = n.startBlock);
                                                                                            case 12:
                                                                                                if (!(d <= i)) {
                                                                                                    a.next = 41;
                                                                                                    break
                                                                                                }
                                                                                                if (!c) {
                                                                                                    a.next = 15;
                                                                                                    break
                                                                                                }
                                                                                                return a.abrupt("return");
                                                                                            case 15:
                                                                                                return a.next = 17, this.getBlockWithTransactions(d);
                                                                                            case 17:
                                                                                                p = a.sent, v = 0;
                                                                                            case 19:
                                                                                                if (!(v < p.transactions.length)) {
                                                                                                    a.next = 38;
                                                                                                    break
                                                                                                }
                                                                                                if ((g = p.transactions[v]).hash !== e) {
                                                                                                    a.next = 23;
                                                                                                    break
                                                                                                }
                                                                                                return a.abrupt("return");
                                                                                            case 23:
                                                                                                if (g.from !== n.from || g.nonce !== n.nonce) {
                                                                                                    a.next = 35;
                                                                                                    break
                                                                                                }
                                                                                                if (!c) {
                                                                                                    a.next = 26;
                                                                                                    break
                                                                                                }
                                                                                                return a.abrupt("return");
                                                                                            case 26:
                                                                                                return a.next = 28, this.waitForTransaction(g.hash, r);
                                                                                            case 28:
                                                                                                if (m = a.sent, !f()) {
                                                                                                    a.next = 31;
                                                                                                    break
                                                                                                }
                                                                                                return a.abrupt("return");
                                                                                            case 31:
                                                                                                return y = "replaced", g.data === n.data && g.to === n.to && g.value.eq(n.value) ? y = "repriced" : "0x" === g.data && g.from === g.to && g.value.isZero() && (y = "cancelled"), o(I.makeError("transaction was replaced", k.Logger.errors.TRANSACTION_REPLACED, {
                                                                                                    cancelled: "replaced" === y || "cancelled" === y,
                                                                                                    reason: y,
                                                                                                    replacement: this._wrapTransaction(g),
                                                                                                    hash: e,
                                                                                                    receipt: m
                                                                                                })), a.abrupt("return");
                                                                                            case 35:
                                                                                                v++, a.next = 19;
                                                                                                break;
                                                                                            case 38:
                                                                                                d++, a.next = 12;
                                                                                                break;
                                                                                            case 41:
                                                                                                if (!c) {
                                                                                                    a.next = 43;
                                                                                                    break
                                                                                                }
                                                                                                return a.abrupt("return");
                                                                                            case 43:
                                                                                                this.once("block", t);
                                                                                            case 44:
                                                                                            case "end":
                                                                                                return a.stop()
                                                                                        }
                                                                                    }), u, this)
                                                                                })))
                                                                            }), (function(e) {
                                                                                c || u.once("block", t)
                                                                            }));
                                                                        case 5:
                                                                        case "end":
                                                                            return s.stop()
                                                                    }
                                                                }), s, this)
                                                            })))
                                                        };
                                                    if (c) return;
                                                    s.once("block", p), u.push((function() {
                                                        s.removeListener("block", p)
                                                    }))
                                                }
                                                if ("number" === typeof t && t > 0) {
                                                    var v = setTimeout((function() {
                                                        f() || o(I.makeError("timeout exceeded", k.Logger.errors.TIMEOUT, {
                                                            timeout: t
                                                        }))
                                                    }), t);
                                                    v.unref && v.unref(), u.push((function() {
                                                        clearTimeout(v)
                                                    }))
                                                }
                                            })));
                                        case 6:
                                        case "end":
                                            return i.stop()
                                    }
                                }), i, this)
                            })))
                        }
                    }, {
                        key: "getBlockNumber",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.abrupt("return", this._getInternalBlockNumber(0));
                                        case 1:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getGasPrice",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                var r;
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this.getNetwork();
                                        case 2:
                                            return e.next = 4, this.perform("getGasPrice", {});
                                        case 4:
                                            return r = e.sent, e.prev = 5, e.abrupt("return", h.O$.from(r));
                                        case 9:
                                            return e.prev = 9, e.t0 = e.catch(5), e.abrupt("return", I.throwError("bad result from backend", k.Logger.errors.SERVER_ERROR, {
                                                method: "getGasPrice",
                                                result: r,
                                                error: e.t0
                                            }));
                                        case 12:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [5, 9]
                                ])
                            })))
                        }
                    }, {
                        key: "getBalance",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n, i;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, (0, m.resolveProperties)({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(r)
                                            });
                                        case 4:
                                            return n = t.sent, t.next = 7, this.perform("getBalance", n);
                                        case 7:
                                            return i = t.sent, t.prev = 8, t.abrupt("return", h.O$.from(i));
                                        case 12:
                                            return t.prev = 12, t.t0 = t.catch(8), t.abrupt("return", I.throwError("bad result from backend", k.Logger.errors.SERVER_ERROR, {
                                                method: "getBalance",
                                                params: n,
                                                result: i,
                                                error: t.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "getTransactionCount",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n, i;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, (0, m.resolveProperties)({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(r)
                                            });
                                        case 4:
                                            return n = t.sent, t.next = 7, this.perform("getTransactionCount", n);
                                        case 7:
                                            return i = t.sent, t.prev = 8, t.abrupt("return", h.O$.from(i).toNumber());
                                        case 12:
                                            return t.prev = 12, t.t0 = t.catch(8), t.abrupt("return", I.throwError("bad result from backend", k.Logger.errors.SERVER_ERROR, {
                                                method: "getTransactionCount",
                                                params: n,
                                                result: i,
                                                error: t.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "getCode",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n, i;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, (0, m.resolveProperties)({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(r)
                                            });
                                        case 4:
                                            return n = t.sent, t.next = 7, this.perform("getCode", n);
                                        case 7:
                                            return i = t.sent, t.prev = 8, t.abrupt("return", (0, d.hexlify)(i));
                                        case 12:
                                            return t.prev = 12, t.t0 = t.catch(8), t.abrupt("return", I.throwError("bad result from backend", k.Logger.errors.SERVER_ERROR, {
                                                method: "getCode",
                                                params: n,
                                                result: i,
                                                error: t.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "getStorageAt",
                        value: function(e, r, t) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function n() {
                                var i, o;
                                return (0, a.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return n.next = 2, this.getNetwork();
                                        case 2:
                                            return n.next = 4, (0, m.resolveProperties)({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(t),
                                                position: Promise.resolve(r).then((function(e) {
                                                    return (0, d.hexValue)(e)
                                                }))
                                            });
                                        case 4:
                                            return i = n.sent, n.next = 7, this.perform("getStorageAt", i);
                                        case 7:
                                            return o = n.sent, n.prev = 8, n.abrupt("return", (0, d.hexlify)(o));
                                        case 12:
                                            return n.prev = 12, n.t0 = n.catch(8), n.abrupt("return", I.throwError("bad result from backend", k.Logger.errors.SERVER_ERROR, {
                                                method: "getStorageAt",
                                                params: i,
                                                result: o,
                                                error: n.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "_wrapTransaction",
                        value: function(e, r, t) {
                            var n = this;
                            if (null != r && 32 !== (0, d.hexDataLength)(r)) throw new Error("invalid response - sendTransaction");
                            var i = e;
                            return null != r && e.hash !== r && I.throwError("Transaction hash mismatch from Provider.sendTransaction.", k.Logger.errors.UNKNOWN_ERROR, {
                                expectedHash: e.hash,
                                returnedHash: r
                            }), i.wait = function(r, i) {
                                return x(n, void 0, void 0, (0, a.Z)().mark((function n() {
                                    var o, s;
                                    return (0, a.Z)().wrap((function(n) {
                                        for (;;) switch (n.prev = n.next) {
                                            case 0:
                                                return null == r && (r = 1), null == i && (i = 0), o = void 0, 0 !== r && null != t && (o = {
                                                    data: e.data,
                                                    from: e.from,
                                                    nonce: e.nonce,
                                                    to: e.to,
                                                    value: e.value,
                                                    startBlock: t
                                                }), n.next = 6, this._waitForTransaction(e.hash, r, i, o);
                                            case 6:
                                                if (null != (s = n.sent) || 0 !== r) {
                                                    n.next = 9;
                                                    break
                                                }
                                                return n.abrupt("return", null);
                                            case 9:
                                                return this._emitted["t:" + e.hash] = s.blockNumber, 0 === s.status && I.throwError("transaction failed", k.Logger.errors.CALL_EXCEPTION, {
                                                    transactionHash: e.hash,
                                                    transaction: e,
                                                    receipt: s
                                                }), n.abrupt("return", s);
                                            case 12:
                                            case "end":
                                                return n.stop()
                                        }
                                    }), n, this)
                                })))
                            }, i
                        }
                    }, {
                        key: "sendTransaction",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i, o;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, Promise.resolve(e).then((function(e) {
                                                return (0, d.hexlify)(e)
                                            }));
                                        case 4:
                                            return t = r.sent, null == (n = this.formatter.transaction(e)).confirmations && (n.confirmations = 0), r.next = 9, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                        case 9:
                                            return i = r.sent, r.prev = 10, r.next = 13, this.perform("sendTransaction", {
                                                signedTransaction: t
                                            });
                                        case 13:
                                            return o = r.sent, r.abrupt("return", this._wrapTransaction(n, o, i));
                                        case 17:
                                            throw r.prev = 17, r.t0 = r.catch(10), r.t0.transaction = n, r.t0.transactionHash = n.hash, r.t0;
                                        case 22:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [10, 17]
                                ])
                            })))
                        }
                    }, {
                        key: "_getTransactionRequest",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i = this;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return t = r.sent, n = {}, ["from", "to"].forEach((function(e) {
                                                null != t[e] && (n[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return e ? i._getAddress(e) : null
                                                })))
                                            })), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((function(e) {
                                                null != t[e] && (n[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return e ? h.O$.from(e) : null
                                                })))
                                            })), ["type"].forEach((function(e) {
                                                null != t[e] && (n[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return null != e ? e : null
                                                })))
                                            })), t.accessList && (n.accessList = this.formatter.accessList(t.accessList)), ["data"].forEach((function(e) {
                                                null != t[e] && (n[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return e ? (0, d.hexlify)(e) : null
                                                })))
                                            })), r.t0 = this.formatter, r.next = 12, (0, m.resolveProperties)(n);
                                        case 12:
                                            return r.t1 = r.sent, r.abrupt("return", r.t0.transactionRequest.call(r.t0, r.t1));
                                        case 14:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_getFilter",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n = this;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return e = r.sent, t = {}, null != e.address && (t.address = this._getAddress(e.address)), ["blockHash", "topics"].forEach((function(r) {
                                                null != e[r] && (t[r] = e[r])
                                            })), ["fromBlock", "toBlock"].forEach((function(r) {
                                                null != e[r] && (t[r] = n._getBlockTag(e[r]))
                                            })), r.t0 = this.formatter, r.next = 10, (0, m.resolveProperties)(t);
                                        case 10:
                                            return r.t1 = r.sent, r.abrupt("return", r.t0.filter.call(r.t0, r.t1));
                                        case 12:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_call",
                        value: function(e, r, t) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function n() {
                                var i, o, s, u, c, f, l, p, v, g, m, y, b, E, w;
                                return (0, a.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return t >= 10 && I.throwError("CCIP read exceeded maximum redirections", k.Logger.errors.SERVER_ERROR, {
                                                redirects: t,
                                                transaction: e
                                            }), i = e.to, n.next = 4, this.perform("call", {
                                                transaction: e,
                                                blockTag: r
                                            });
                                        case 4:
                                            if (o = n.sent, !(t >= 0 && "latest" === r && null != i && "0x556f1830" === o.substring(0, 10) && (0, d.hexDataLength)(o) % 32 === 4)) {
                                                n.next = 31;
                                                break
                                            }
                                            for (n.prev = 6, s = (0, d.hexDataSlice)(o, 4), u = (0, d.hexDataSlice)(s, 0, 32), h.O$.from(u).eq(i) || I.throwError("CCIP Read sender did not match", k.Logger.errors.CALL_EXCEPTION, {
                                                    name: "OffchainLookup",
                                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                    transaction: e,
                                                    data: o
                                                }), c = [], f = h.O$.from((0, d.hexDataSlice)(s, 32, 64)).toNumber(), l = h.O$.from((0, d.hexDataSlice)(s, f, f + 32)).toNumber(), p = (0, d.hexDataSlice)(s, f + 32), v = 0; v < l; v++) null == (g = G(p, 32 * v)) && I.throwError("CCIP Read contained corrupt URL string", k.Logger.errors.CALL_EXCEPTION, {
                                                name: "OffchainLookup",
                                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                transaction: e,
                                                data: o
                                            }), c.push(g);
                                            return m = Z(s, 64), h.O$.from((0, d.hexDataSlice)(s, 100, 128)).isZero() || I.throwError("CCIP Read callback selector included junk", k.Logger.errors.CALL_EXCEPTION, {
                                                name: "OffchainLookup",
                                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                transaction: e,
                                                data: o
                                            }), y = (0, d.hexDataSlice)(s, 96, 100), b = Z(s, 128), n.next = 21, this.ccipReadFetch(e, m, c);
                                        case 21:
                                            return null == (E = n.sent) && I.throwError("CCIP Read disabled or provided no URLs", k.Logger.errors.CALL_EXCEPTION, {
                                                name: "OffchainLookup",
                                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                transaction: e,
                                                data: o
                                            }), w = {
                                                to: i,
                                                data: (0, d.hexConcat)([y, q([E, b])])
                                            }, n.abrupt("return", this._call(w, r, t + 1));
                                        case 27:
                                            if (n.prev = 27, n.t0 = n.catch(6), n.t0.code !== k.Logger.errors.SERVER_ERROR) {
                                                n.next = 31;
                                                break
                                            }
                                            throw n.t0;
                                        case 31:
                                            return n.prev = 31, n.abrupt("return", (0, d.hexlify)(o));
                                        case 35:
                                            return n.prev = 35, n.t1 = n.catch(31), n.abrupt("return", I.throwError("bad result from backend", k.Logger.errors.SERVER_ERROR, {
                                                method: "call",
                                                params: {
                                                    transaction: e,
                                                    blockTag: r
                                                },
                                                result: o,
                                                error: n.t1
                                            }));
                                        case 38:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this, [
                                    [6, 27],
                                    [31, 35]
                                ])
                            })))
                        }
                    }, {
                        key: "call",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, (0, m.resolveProperties)({
                                                transaction: this._getTransactionRequest(e),
                                                blockTag: this._getBlockTag(r),
                                                ccipReadEnabled: Promise.resolve(e.ccipReadEnabled)
                                            });
                                        case 4:
                                            return n = t.sent, t.abrupt("return", this._call(n.transaction, n.blockTag, n.ccipReadEnabled ? 0 : -1));
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }, {
                        key: "estimateGas",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, (0, m.resolveProperties)({
                                                transaction: this._getTransactionRequest(e)
                                            });
                                        case 4:
                                            return t = r.sent, r.next = 7, this.perform("estimateGas", t);
                                        case 7:
                                            return n = r.sent, r.prev = 8, r.abrupt("return", h.O$.from(n));
                                        case 12:
                                            return r.prev = 12, r.t0 = r.catch(8), r.abrupt("return", I.throwError("bad result from backend", k.Logger.errors.SERVER_ERROR, {
                                                method: "estimateGas",
                                                params: t,
                                                result: n,
                                                error: r.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "_getAddress",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return "string" !== typeof(e = r.sent) && I.throwArgumentError("invalid address or ENS name", "name", e), r.next = 6, this.resolveName(e);
                                        case 6:
                                            return null == (t = r.sent) && I.throwError("ENS name not configured", k.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "resolveName(".concat(JSON.stringify(e), ")")
                                            }), r.abrupt("return", t);
                                        case 9:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_getBlock",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n, i, o = this;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, e;
                                        case 4:
                                            if (e = t.sent, n = -128, i = {
                                                    includeTransactions: !!r
                                                }, !(0, d.isHexString)(e, 32)) {
                                                t.next = 11;
                                                break
                                            }
                                            i.blockHash = e, t.next = 21;
                                            break;
                                        case 11:
                                            return t.prev = 11, t.next = 14, this._getBlockTag(e);
                                        case 14:
                                            i.blockTag = t.sent, (0, d.isHexString)(i.blockTag) && (n = parseInt(i.blockTag.substring(2), 16)), t.next = 21;
                                            break;
                                        case 18:
                                            t.prev = 18, t.t0 = t.catch(11), I.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", e);
                                        case 21:
                                            return t.abrupt("return", (0, E.poll)((function() {
                                                return x(o, void 0, void 0, (0, a.Z)().mark((function e() {
                                                    var t, o, s, u, c, f, l = this;
                                                    return (0, a.Z)().wrap((function(e) {
                                                        for (;;) switch (e.prev = e.next) {
                                                            case 0:
                                                                return e.next = 2, this.perform("getBlock", i);
                                                            case 2:
                                                                if (null != (t = e.sent)) {
                                                                    e.next = 11;
                                                                    break
                                                                }
                                                                if (null == i.blockHash) {
                                                                    e.next = 7;
                                                                    break
                                                                }
                                                                if (null != this._emitted["b:" + i.blockHash]) {
                                                                    e.next = 7;
                                                                    break
                                                                }
                                                                return e.abrupt("return", null);
                                                            case 7:
                                                                if (null == i.blockTag) {
                                                                    e.next = 10;
                                                                    break
                                                                }
                                                                if (!(n > this._emitted.block)) {
                                                                    e.next = 10;
                                                                    break
                                                                }
                                                                return e.abrupt("return", null);
                                                            case 10:
                                                                return e.abrupt("return", void 0);
                                                            case 11:
                                                                if (!r) {
                                                                    e.next = 34;
                                                                    break
                                                                }
                                                                o = null, s = 0;
                                                            case 14:
                                                                if (!(s < t.transactions.length)) {
                                                                    e.next = 31;
                                                                    break
                                                                }
                                                                if (null != (u = t.transactions[s]).blockNumber) {
                                                                    e.next = 20;
                                                                    break
                                                                }
                                                                u.confirmations = 0, e.next = 28;
                                                                break;
                                                            case 20:
                                                                if (null != u.confirmations) {
                                                                    e.next = 28;
                                                                    break
                                                                }
                                                                if (null != o) {
                                                                    e.next = 25;
                                                                    break
                                                                }
                                                                return e.next = 24, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                            case 24:
                                                                o = e.sent;
                                                            case 25:
                                                                (c = o - u.blockNumber + 1) <= 0 && (c = 1), u.confirmations = c;
                                                            case 28:
                                                                s++, e.next = 14;
                                                                break;
                                                            case 31:
                                                                return (f = this.formatter.blockWithTransactions(t)).transactions = f.transactions.map((function(e) {
                                                                    return l._wrapTransaction(e)
                                                                })), e.abrupt("return", f);
                                                            case 34:
                                                                return e.abrupt("return", this.formatter.block(t));
                                                            case 35:
                                                            case "end":
                                                                return e.stop()
                                                        }
                                                    }), e, this)
                                                })))
                                            }), {
                                                oncePoll: this
                                            }));
                                        case 22:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [11, 18]
                                ])
                            })))
                        }
                    }, {
                        key: "getBlock",
                        value: function(e) {
                            return this._getBlock(e, !1)
                        }
                    }, {
                        key: "getBlockWithTransactions",
                        value: function(e) {
                            return this._getBlock(e, !0)
                        }
                    }, {
                        key: "getTransaction",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n = this;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, e;
                                        case 4:
                                            return e = r.sent, t = {
                                                transactionHash: this.formatter.hash(e, !0)
                                            }, r.abrupt("return", (0, E.poll)((function() {
                                                return x(n, void 0, void 0, (0, a.Z)().mark((function r() {
                                                    var n, i, o, s;
                                                    return (0, a.Z)().wrap((function(r) {
                                                        for (;;) switch (r.prev = r.next) {
                                                            case 0:
                                                                return r.next = 2, this.perform("getTransaction", t);
                                                            case 2:
                                                                if (null != (n = r.sent)) {
                                                                    r.next = 7;
                                                                    break
                                                                }
                                                                if (null != this._emitted["t:" + e]) {
                                                                    r.next = 6;
                                                                    break
                                                                }
                                                                return r.abrupt("return", null);
                                                            case 6:
                                                                return r.abrupt("return", void 0);
                                                            case 7:
                                                                if (null != (i = this.formatter.transactionResponse(n)).blockNumber) {
                                                                    r.next = 12;
                                                                    break
                                                                }
                                                                i.confirmations = 0, r.next = 19;
                                                                break;
                                                            case 12:
                                                                if (null != i.confirmations) {
                                                                    r.next = 19;
                                                                    break
                                                                }
                                                                return r.next = 15, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                            case 15:
                                                                o = r.sent, (s = o - i.blockNumber + 1) <= 0 && (s = 1), i.confirmations = s;
                                                            case 19:
                                                                return r.abrupt("return", this._wrapTransaction(i));
                                                            case 20:
                                                            case "end":
                                                                return r.stop()
                                                        }
                                                    }), r, this)
                                                })))
                                            }), {
                                                oncePoll: this
                                            }));
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getTransactionReceipt",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n = this;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, e;
                                        case 4:
                                            return e = r.sent, t = {
                                                transactionHash: this.formatter.hash(e, !0)
                                            }, r.abrupt("return", (0, E.poll)((function() {
                                                return x(n, void 0, void 0, (0, a.Z)().mark((function r() {
                                                    var n, i, o, s;
                                                    return (0, a.Z)().wrap((function(r) {
                                                        for (;;) switch (r.prev = r.next) {
                                                            case 0:
                                                                return r.next = 2, this.perform("getTransactionReceipt", t);
                                                            case 2:
                                                                if (null != (n = r.sent)) {
                                                                    r.next = 7;
                                                                    break
                                                                }
                                                                if (null != this._emitted["t:" + e]) {
                                                                    r.next = 6;
                                                                    break
                                                                }
                                                                return r.abrupt("return", null);
                                                            case 6:
                                                                return r.abrupt("return", void 0);
                                                            case 7:
                                                                if (null != n.blockHash) {
                                                                    r.next = 9;
                                                                    break
                                                                }
                                                                return r.abrupt("return", void 0);
                                                            case 9:
                                                                if (null != (i = this.formatter.receipt(n)).blockNumber) {
                                                                    r.next = 14;
                                                                    break
                                                                }
                                                                i.confirmations = 0, r.next = 21;
                                                                break;
                                                            case 14:
                                                                if (null != i.confirmations) {
                                                                    r.next = 21;
                                                                    break
                                                                }
                                                                return r.next = 17, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                            case 17:
                                                                o = r.sent, (s = o - i.blockNumber + 1) <= 0 && (s = 1), i.confirmations = s;
                                                            case 21:
                                                                return r.abrupt("return", i);
                                                            case 22:
                                                            case "end":
                                                                return r.stop()
                                                        }
                                                    }), r, this)
                                                })))
                                            }), {
                                                oncePoll: this
                                            }));
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getLogs",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, (0, m.resolveProperties)({
                                                filter: this._getFilter(e)
                                            });
                                        case 4:
                                            return t = r.sent, r.next = 7, this.perform("getLogs", t);
                                        case 7:
                                            return (n = r.sent).forEach((function(e) {
                                                null == e.removed && (e.removed = !1)
                                            })), r.abrupt("return", R.Mb.arrayOf(this.formatter.filterLog.bind(this.formatter))(n));
                                        case 10:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getEtherPrice",
                        value: function() {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function e() {
                                return (0, a.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this.getNetwork();
                                        case 2:
                                            return e.abrupt("return", this.perform("getEtherPrice", {}));
                                        case 3:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "_getBlockTag",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            if (!("number" === typeof(e = r.sent) && e < 0)) {
                                                r.next = 11;
                                                break
                                            }
                                            return e % 1 && I.throwArgumentError("invalid BlockTag", "blockTag", e), r.next = 7, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                        case 7:
                                            return t = r.sent, (t += e) < 0 && (t = 0), r.abrupt("return", this.formatter.blockTag(t));
                                        case 11:
                                            return r.abrupt("return", this.formatter.blockTag(e));
                                        case 12:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getResolver",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            t = e;
                                        case 1:
                                            if ("" !== t && "." !== t) {
                                                r.next = 4;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 4:
                                            if ("eth" === e || "eth" !== t) {
                                                r.next = 6;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 6:
                                            return r.next = 8, this._getResolver(t, "getResolver");
                                        case 8:
                                            if (null == (n = r.sent)) {
                                                r.next = 19;
                                                break
                                            }
                                            if (i = new H(this, n, e), r.t0 = t !== e, !r.t0) {
                                                r.next = 16;
                                                break
                                            }
                                            return r.next = 15, i.supportsWildcard();
                                        case 15:
                                            r.t0 = !r.sent;
                                        case 16:
                                            if (!r.t0) {
                                                r.next = 18;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 18:
                                            return r.abrupt("return", i);
                                        case 19:
                                            t = t.split(".").slice(1).join("."), r.next = 1;
                                            break;
                                        case 22:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_getResolver",
                        value: function(e, r) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function t() {
                                var n, i;
                                return (0, a.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return null == r && (r = "ENS"), t.next = 3, this.getNetwork();
                                        case 3:
                                            return (n = t.sent).ensAddress || I.throwError("network does not support ENS", k.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: r,
                                                network: n.name
                                            }), t.prev = 5, t.next = 8, this.call({
                                                to: n.ensAddress,
                                                data: "0x0178b8bf" + (0, v.VM)(e).substring(2)
                                            });
                                        case 8:
                                            return i = t.sent, t.abrupt("return", this.formatter.callAddress(i));
                                        case 12:
                                            t.prev = 12, t.t0 = t.catch(5);
                                        case 14:
                                            return t.abrupt("return", null);
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [5, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "resolveName",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return e = r.sent, r.prev = 3, r.abrupt("return", Promise.resolve(this.formatter.address(e)));
                                        case 7:
                                            if (r.prev = 7, r.t0 = r.catch(3), !(0, d.isHexString)(e)) {
                                                r.next = 11;
                                                break
                                            }
                                            throw r.t0;
                                        case 11:
                                            return "string" !== typeof e && I.throwArgumentError("invalid ENS name", "name", e), r.next = 14, this.getResolver(e);
                                        case 14:
                                            if (t = r.sent) {
                                                r.next = 17;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 17:
                                            return r.next = 19, t.getAddress();
                                        case 19:
                                            return r.abrupt("return", r.sent);
                                        case 20:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [3, 7]
                                ])
                            })))
                        }
                    }, {
                        key: "lookupAddress",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return e = r.sent, e = this.formatter.address(e), t = e.substring(2).toLowerCase() + ".addr.reverse", r.next = 7, this._getResolver(t, "lookupAddress");
                                        case 7:
                                            if (null != (n = r.sent)) {
                                                r.next = 10;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 10:
                                            return r.t0 = G, r.next = 13, this.call({
                                                to: n,
                                                data: "0x691f3431" + (0, v.VM)(t).substring(2)
                                            });
                                        case 13:
                                            return r.t1 = r.sent, i = (0, r.t0)(r.t1, 0), r.next = 17, this.resolveName(i);
                                        case 17:
                                            if (r.sent == e) {
                                                r.next = 20;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 20:
                                            return r.abrupt("return", i);
                                        case 21:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getAvatar",
                        value: function(e) {
                            return x(this, void 0, void 0, (0, a.Z)().mark((function r() {
                                var t, n, i, o, s, u, c;
                                return (0, a.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            if (t = null, !(0, d.isHexString)(e)) {
                                                r.next = 40;
                                                break
                                            }
                                            return n = this.formatter.address(e), i = n.substring(2).toLowerCase() + ".addr.reverse", r.next = 6, this._getResolver(i, "getAvatar");
                                        case 6:
                                            if (o = r.sent) {
                                                r.next = 9;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 9:
                                            return t = new H(this, o, i), r.prev = 10, r.next = 13, t.getAvatar();
                                        case 13:
                                            if (!(s = r.sent)) {
                                                r.next = 16;
                                                break
                                            }
                                            return r.abrupt("return", s.url);
                                        case 16:
                                            r.next = 22;
                                            break;
                                        case 18:
                                            if (r.prev = 18, r.t0 = r.catch(10), r.t0.code === k.Logger.errors.CALL_EXCEPTION) {
                                                r.next = 22;
                                                break
                                            }
                                            throw r.t0;
                                        case 22:
                                            return r.prev = 22, r.t1 = G, r.next = 26, this.call({
                                                to: o,
                                                data: "0x691f3431" + (0, v.VM)(i).substring(2)
                                            });
                                        case 26:
                                            return r.t2 = r.sent, u = (0, r.t1)(r.t2, 0), r.next = 30, this.getResolver(u);
                                        case 30:
                                            t = r.sent, r.next = 38;
                                            break;
                                        case 33:
                                            if (r.prev = 33, r.t3 = r.catch(22), r.t3.code === k.Logger.errors.CALL_EXCEPTION) {
                                                r.next = 37;
                                                break
                                            }
                                            throw r.t3;
                                        case 37:
                                            return r.abrupt("return", null);
                                        case 38:
                                            r.next = 45;
                                            break;
                                        case 40:
                                            return r.next = 42, this.getResolver(e);
                                        case 42:
                                            if (t = r.sent) {
                                                r.next = 45;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 45:
                                            return r.next = 47, t.getAvatar();
                                        case 47:
                                            if (null != (c = r.sent)) {
                                                r.next = 50;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 50:
                                            return r.abrupt("return", c.url);
                                        case 51:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [10, 18],
                                    [22, 33]
                                ])
                            })))
                        }
                    }, {
                        key: "perform",
                        value: function(e, r) {
                            return I.throwError(e + " not implemented", k.Logger.errors.NOT_IMPLEMENTED, {
                                operation: e
                            })
                        }
                    }, {
                        key: "_startEvent",
                        value: function(e) {
                            this.polling = this._events.filter((function(e) {
                                return e.pollable()
                            })).length > 0
                        }
                    }, {
                        key: "_stopEvent",
                        value: function(e) {
                            this.polling = this._events.filter((function(e) {
                                return e.pollable()
                            })).length > 0
                        }
                    }, {
                        key: "_addEventListener",
                        value: function(e, r, t) {
                            var n = new U(_(e), r, t);
                            return this._events.push(n), this._startEvent(n), this
                        }
                    }, {
                        key: "on",
                        value: function(e, r) {
                            return this._addEventListener(e, r, !1)
                        }
                    }, {
                        key: "once",
                        value: function(e, r) {
                            return this._addEventListener(e, r, !0)
                        }
                    }, {
                        key: "emit",
                        value: function(e) {
                            for (var r = this, t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];
                            var o = !1,
                                a = [],
                                s = _(e);
                            return this._events = this._events.filter((function(e) {
                                return e.tag !== s || (setTimeout((function() {
                                    e.listener.apply(r, n)
                                }), 0), o = !0, !e.once || (a.push(e), !1))
                            })), a.forEach((function(e) {
                                r._stopEvent(e)
                            })), o
                        }
                    }, {
                        key: "listenerCount",
                        value: function(e) {
                            if (!e) return this._events.length;
                            var r = _(e);
                            return this._events.filter((function(e) {
                                return e.tag === r
                            })).length
                        }
                    }, {
                        key: "listeners",
                        value: function(e) {
                            if (null == e) return this._events.map((function(e) {
                                return e.listener
                            }));
                            var r = _(e);
                            return this._events.filter((function(e) {
                                return e.tag === r
                            })).map((function(e) {
                                return e.listener
                            }))
                        }
                    }, {
                        key: "off",
                        value: function(e, r) {
                            var t = this;
                            if (null == r) return this.removeAllListeners(e);
                            var n = [],
                                i = !1,
                                o = _(e);
                            return this._events = this._events.filter((function(e) {
                                return e.tag !== o || e.listener != r || (!!i || (i = !0, n.push(e), !1))
                            })), n.forEach((function(e) {
                                t._stopEvent(e)
                            })), this
                        }
                    }, {
                        key: "removeAllListeners",
                        value: function(e) {
                            var r = this,
                                t = [];
                            if (null == e) t = this._events, this._events = [];
                            else {
                                var n = _(e);
                                this._events = this._events.filter((function(e) {
                                    return e.tag !== n || (t.push(e), !1)
                                }))
                            }
                            return t.forEach((function(e) {
                                r._stopEvent(e)
                            })), this
                        }
                    }], [{
                        key: "getFormatter",
                        value: function() {
                            return null == W && (W = new R.Mb), W
                        }
                    }, {
                        key: "getNetwork",
                        value: function(e) {
                            return (0, g.H)(null == e ? "homestead" : e)
                        }
                    }]), t
                }(c.zt)
        },
        29728: function(e, r, t) {
            "use strict";
            t.d(r, {
                Ed: function() {
                    return v
                },
                Gp: function() {
                    return g
                },
                Mb: function() {
                    return p
                },
                vh: function() {
                    return y
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(4477),
                a = t(96812),
                s = t(53237),
                u = t(17237),
                c = t(87549),
                f = t(42442),
                l = t(79094),
                h = t(10731),
                d = new l.Logger(h.i),
                p = function() {
                    function e() {
                        (0, n.Z)(this, e), this.formats = this.getDefaultFormats()
                    }
                    return (0, i.Z)(e, [{
                        key: "getDefaultFormats",
                        value: function() {
                            var r = this,
                                t = {},
                                n = this.address.bind(this),
                                i = this.bigNumber.bind(this),
                                o = this.blockTag.bind(this),
                                a = this.data.bind(this),
                                s = this.hash.bind(this),
                                u = this.hex.bind(this),
                                f = this.number.bind(this),
                                l = this.type.bind(this);
                            return t.transaction = {
                                hash: s,
                                type: l,
                                accessList: e.allowNull(this.accessList.bind(this), null),
                                blockHash: e.allowNull(s, null),
                                blockNumber: e.allowNull(f, null),
                                transactionIndex: e.allowNull(f, null),
                                confirmations: e.allowNull(f, null),
                                from: n,
                                gasPrice: e.allowNull(i),
                                maxPriorityFeePerGas: e.allowNull(i),
                                maxFeePerGas: e.allowNull(i),
                                gasLimit: i,
                                to: e.allowNull(n, null),
                                value: i,
                                nonce: f,
                                data: a,
                                r: e.allowNull(this.uint256),
                                s: e.allowNull(this.uint256),
                                v: e.allowNull(f),
                                creates: e.allowNull(n, null),
                                raw: e.allowNull(a)
                            }, t.transactionRequest = {
                                from: e.allowNull(n),
                                nonce: e.allowNull(f),
                                gasLimit: e.allowNull(i),
                                gasPrice: e.allowNull(i),
                                maxPriorityFeePerGas: e.allowNull(i),
                                maxFeePerGas: e.allowNull(i),
                                to: e.allowNull(n),
                                value: e.allowNull(i),
                                data: e.allowNull((function(e) {
                                    return r.data(e, !0)
                                })),
                                type: e.allowNull(f),
                                accessList: e.allowNull(this.accessList.bind(this), null)
                            }, t.receiptLog = {
                                transactionIndex: f,
                                blockNumber: f,
                                transactionHash: s,
                                address: n,
                                topics: e.arrayOf(s),
                                data: a,
                                logIndex: f,
                                blockHash: s
                            }, t.receipt = {
                                to: e.allowNull(this.address, null),
                                from: e.allowNull(this.address, null),
                                contractAddress: e.allowNull(n, null),
                                transactionIndex: f,
                                root: e.allowNull(u),
                                gasUsed: i,
                                logsBloom: e.allowNull(a),
                                blockHash: s,
                                transactionHash: s,
                                logs: e.arrayOf(this.receiptLog.bind(this)),
                                blockNumber: f,
                                confirmations: e.allowNull(f, null),
                                cumulativeGasUsed: i,
                                effectiveGasPrice: e.allowNull(i),
                                status: e.allowNull(f),
                                type: l
                            }, t.block = {
                                hash: e.allowNull(s),
                                parentHash: s,
                                number: f,
                                timestamp: f,
                                nonce: e.allowNull(u),
                                difficulty: this.difficulty.bind(this),
                                gasLimit: i,
                                gasUsed: i,
                                miner: e.allowNull(n),
                                extraData: a,
                                transactions: e.allowNull(e.arrayOf(s)),
                                baseFeePerGas: e.allowNull(i)
                            }, t.blockWithTransactions = (0, c.shallowCopy)(t.block), t.blockWithTransactions.transactions = e.allowNull(e.arrayOf(this.transactionResponse.bind(this))), t.filter = {
                                fromBlock: e.allowNull(o, void 0),
                                toBlock: e.allowNull(o, void 0),
                                blockHash: e.allowNull(s, void 0),
                                address: e.allowNull(n, void 0),
                                topics: e.allowNull(this.topics.bind(this), void 0)
                            }, t.filterLog = {
                                blockNumber: e.allowNull(f),
                                blockHash: e.allowNull(s),
                                transactionIndex: f,
                                removed: e.allowNull(this.boolean.bind(this)),
                                address: n,
                                data: e.allowFalsish(a, "0x"),
                                topics: e.arrayOf(s),
                                transactionHash: s,
                                logIndex: f
                            }, t
                        }
                    }, {
                        key: "accessList",
                        value: function(e) {
                            return (0, f.accessListify)(e || [])
                        }
                    }, {
                        key: "number",
                        value: function(e) {
                            return "0x" === e ? 0 : a.O$.from(e).toNumber()
                        }
                    }, {
                        key: "type",
                        value: function(e) {
                            return "0x" === e || null == e ? 0 : a.O$.from(e).toNumber()
                        }
                    }, {
                        key: "bigNumber",
                        value: function(e) {
                            return a.O$.from(e)
                        }
                    }, {
                        key: "boolean",
                        value: function(e) {
                            if ("boolean" === typeof e) return e;
                            if ("string" === typeof e) {
                                if ("true" === (e = e.toLowerCase())) return !0;
                                if ("false" === e) return !1
                            }
                            throw new Error("invalid boolean - " + e)
                        }
                    }, {
                        key: "hex",
                        value: function(e, r) {
                            return "string" === typeof e && (r || "0x" === e.substring(0, 2) || (e = "0x" + e), (0, s.isHexString)(e)) ? e.toLowerCase() : d.throwArgumentError("invalid hash", "value", e)
                        }
                    }, {
                        key: "data",
                        value: function(e, r) {
                            var t = this.hex(e, r);
                            if (t.length % 2 !== 0) throw new Error("invalid data; odd-length - " + e);
                            return t
                        }
                    }, {
                        key: "address",
                        value: function(e) {
                            return (0, o.getAddress)(e)
                        }
                    }, {
                        key: "callAddress",
                        value: function(e) {
                            if (!(0, s.isHexString)(e, 32)) return null;
                            var r = (0, o.getAddress)((0, s.hexDataSlice)(e, 12));
                            return r === u.d ? null : r
                        }
                    }, {
                        key: "contractAddress",
                        value: function(e) {
                            return (0, o.getContractAddress)(e)
                        }
                    }, {
                        key: "blockTag",
                        value: function(e) {
                            if (null == e) return "latest";
                            if ("earliest" === e) return "0x0";
                            switch (e) {
                                case "earliest":
                                    return "0x0";
                                case "latest":
                                case "pending":
                                case "safe":
                                case "finalized":
                                    return e
                            }
                            if ("number" === typeof e || (0, s.isHexString)(e)) return (0, s.hexValue)(e);
                            throw new Error("invalid blockTag")
                        }
                    }, {
                        key: "hash",
                        value: function(e, r) {
                            var t = this.hex(e, r);
                            return 32 !== (0, s.hexDataLength)(t) ? d.throwArgumentError("invalid hash", "value", e) : t
                        }
                    }, {
                        key: "difficulty",
                        value: function(e) {
                            if (null == e) return null;
                            var r = a.O$.from(e);
                            try {
                                return r.toNumber()
                            } catch (t) {}
                            return null
                        }
                    }, {
                        key: "uint256",
                        value: function(e) {
                            if (!(0, s.isHexString)(e)) throw new Error("invalid uint256");
                            return (0, s.hexZeroPad)(e, 32)
                        }
                    }, {
                        key: "_block",
                        value: function(r, t) {
                            null != r.author && null == r.miner && (r.miner = r.author);
                            var n = null != r._difficulty ? r._difficulty : r.difficulty,
                                i = e.check(t, r);
                            return i._difficulty = null == n ? null : a.O$.from(n), i
                        }
                    }, {
                        key: "block",
                        value: function(e) {
                            return this._block(e, this.formats.block)
                        }
                    }, {
                        key: "blockWithTransactions",
                        value: function(e) {
                            return this._block(e, this.formats.blockWithTransactions)
                        }
                    }, {
                        key: "transactionRequest",
                        value: function(r) {
                            return e.check(this.formats.transactionRequest, r)
                        }
                    }, {
                        key: "transactionResponse",
                        value: function(r) {
                            null != r.gas && null == r.gasLimit && (r.gasLimit = r.gas), r.to && a.O$.from(r.to).isZero() && (r.to = "0x0000000000000000000000000000000000000000"), null != r.input && null == r.data && (r.data = r.input), null == r.to && null == r.creates && (r.creates = this.contractAddress(r)), 1 !== r.type && 2 !== r.type || null != r.accessList || (r.accessList = []);
                            var t = e.check(this.formats.transaction, r);
                            if (null != r.chainId) {
                                var n = r.chainId;
                                (0, s.isHexString)(n) && (n = a.O$.from(n).toNumber()), t.chainId = n
                            } else {
                                var i = r.networkId;
                                null == i && null == t.v && (i = r.chainId), (0, s.isHexString)(i) && (i = a.O$.from(i).toNumber()), "number" !== typeof i && null != t.v && ((i = (t.v - 35) / 2) < 0 && (i = 0), i = parseInt(i)), "number" !== typeof i && (i = 0), t.chainId = i
                            }
                            return t.blockHash && "x" === t.blockHash.replace(/0/g, "") && (t.blockHash = null), t
                        }
                    }, {
                        key: "transaction",
                        value: function(e) {
                            return (0, f.parse)(e)
                        }
                    }, {
                        key: "receiptLog",
                        value: function(r) {
                            return e.check(this.formats.receiptLog, r)
                        }
                    }, {
                        key: "receipt",
                        value: function(r) {
                            var t = e.check(this.formats.receipt, r);
                            if (null != t.root)
                                if (t.root.length <= 4) {
                                    var n = a.O$.from(t.root).toNumber();
                                    0 === n || 1 === n ? (null != t.status && t.status !== n && d.throwArgumentError("alt-root-status/status mismatch", "value", {
                                        root: t.root,
                                        status: t.status
                                    }), t.status = n, delete t.root) : d.throwArgumentError("invalid alt-root-status", "value.root", t.root)
                                } else 66 !== t.root.length && d.throwArgumentError("invalid root hash", "value.root", t.root);
                            return null != t.status && (t.byzantium = !0), t
                        }
                    }, {
                        key: "topics",
                        value: function(e) {
                            var r = this;
                            return Array.isArray(e) ? e.map((function(e) {
                                return r.topics(e)
                            })) : null != e ? this.hash(e, !0) : null
                        }
                    }, {
                        key: "filter",
                        value: function(r) {
                            return e.check(this.formats.filter, r)
                        }
                    }, {
                        key: "filterLog",
                        value: function(r) {
                            return e.check(this.formats.filterLog, r)
                        }
                    }], [{
                        key: "check",
                        value: function(e, r) {
                            var t = {};
                            for (var n in e) try {
                                var i = e[n](r[n]);
                                void 0 !== i && (t[n] = i)
                            } catch (o) {
                                throw o.checkKey = n, o.checkValue = r[n], o
                            }
                            return t
                        }
                    }, {
                        key: "allowNull",
                        value: function(e, r) {
                            return function(t) {
                                return null == t ? r : e(t)
                            }
                        }
                    }, {
                        key: "allowFalsish",
                        value: function(e, r) {
                            return function(t) {
                                return t ? e(t) : r
                            }
                        }
                    }, {
                        key: "arrayOf",
                        value: function(e) {
                            return function(r) {
                                if (!Array.isArray(r)) throw new Error("not an array");
                                var t = [];
                                return r.forEach((function(r) {
                                    t.push(e(r))
                                })), t
                            }
                        }
                    }]), e
                }();

            function v(e) {
                return e && "function" === typeof e.isCommunityResource
            }

            function g(e) {
                return v(e) && e.isCommunityResource()
            }
            var m = !1;

            function y() {
                m || (m = !0, console.log("========= NOTICE ========="), console.log("Request-Rate Exceeded  (this message will not be repeated)"), console.log(""), console.log("The default API keys for each service are provided as a highly-throttled,"), console.log("community resource for low-traffic projects and early prototyping."), console.log(""), console.log("While your application will continue to function, we highly recommended"), console.log("signing up for your own API keys to improve performance, increase your"), console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."), console.log(""), console.log("For more details: https://docs.ethers.io/api-keys/"), console.log("=========================="))
            }
        },
        64095: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                AlchemyProvider: function() {
                    return T
                },
                AlchemyWebSocketProvider: function() {
                    return _
                },
                AnkrProvider: function() {
                    return L
                },
                BaseProvider: function() {
                    return o.Zk
                },
                CloudflareProvider: function() {
                    return M
                },
                EtherscanProvider: function() {
                    return J
                },
                FallbackProvider: function() {
                    return le
                },
                Formatter: function() {
                    return h.Mb
                },
                InfuraProvider: function() {
                    return ge
                },
                InfuraWebSocketProvider: function() {
                    return ve
                },
                IpcProvider: function() {
                    return he
                },
                JsonRpcBatchProvider: function() {
                    return me
                },
                JsonRpcProvider: function() {
                    return y.r
                },
                JsonRpcSigner: function() {
                    return y.C
                },
                NodesmithProvider: function() {
                    return be
                },
                PocketProvider: function() {
                    return Ae
                },
                Provider: function() {
                    return n.zt
                },
                Resolver: function() {
                    return o.H2
                },
                StaticJsonRpcProvider: function() {
                    return I.c
                },
                UrlJsonRpcProvider: function() {
                    return I.l
                },
                Web3Provider: function() {
                    return xe
                },
                WebSocketProvider: function() {
                    return x
                },
                getDefaultProvider: function() {
                    return Pe
                },
                getNetwork: function() {
                    return i.H
                },
                isCommunityResourcable: function() {
                    return h.Ed
                },
                isCommunityResource: function() {
                    return h.Gp
                },
                showThrottleMessage: function() {
                    return h.vh
                }
            });
            var n = t(99221),
                i = t(60573),
                o = t(69800),
                a = t(27853),
                s = t(84531),
                u = t(6148),
                c = t(81020),
                f = t(18992),
                l = t(87549),
                h = t(29728),
                d = t(27166),
                p = t(55679),
                v = t(44474),
                g = t(53538),
                m = t(96812),
                y = t(22405),
                b = t(79094),
                E = t(10731),
                w = null;
            try {
                if (null == (w = WebSocket)) throw new Error("inject please")
            } catch (Se) {
                var A = new b.Logger(E.i);
                w = function() {
                    A.throwError("WebSockets not supported in this environment", b.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "new WebSocket()"
                    })
                }
            }
            var k = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                N = new b.Logger(E.i),
                R = 1,
                x = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, n) {
                        var i, o;
                        (0, a.Z)(this, t), "any" === n && N.throwError("WebSocketProvider does not support 'any' network yet", b.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "network:any"
                        }), (o = "string" === typeof e ? r.call(this, e, n) : r.call(this, "_websocket", n))._pollingInterval = -1, o._wsReady = !1, "string" === typeof e ? (0, l.defineReadOnly)((0, u.Z)(o), "_websocket", new w(o.connection.url)) : (0, l.defineReadOnly)((0, u.Z)(o), "_websocket", e), (0, l.defineReadOnly)((0, u.Z)(o), "_requests", {}), (0, l.defineReadOnly)((0, u.Z)(o), "_subs", {}), (0, l.defineReadOnly)((0, u.Z)(o), "_subIds", {}), (0, l.defineReadOnly)((0, u.Z)(o), "_detectNetwork", (0, v.Z)((i = (0, u.Z)(o), (0, g.Z)(t.prototype)), "detectNetwork", i).call(i)), o.websocket.onopen = function() {
                            o._wsReady = !0, Object.keys(o._requests).forEach((function(e) {
                                o.websocket.send(o._requests[e].payload)
                            }))
                        }, o.websocket.onmessage = function(e) {
                            var r = e.data,
                                t = JSON.parse(r);
                            if (null != t.id) {
                                var n = String(t.id),
                                    i = o._requests[n];
                                if (delete o._requests[n], void 0 !== t.result) i.callback(null, t.result), o.emit("debug", {
                                    action: "response",
                                    request: JSON.parse(i.payload),
                                    response: t.result,
                                    provider: (0, u.Z)(o)
                                });
                                else {
                                    var a = null;
                                    t.error ? (a = new Error(t.error.message || "unknown error"), (0, l.defineReadOnly)(a, "code", t.error.code || null), (0, l.defineReadOnly)(a, "response", r)) : a = new Error("unknown error"), i.callback(a, void 0), o.emit("debug", {
                                        action: "response",
                                        error: a,
                                        request: JSON.parse(i.payload),
                                        provider: (0, u.Z)(o)
                                    })
                                }
                            } else if ("eth_subscription" === t.method) {
                                var s = o._subs[t.params.subscription];
                                s && s.processFunc(t.params.result)
                            } else console.warn("this should not happen")
                        };
                        var s = setInterval((function() {
                            o.emit("poll")
                        }), 1e3);
                        return s.unref && s.unref(), (0, p.Z)(o)
                    }
                    return (0, s.Z)(t, [{
                        key: "websocket",
                        get: function() {
                            return this._websocket
                        }
                    }, {
                        key: "detectNetwork",
                        value: function() {
                            return this._detectNetwork
                        }
                    }, {
                        key: "pollingInterval",
                        get: function() {
                            return 0
                        },
                        set: function(e) {
                            N.throwError("cannot set polling interval on WebSocketProvider", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "setPollingInterval"
                            })
                        }
                    }, {
                        key: "resetEventsBlock",
                        value: function(e) {
                            N.throwError("cannot reset events block on WebSocketProvider", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "resetEventBlock"
                            })
                        }
                    }, {
                        key: "poll",
                        value: function() {
                            return k(this, void 0, void 0, (0, d.Z)().mark((function e() {
                                return (0, d.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.abrupt("return", null);
                                        case 1:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            })))
                        }
                    }, {
                        key: "polling",
                        set: function(e) {
                            e && N.throwError("cannot set polling on WebSocketProvider", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "setPolling"
                            })
                        }
                    }, {
                        key: "send",
                        value: function(e, r) {
                            var t = this,
                                n = R++;
                            return new Promise((function(i, o) {
                                var a = JSON.stringify({
                                    method: e,
                                    params: r,
                                    id: n,
                                    jsonrpc: "2.0"
                                });
                                t.emit("debug", {
                                    action: "request",
                                    request: JSON.parse(a),
                                    provider: t
                                }), t._requests[String(n)] = {
                                    callback: function(e, r) {
                                        return e ? o(e) : i(r)
                                    },
                                    payload: a
                                }, t._wsReady && t.websocket.send(a)
                            }))
                        }
                    }, {
                        key: "_subscribe",
                        value: function(e, r, t) {
                            return k(this, void 0, void 0, (0, d.Z)().mark((function n() {
                                var i, o, a = this;
                                return (0, d.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return null == (i = this._subIds[e]) && (i = Promise.all(r).then((function(e) {
                                                return a.send("eth_subscribe", e)
                                            })), this._subIds[e] = i), n.next = 4, i;
                                        case 4:
                                            o = n.sent, this._subs[o] = {
                                                tag: e,
                                                processFunc: t
                                            };
                                        case 6:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this)
                            })))
                        }
                    }, {
                        key: "_startEvent",
                        value: function(e) {
                            var r = this;
                            switch (e.type) {
                                case "block":
                                    this._subscribe("block", ["newHeads"], (function(e) {
                                        var t = m.O$.from(e.number).toNumber();
                                        r._emitted.block = t, r.emit("block", t)
                                    }));
                                    break;
                                case "pending":
                                    this._subscribe("pending", ["newPendingTransactions"], (function(e) {
                                        r.emit("pending", e)
                                    }));
                                    break;
                                case "filter":
                                    this._subscribe(e.tag, ["logs", this._getFilter(e.filter)], (function(t) {
                                        null == t.removed && (t.removed = !1), r.emit(e.filter, r.formatter.filterLog(t))
                                    }));
                                    break;
                                case "tx":
                                    var t = function(e) {
                                        var t = e.hash;
                                        r.getTransactionReceipt(t).then((function(e) {
                                            e && r.emit(t, e)
                                        }))
                                    };
                                    t(e), this._subscribe("tx", ["newHeads"], (function(e) {
                                        r._events.filter((function(e) {
                                            return "tx" === e.type
                                        })).forEach(t)
                                    }));
                                    break;
                                case "debug":
                                case "poll":
                                case "willPoll":
                                case "didPoll":
                                case "error":
                                    break;
                                default:
                                    console.log("unhandled:", e)
                            }
                        }
                    }, {
                        key: "_stopEvent",
                        value: function(e) {
                            var r = this,
                                t = e.tag;
                            if ("tx" === e.type) {
                                if (this._events.filter((function(e) {
                                        return "tx" === e.type
                                    })).length) return;
                                t = "tx"
                            } else if (this.listenerCount(e.event)) return;
                            var n = this._subIds[t];
                            n && (delete this._subIds[t], n.then((function(e) {
                                r._subs[e] && (delete r._subs[e], r.send("eth_unsubscribe", [e]))
                            })))
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            return k(this, void 0, void 0, (0, d.Z)().mark((function e() {
                                var r = this;
                                return (0, d.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (this.websocket.readyState !== w.CONNECTING) {
                                                e.next = 3;
                                                break
                                            }
                                            return e.next = 3, new Promise((function(e) {
                                                r.websocket.onopen = function() {
                                                    e(!0)
                                                }, r.websocket.onerror = function() {
                                                    e(!1)
                                                }
                                            }));
                                        case 3:
                                            this.websocket.close(1e3);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }], [{
                        key: "defaultUrl",
                        value: function() {
                            return "ws://localhost:8546"
                        }
                    }]), t
                }(y.r),
                I = t(21273),
                P = new b.Logger(E.i),
                S = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC",
                _ = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, n) {
                        var i;
                        (0, a.Z)(this, t);
                        var o = new T(e, n),
                            s = o.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
                        return i = r.call(this, s, o.network), (0, l.defineReadOnly)((0, u.Z)(i), "apiKey", o.apiKey), i
                    }
                    return (0, s.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.apiKey === S
                        }
                    }]), t
                }(x),
                T = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.apiKey === S
                        }
                    }], [{
                        key: "getWebSocketProvider",
                        value: function(e, r) {
                            return new _(e, r)
                        }
                    }, {
                        key: "getApiKey",
                        value: function(e) {
                            return null == e ? S : (e && "string" !== typeof e && P.throwArgumentError("invalid apiKey", "apiKey", e), e)
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            switch (e.name) {
                                case "homestead":
                                    t = "eth-mainnet.alchemyapi.io/v2/";
                                    break;
                                case "goerli":
                                    t = "eth-goerli.g.alchemy.com/v2/";
                                    break;
                                case "matic":
                                    t = "polygon-mainnet.g.alchemy.com/v2/";
                                    break;
                                case "maticmum":
                                    t = "polygon-mumbai.g.alchemy.com/v2/";
                                    break;
                                case "arbitrum":
                                    t = "arb-mainnet.g.alchemy.com/v2/";
                                    break;
                                case "arbitrum-goerli":
                                    t = "arb-goerli.g.alchemy.com/v2/";
                                    break;
                                case "optimism":
                                    t = "opt-mainnet.g.alchemy.com/v2/";
                                    break;
                                case "optimism-goerli":
                                    t = "opt-goerli.g.alchemy.com/v2/";
                                    break;
                                default:
                                    P.throwArgumentError("unsupported network", "network", arguments[0])
                            }
                            return {
                                allowGzip: !0,
                                url: "https://" + t + r,
                                throttleCallback: function(e, t) {
                                    return r === S && (0, h.vh)(), Promise.resolve(!0)
                                }
                            }
                        }
                    }]), t
                }(I.l),
                O = new b.Logger(E.i),
                C = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";

            function U(e) {
                switch (e) {
                    case "homestead":
                        return "rpc.ankr.com/eth/";
                    case "ropsten":
                        return "rpc.ankr.com/eth_ropsten/";
                    case "rinkeby":
                        return "rpc.ankr.com/eth_rinkeby/";
                    case "goerli":
                        return "rpc.ankr.com/eth_goerli/";
                    case "matic":
                        return "rpc.ankr.com/polygon/";
                    case "arbitrum":
                        return "rpc.ankr.com/arbitrum/"
                }
                return O.throwArgumentError("unsupported network", "name", e)
            }
            var L = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.apiKey === C
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            return null == e ? C : e
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            null == r && (r = C);
                            var t = {
                                allowGzip: !0,
                                url: "https://" + U(e.name) + r,
                                throttleCallback: function(e, t) {
                                    return r.apiKey === C && (0, h.vh)(), Promise.resolve(!0)
                                }
                            };
                            return null != r.projectSecret && (t.user = "", t.password = r.projectSecret), t
                        }
                    }]), t
                }(I.l),
                F = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                D = new b.Logger(E.i),
                M = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, [{
                        key: "perform",
                        value: function(e, r) {
                            var n = this,
                                i = Object.create(null, {
                                    perform: {
                                        get: function() {
                                            return (0, v.Z)((0, g.Z)(t.prototype), "perform", n)
                                        }
                                    }
                                });
                            return F(this, void 0, void 0, (0, d.Z)().mark((function t() {
                                var n;
                                return (0, d.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if ("getBlockNumber" !== e) {
                                                t.next = 5;
                                                break
                                            }
                                            return t.next = 3, i.perform.call(this, "getBlock", {
                                                blockTag: "latest"
                                            });
                                        case 3:
                                            return n = t.sent, t.abrupt("return", n.number);
                                        case 5:
                                            return t.abrupt("return", i.perform.call(this, e, r));
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            return null != e && D.throwArgumentError("apiKey not supported for cloudflare", "apiKey", e), null
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            if ("homestead" === e.name) t = "https://cloudflare-eth.com/";
                            else D.throwArgumentError("unsupported network", "network", arguments[0]);
                            return t
                        }
                    }]), t
                }(I.l),
                B = t(53237),
                G = t(42442),
                Z = t(16819),
                j = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                K = new b.Logger(E.i);

            function z(e) {
                var r = {};
                for (var t in e)
                    if (null != e[t]) {
                        var n = e[t];
                        "type" === t && 0 === n || (n = {
                            type: !0,
                            gasLimit: !0,
                            gasPrice: !0,
                            maxFeePerGs: !0,
                            maxPriorityFeePerGas: !0,
                            nonce: !0,
                            value: !0
                        }[t] ? (0, B.hexValue)((0, B.hexlify)(n)) : "accessList" === t ? "[" + (0, G.accessListify)(n).map((function(e) {
                            return '{address:"'.concat(e.address, '",storageKeys:["').concat(e.storageKeys.join('","'), '"]}')
                        })).join(",") + "]" : (0, B.hexlify)(n), r[t] = n)
                    }
                return r
            }

            function q(e) {
                if (0 == e.status && ("No records found" === e.message || "No transactions found" === e.message)) return e.result;
                if (1 != e.status || "string" !== typeof e.message || !e.message.match(/^OK/)) {
                    var r = new Error("invalid response");
                    throw r.result = JSON.stringify(e), (e.result || "").toLowerCase().indexOf("rate limit") >= 0 && (r.throttleRetry = !0), r
                }
                return e.result
            }

            function H(e) {
                if (e && 0 == e.status && "NOTOK" == e.message && (e.result || "").toLowerCase().indexOf("rate limit") >= 0) {
                    var r = new Error("throttled response");
                    throw r.result = JSON.stringify(e), r.throttleRetry = !0, r
                }
                if ("2.0" != e.jsonrpc) {
                    var t = new Error("invalid response");
                    throw t.result = JSON.stringify(e), t
                }
                if (e.error) {
                    var n = new Error(e.error.message || "unknown error");
                    throw e.error.code && (n.code = e.error.code), e.error.data && (n.data = e.error.data), n
                }
                return e.result
            }

            function W(e) {
                if ("pending" === e) throw new Error("pending not supported");
                return "latest" === e ? e : parseInt(e.substring(2), 16)
            }

            function V(e, r, t) {
                if ("call" === e && r.code === b.Logger.errors.SERVER_ERROR) {
                    var n = r.error;
                    if (n && (n.message.match(/reverted/i) || n.message.match(/VM execution error/i))) {
                        var i = n.data;
                        if (i && (i = "0x" + i.replace(/^.*0x/i, "")), (0, B.isHexString)(i)) return i;
                        K.throwError("missing revert data in call exception", b.Logger.errors.CALL_EXCEPTION, {
                            error: r,
                            data: "0x"
                        })
                    }
                }
                var o = r.message;
                throw r.code === b.Logger.errors.SERVER_ERROR && (r.error && "string" === typeof r.error.message ? o = r.error.message : "string" === typeof r.body ? o = r.body : "string" === typeof r.responseText && (o = r.responseText)), (o = (o || "").toLowerCase()).match(/insufficient funds/) && K.throwError("insufficient funds for intrinsic transaction cost", b.Logger.errors.INSUFFICIENT_FUNDS, {
                    error: r,
                    method: e,
                    transaction: t
                }), o.match(/same hash was already imported|transaction nonce is too low|nonce too low/) && K.throwError("nonce has already been used", b.Logger.errors.NONCE_EXPIRED, {
                    error: r,
                    method: e,
                    transaction: t
                }), o.match(/another transaction with same nonce/) && K.throwError("replacement fee too low", b.Logger.errors.REPLACEMENT_UNDERPRICED, {
                    error: r,
                    method: e,
                    transaction: t
                }), o.match(/execution failed due to an exception|execution reverted/) && K.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: r,
                    method: e,
                    transaction: t
                }), r
            }
            var J = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, n) {
                        var i;
                        return (0, a.Z)(this, t), i = r.call(this, e), (0, l.defineReadOnly)((0, u.Z)(i), "baseUrl", i.getBaseUrl()), (0, l.defineReadOnly)((0, u.Z)(i), "apiKey", n || null), i
                    }
                    return (0, s.Z)(t, [{
                        key: "getBaseUrl",
                        value: function() {
                            switch (this.network ? this.network.name : "invalid") {
                                case "homestead":
                                    return "https://api.etherscan.io";
                                case "goerli":
                                    return "https://api-goerli.etherscan.io";
                                case "sepolia":
                                    return "https://api-sepolia.etherscan.io";
                                case "matic":
                                    return "https://api.polygonscan.com";
                                case "maticmum":
                                    return "https://api-testnet.polygonscan.com";
                                case "arbitrum":
                                    return "https://api.arbiscan.io";
                                case "arbitrum-goerli":
                                    return "https://api-goerli.arbiscan.io";
                                case "optimism":
                                    return "https://api-optimistic.etherscan.io";
                                case "optimism-goerli":
                                    return "https://api-goerli-optimistic.etherscan.io"
                            }
                            return K.throwArgumentError("unsupported network", "network", this.network.name)
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = Object.keys(r).reduce((function(e, t) {
                                    var n = r[t];
                                    return null != n && (e += "&".concat(t, "=").concat(n)), e
                                }), ""),
                                n = this.apiKey ? "&apikey=".concat(this.apiKey) : "";
                            return "".concat(this.baseUrl, "/api?module=").concat(e).concat(t).concat(n)
                        }
                    }, {
                        key: "getPostUrl",
                        value: function() {
                            return "".concat(this.baseUrl, "/api")
                        }
                    }, {
                        key: "getPostData",
                        value: function(e, r) {
                            return r.module = e, r.apikey = this.apiKey, r
                        }
                    }, {
                        key: "fetch",
                        value: function(e, r, t) {
                            return j(this, void 0, void 0, (0, d.Z)().mark((function n() {
                                var i, o, a, s, u, c, f = this;
                                return (0, d.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return i = t ? this.getPostUrl() : this.getUrl(e, r), o = t ? this.getPostData(e, r) : null, a = "proxy" === e ? H : q, this.emit("debug", {
                                                action: "request",
                                                request: i,
                                                provider: this
                                            }), s = {
                                                url: i,
                                                throttleSlotInterval: 1e3,
                                                throttleCallback: function(e, r) {
                                                    return f.isCommunityResource() && (0, h.vh)(), Promise.resolve(!0)
                                                }
                                            }, u = null, o && (s.headers = {
                                                "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                                            }, u = Object.keys(o).map((function(e) {
                                                return "".concat(e, "=").concat(o[e])
                                            })).join("&")), n.next = 9, (0, Z.fetchJson)(s, u, a || H);
                                        case 9:
                                            return c = n.sent, this.emit("debug", {
                                                action: "response",
                                                request: i,
                                                response: (0, l.deepCopy)(c),
                                                provider: this
                                            }), n.abrupt("return", c);
                                        case 12:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this)
                            })))
                        }
                    }, {
                        key: "detectNetwork",
                        value: function() {
                            return j(this, void 0, void 0, (0, d.Z)().mark((function e() {
                                return (0, d.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.abrupt("return", this.network);
                                        case 1:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "perform",
                        value: function(e, r) {
                            var n = this,
                                i = Object.create(null, {
                                    perform: {
                                        get: function() {
                                            return (0, v.Z)((0, g.Z)(t.prototype), "perform", n)
                                        }
                                    }
                                });
                            return j(this, void 0, void 0, (0, d.Z)().mark((function t() {
                                var n, o, a, s, u, c, f, l, h;
                                return (0, d.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            t.t0 = e, t.next = "getBlockNumber" === t.t0 ? 3 : "getGasPrice" === t.t0 ? 4 : "getBalance" === t.t0 ? 5 : "getTransactionCount" === t.t0 ? 6 : "getCode" === t.t0 ? 7 : "getStorageAt" === t.t0 ? 8 : "sendTransaction" === t.t0 ? 9 : "getBlock" === t.t0 ? 10 : "getTransaction" === t.t0 ? 13 : "getTransactionReceipt" === t.t0 ? 14 : "call" === t.t0 ? 15 : "estimateGas" === t.t0 ? 29 : "getLogs" === t.t0 ? 41 : "getEtherPrice" === t.t0 ? 65 : 72;
                                            break;
                                        case 3:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_blockNumber"
                                            }));
                                        case 4:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_gasPrice"
                                            }));
                                        case 5:
                                            return t.abrupt("return", this.fetch("account", {
                                                action: "balance",
                                                address: r.address,
                                                tag: r.blockTag
                                            }));
                                        case 6:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_getTransactionCount",
                                                address: r.address,
                                                tag: r.blockTag
                                            }));
                                        case 7:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_getCode",
                                                address: r.address,
                                                tag: r.blockTag
                                            }));
                                        case 8:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_getStorageAt",
                                                address: r.address,
                                                position: r.position,
                                                tag: r.blockTag
                                            }));
                                        case 9:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_sendRawTransaction",
                                                hex: r.signedTransaction
                                            }, !0).catch((function(e) {
                                                return V("sendTransaction", e, r.signedTransaction)
                                            })));
                                        case 10:
                                            if (!r.blockTag) {
                                                t.next = 12;
                                                break
                                            }
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_getBlockByNumber",
                                                tag: r.blockTag,
                                                boolean: r.includeTransactions ? "true" : "false"
                                            }));
                                        case 12:
                                            throw new Error("getBlock by blockHash not implemented");
                                        case 13:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_getTransactionByHash",
                                                txhash: r.transactionHash
                                            }));
                                        case 14:
                                            return t.abrupt("return", this.fetch("proxy", {
                                                action: "eth_getTransactionReceipt",
                                                txhash: r.transactionHash
                                            }));
                                        case 15:
                                            if ("latest" === r.blockTag) {
                                                t.next = 17;
                                                break
                                            }
                                            throw new Error("EtherscanProvider does not support blockTag for call");
                                        case 17:
                                            return (n = z(r.transaction)).module = "proxy", n.action = "eth_call", t.prev = 20, t.next = 23, this.fetch("proxy", n, !0);
                                        case 23:
                                            return t.abrupt("return", t.sent);
                                        case 26:
                                            return t.prev = 26, t.t1 = t.catch(20), t.abrupt("return", V("call", t.t1, r.transaction));
                                        case 29:
                                            return (o = z(r.transaction)).module = "proxy", o.action = "eth_estimateGas", t.prev = 32, t.next = 35, this.fetch("proxy", o, !0);
                                        case 35:
                                            return t.abrupt("return", t.sent);
                                        case 38:
                                            return t.prev = 38, t.t2 = t.catch(32), t.abrupt("return", V("estimateGas", t.t2, r.transaction));
                                        case 41:
                                            return a = {
                                                action: "getLogs"
                                            }, r.filter.fromBlock && (a.fromBlock = W(r.filter.fromBlock)), r.filter.toBlock && (a.toBlock = W(r.filter.toBlock)), r.filter.address && (a.address = r.filter.address), r.filter.topics && r.filter.topics.length > 0 && (r.filter.topics.length > 1 && K.throwError("unsupported topic count", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                                topics: r.filter.topics
                                            }), 1 === r.filter.topics.length && ("string" === typeof(s = r.filter.topics[0]) && 66 === s.length || K.throwError("unsupported topic format", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                                topic0: s
                                            }), a.topic0 = s)), t.next = 48, this.fetch("logs", a);
                                        case 48:
                                            u = t.sent, c = {}, f = 0;
                                        case 51:
                                            if (!(f < u.length)) {
                                                t.next = 64;
                                                break
                                            }
                                            if (null == (l = u[f]).blockHash) {
                                                t.next = 55;
                                                break
                                            }
                                            return t.abrupt("continue", 61);
                                        case 55:
                                            if (null != c[l.blockNumber]) {
                                                t.next = 60;
                                                break
                                            }
                                            return t.next = 58, this.getBlock(l.blockNumber);
                                        case 58:
                                            (h = t.sent) && (c[l.blockNumber] = h.hash);
                                        case 60:
                                            l.blockHash = c[l.blockNumber];
                                        case 61:
                                            f++, t.next = 51;
                                            break;
                                        case 64:
                                            return t.abrupt("return", u);
                                        case 65:
                                            if ("homestead" === this.network.name) {
                                                t.next = 67;
                                                break
                                            }
                                            return t.abrupt("return", 0);
                                        case 67:
                                            return t.t3 = parseFloat, t.next = 70, this.fetch("stats", {
                                                action: "ethprice"
                                            });
                                        case 70:
                                            return t.t4 = t.sent.ethusd, t.abrupt("return", (0, t.t3)(t.t4));
                                        case 72:
                                            return t.abrupt("break", 73);
                                        case 73:
                                            return t.abrupt("return", i.perform.call(this, e, r));
                                        case 74:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [20, 26],
                                    [32, 38]
                                ])
                            })))
                        }
                    }, {
                        key: "getHistory",
                        value: function(e, r, t) {
                            return j(this, void 0, void 0, (0, d.Z)().mark((function n() {
                                var i, o, a = this;
                                return (0, d.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return n.next = 2, this.resolveName(e);
                                        case 2:
                                            return n.t0 = n.sent, n.t1 = null == r ? 0 : r, n.t2 = null == t ? 99999999 : t, i = {
                                                action: "txlist",
                                                address: n.t0,
                                                startblock: n.t1,
                                                endblock: n.t2,
                                                sort: "asc"
                                            }, n.next = 8, this.fetch("account", i);
                                        case 8:
                                            return o = n.sent, n.abrupt("return", o.map((function(e) {
                                                ["contractAddress", "to"].forEach((function(r) {
                                                    "" == e[r] && delete e[r]
                                                })), null == e.creates && null != e.contractAddress && (e.creates = e.contractAddress);
                                                var r = a.formatter.transactionResponse(e);
                                                return e.timeStamp && (r.timestamp = parseInt(e.timeStamp)), r
                                            })));
                                        case 10:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this)
                            })))
                        }
                    }, {
                        key: "isCommunityResource",
                        value: function() {
                            return null == this.apiKey
                        }
                    }]), t
                }(o.Zk),
                X = t(65831),
                Q = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                Y = new b.Logger(E.i);

            function $() {
                return (new Date).getTime()
            }

            function ee(e) {
                for (var r = null, t = 0; t < e.length; t++) {
                    var n = e[t];
                    if (null == n) return null;
                    r ? r.name === n.name && r.chainId === n.chainId && (r.ensAddress === n.ensAddress || null == r.ensAddress && null == n.ensAddress) || Y.throwArgumentError("provider mismatch", "networks", e) : r = n
                }
                return r
            }

            function re(e, r) {
                e = e.slice().sort();
                var t = Math.floor(e.length / 2);
                if (e.length % 2) return e[t];
                var n = e[t - 1],
                    i = e[t];
                return null != r && Math.abs(n - i) > r ? null : (n + i) / 2
            }

            function te(e) {
                if (null === e) return "null";
                if ("number" === typeof e || "boolean" === typeof e) return JSON.stringify(e);
                if ("string" === typeof e) return e;
                if (m.O$.isBigNumber(e)) return e.toString();
                if (Array.isArray(e)) return JSON.stringify(e.map((function(e) {
                    return te(e)
                })));
                if ("object" === typeof e) {
                    var r = Object.keys(e);
                    return r.sort(), "{" + r.map((function(r) {
                        var t = e[r];
                        return t = "function" === typeof t ? "[function]" : te(t), JSON.stringify(r) + ":" + t
                    })).join(",") + "}"
                }
                throw new Error("unknown value type: " + typeof e)
            }
            var ne = 1;

            function ie(e) {
                var r = null,
                    t = null,
                    n = new Promise((function(n) {
                        r = function() {
                            t && (clearTimeout(t), t = null), n()
                        }, t = setTimeout(r, e)
                    }));
                return {
                    cancel: r,
                    getPromise: function() {
                        return n
                    },
                    wait: function(e) {
                        return n = n.then(e)
                    }
                }
            }
            var oe = [b.Logger.errors.CALL_EXCEPTION, b.Logger.errors.INSUFFICIENT_FUNDS, b.Logger.errors.NONCE_EXPIRED, b.Logger.errors.REPLACEMENT_UNDERPRICED, b.Logger.errors.UNPREDICTABLE_GAS_LIMIT],
                ae = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"];

            function se(e, r) {
                var t = {
                    weight: e.weight
                };
                return Object.defineProperty(t, "provider", {
                    get: function() {
                        return e.provider
                    }
                }), e.start && (t.start = e.start), r && (t.duration = r - e.start), e.done && (e.error ? t.error = e.error : t.result = e.result || null), t
            }

            function ue(e, r, t) {
                var n = te;
                switch (r) {
                    case "getBlockNumber":
                        return function(r) {
                            var t = r.map((function(e) {
                                    return e.result
                                })),
                                n = re(r.map((function(e) {
                                    return e.result
                                })), 2);
                            if (null != n) return n = Math.ceil(n), t.indexOf(n + 1) >= 0 && n++, n >= e._highestBlockNumber && (e._highestBlockNumber = n), e._highestBlockNumber
                        };
                    case "getGasPrice":
                        return function(e) {
                            var r = e.map((function(e) {
                                return e.result
                            }));
                            return r.sort(), r[Math.floor(r.length / 2)]
                        };
                    case "getEtherPrice":
                        return function(e) {
                            return re(e.map((function(e) {
                                return e.result
                            })))
                        };
                    case "getBalance":
                    case "getTransactionCount":
                    case "getCode":
                    case "getStorageAt":
                    case "call":
                    case "estimateGas":
                    case "getLogs":
                        break;
                    case "getTransaction":
                    case "getTransactionReceipt":
                        n = function(e) {
                            return null == e ? null : ((e = (0, l.shallowCopy)(e)).confirmations = -1, te(e))
                        };
                        break;
                    case "getBlock":
                        n = t.includeTransactions ? function(e) {
                            return null == e ? null : ((e = (0, l.shallowCopy)(e)).transactions = e.transactions.map((function(e) {
                                return (e = (0, l.shallowCopy)(e)).confirmations = -1, e
                            })), te(e))
                        } : function(e) {
                            return null == e ? null : te(e)
                        };
                        break;
                    default:
                        throw new Error("unknown method: " + r)
                }
                return function(e, r) {
                    return function(t) {
                        var n = {};
                        t.forEach((function(r) {
                            var t = e(r.result);
                            n[t] || (n[t] = {
                                count: 0,
                                result: r.result
                            }), n[t].count++
                        }));
                        for (var i = Object.keys(n), o = 0; o < i.length; o++) {
                            var a = n[i[o]];
                            if (a.count >= r) return a.result
                        }
                    }
                }(n, e.quorum)
            }

            function ce(e, r) {
                return Q(this, void 0, void 0, (0, d.Z)().mark((function t() {
                    var n;
                    return (0, d.Z)().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (!(null != (n = e.provider).blockNumber && n.blockNumber >= r || -1 === r)) {
                                    t.next = 3;
                                    break
                                }
                                return t.abrupt("return", n);
                            case 3:
                                return t.abrupt("return", (0, Z.poll)((function() {
                                    return new Promise((function(t, i) {
                                        setTimeout((function() {
                                            return n.blockNumber >= r ? t(n) : e.cancelled ? t(null) : t(void 0)
                                        }), 0)
                                    }))
                                }), {
                                    oncePoll: n
                                }));
                            case 4:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))
            }

            function fe(e, r, t, n) {
                return Q(this, void 0, void 0, (0, d.Z)().mark((function i() {
                    var o, a;
                    return (0, d.Z)().wrap((function(i) {
                        for (;;) switch (i.prev = i.next) {
                            case 0:
                                o = e.provider, i.t0 = t, i.next = "getBlockNumber" === i.t0 || "getGasPrice" === i.t0 ? 4 : "getEtherPrice" === i.t0 ? 5 : "getBalance" === i.t0 || "getTransactionCount" === i.t0 || "getCode" === i.t0 ? 8 : "getStorageAt" === i.t0 ? 13 : "getBlock" === i.t0 ? 18 : "call" === i.t0 || "estimateGas" === i.t0 ? 23 : "getTransaction" === i.t0 || "getTransactionReceipt" === i.t0 ? 30 : "getLogs" === i.t0 ? 31 : 37;
                                break;
                            case 4:
                                return i.abrupt("return", o[t]());
                            case 5:
                                if (!o.getEtherPrice) {
                                    i.next = 7;
                                    break
                                }
                                return i.abrupt("return", o.getEtherPrice());
                            case 7:
                                return i.abrupt("break", 37);
                            case 8:
                                if (!n.blockTag || !(0, B.isHexString)(n.blockTag)) {
                                    i.next = 12;
                                    break
                                }
                                return i.next = 11, ce(e, r);
                            case 11:
                                o = i.sent;
                            case 12:
                                return i.abrupt("return", o[t](n.address, n.blockTag || "latest"));
                            case 13:
                                if (!n.blockTag || !(0, B.isHexString)(n.blockTag)) {
                                    i.next = 17;
                                    break
                                }
                                return i.next = 16, ce(e, r);
                            case 16:
                                o = i.sent;
                            case 17:
                                return i.abrupt("return", o.getStorageAt(n.address, n.position, n.blockTag || "latest"));
                            case 18:
                                if (!n.blockTag || !(0, B.isHexString)(n.blockTag)) {
                                    i.next = 22;
                                    break
                                }
                                return i.next = 21, ce(e, r);
                            case 21:
                                o = i.sent;
                            case 22:
                                return i.abrupt("return", o[n.includeTransactions ? "getBlockWithTransactions" : "getBlock"](n.blockTag || n.blockHash));
                            case 23:
                                if (!n.blockTag || !(0, B.isHexString)(n.blockTag)) {
                                    i.next = 27;
                                    break
                                }
                                return i.next = 26, ce(e, r);
                            case 26:
                                o = i.sent;
                            case 27:
                                if ("call" !== t || !n.blockTag) {
                                    i.next = 29;
                                    break
                                }
                                return i.abrupt("return", o[t](n.transaction, n.blockTag));
                            case 29:
                                return i.abrupt("return", o[t](n.transaction));
                            case 30:
                                return i.abrupt("return", o[t](n.transactionHash));
                            case 31:
                                if (!((a = n.filter).fromBlock && (0, B.isHexString)(a.fromBlock) || a.toBlock && (0, B.isHexString)(a.toBlock))) {
                                    i.next = 36;
                                    break
                                }
                                return i.next = 35, ce(e, r);
                            case 35:
                                o = i.sent;
                            case 36:
                                return i.abrupt("return", o.getLogs(a));
                            case 37:
                                return i.abrupt("return", Y.throwError("unknown method error", b.Logger.errors.UNKNOWN_ERROR, {
                                    method: t,
                                    params: n
                                }));
                            case 38:
                            case "end":
                                return i.stop()
                        }
                    }), i)
                })))
            }
            var le = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, i) {
                        var o;
                        (0, a.Z)(this, t), 0 === e.length && Y.throwArgumentError("missing providers", "providers", e);
                        var s = e.map((function(e, r) {
                                if (n.zt.isProvider(e)) {
                                    var t = (0, h.Gp)(e) ? 2e3 : 750;
                                    return Object.freeze({
                                        provider: e,
                                        weight: 1,
                                        stallTimeout: t,
                                        priority: 1
                                    })
                                }
                                var i = (0, l.shallowCopy)(e);
                                null == i.priority && (i.priority = 1), null == i.stallTimeout && (i.stallTimeout = (0, h.Gp)(e) ? 2e3 : 750), null == i.weight && (i.weight = 1);
                                var o = i.weight;
                                return (o % 1 || o > 512 || o < 1) && Y.throwArgumentError("invalid weight; must be integer in [1, 512]", "providers[".concat(r, "].weight"), o), Object.freeze(i)
                            })),
                            c = s.reduce((function(e, r) {
                                return e + r.weight
                            }), 0);
                        null == i ? i = c / 2 : i > c && Y.throwArgumentError("quorum will always fail; larger than total weight", "quorum", i);
                        var f = ee(s.map((function(e) {
                            return e.provider.network
                        })));
                        return null == f && (f = new Promise((function(e, r) {
                            setTimeout((function() {
                                o.detectNetwork().then(e, r)
                            }), 0)
                        }))), o = r.call(this, f), (0, l.defineReadOnly)((0, u.Z)(o), "providerConfigs", Object.freeze(s)), (0, l.defineReadOnly)((0, u.Z)(o), "quorum", i), o._highestBlockNumber = -1, o
                    }
                    return (0, s.Z)(t, [{
                        key: "detectNetwork",
                        value: function() {
                            return Q(this, void 0, void 0, (0, d.Z)().mark((function e() {
                                var r;
                                return (0, d.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Promise.all(this.providerConfigs.map((function(e) {
                                                return e.provider.getNetwork()
                                            })));
                                        case 2:
                                            return r = e.sent, e.abrupt("return", ee(r));
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "perform",
                        value: function(e, r) {
                            return Q(this, void 0, void 0, (0, d.Z)().mark((function t() {
                                var n, i, o, a, s, u, c, f, h, p, v = this;
                                return (0, d.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if ("sendTransaction" !== e) {
                                                t.next = 13;
                                                break
                                            }
                                            return t.next = 3, Promise.all(this.providerConfigs.map((function(e) {
                                                return e.provider.sendTransaction(r.signedTransaction).then((function(e) {
                                                    return e.hash
                                                }), (function(e) {
                                                    return e
                                                }))
                                            })));
                                        case 3:
                                            n = t.sent, i = 0;
                                        case 5:
                                            if (!(i < n.length)) {
                                                t.next = 12;
                                                break
                                            }
                                            if ("string" !== typeof(o = n[i])) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return", o);
                                        case 9:
                                            i++, t.next = 5;
                                            break;
                                        case 12:
                                            throw n[0];
                                        case 13:
                                            if (-1 !== this._highestBlockNumber || "getBlockNumber" === e) {
                                                t.next = 16;
                                                break
                                            }
                                            return t.next = 16, this.getBlockNumber();
                                        case 16:
                                            a = ue(this, e, r), (s = (0, X.y)(this.providerConfigs.map(l.shallowCopy))).sort((function(e, r) {
                                                return e.priority - r.priority
                                            })), u = this._highestBlockNumber, c = 0, f = !0, h = (0, d.Z)().mark((function t() {
                                                var n, i, o, h, p, g, m;
                                                return (0, d.Z)().wrap((function(t) {
                                                    for (;;) switch (t.prev = t.next) {
                                                        case 0:
                                                            n = $(), i = s.filter((function(e) {
                                                                return e.runner && n - e.start < e.stallTimeout
                                                            })).reduce((function(e, r) {
                                                                return e + r.weight
                                                            }), 0), o = (0, d.Z)().mark((function t() {
                                                                var n, o;
                                                                return (0, d.Z)().wrap((function(t) {
                                                                    for (;;) switch (t.prev = t.next) {
                                                                        case 0:
                                                                            n = s[c++], o = ne++, n.start = $(), n.staller = ie(n.stallTimeout), n.staller.wait((function() {
                                                                                n.staller = null
                                                                            })), n.runner = fe(n, u, e, r).then((function(t) {
                                                                                n.done = !0, n.result = t, v.listenerCount("debug") && v.emit("debug", {
                                                                                    action: "request",
                                                                                    rid: o,
                                                                                    backend: se(n, $()),
                                                                                    request: {
                                                                                        method: e,
                                                                                        params: (0, l.deepCopy)(r)
                                                                                    },
                                                                                    provider: v
                                                                                })
                                                                            }), (function(t) {
                                                                                n.done = !0, n.error = t, v.listenerCount("debug") && v.emit("debug", {
                                                                                    action: "request",
                                                                                    rid: o,
                                                                                    backend: se(n, $()),
                                                                                    request: {
                                                                                        method: e,
                                                                                        params: (0, l.deepCopy)(r)
                                                                                    },
                                                                                    provider: v
                                                                                })
                                                                            })), v.listenerCount("debug") && v.emit("debug", {
                                                                                action: "request",
                                                                                rid: o,
                                                                                backend: se(n, null),
                                                                                request: {
                                                                                    method: e,
                                                                                    params: (0, l.deepCopy)(r)
                                                                                },
                                                                                provider: v
                                                                            }), i += n.weight;
                                                                        case 8:
                                                                        case "end":
                                                                            return t.stop()
                                                                    }
                                                                }), t)
                                                            }));
                                                        case 3:
                                                            if (!(i < v.quorum && c < s.length)) {
                                                                t.next = 7;
                                                                break
                                                            }
                                                            return t.delegateYield(o(), "t0", 5);
                                                        case 5:
                                                            t.next = 3;
                                                            break;
                                                        case 7:
                                                            if (h = [], s.forEach((function(e) {
                                                                    !e.done && e.runner && (h.push(e.runner), e.staller && h.push(e.staller.getPromise()))
                                                                })), !h.length) {
                                                                t.next = 12;
                                                                break
                                                            }
                                                            return t.next = 12, Promise.race(h);
                                                        case 12:
                                                            if (!((p = s.filter((function(e) {
                                                                    return e.done && null == e.error
                                                                }))).length >= v.quorum)) {
                                                                t.next = 22;
                                                                break
                                                            }
                                                            if (void 0 === (g = a(p))) {
                                                                t.next = 18;
                                                                break
                                                            }
                                                            return s.forEach((function(e) {
                                                                e.staller && e.staller.cancel(), e.cancelled = !0
                                                            })), t.abrupt("return", {
                                                                v: g
                                                            });
                                                        case 18:
                                                            if (f) {
                                                                t.next = 21;
                                                                break
                                                            }
                                                            return t.next = 21, ie(100).getPromise();
                                                        case 21:
                                                            f = !1;
                                                        case 22:
                                                            if (m = s.reduce((function(e, r) {
                                                                    if (!r.done || null == r.error) return e;
                                                                    var t = r.error.code;
                                                                    return oe.indexOf(t) >= 0 && (e[t] || (e[t] = {
                                                                        error: r.error,
                                                                        weight: 0
                                                                    }), e[t].weight += r.weight), e
                                                                }), {}), Object.keys(m).forEach((function(e) {
                                                                    var r = m[e];
                                                                    if (!(r.weight < v.quorum)) {
                                                                        s.forEach((function(e) {
                                                                            e.staller && e.staller.cancel(), e.cancelled = !0
                                                                        }));
                                                                        var t = r.error,
                                                                            n = {};
                                                                        ae.forEach((function(e) {
                                                                            null != t[e] && (n[e] = t[e])
                                                                        })), Y.throwError(t.reason || t.message, e, n)
                                                                    }
                                                                })), 0 !== s.filter((function(e) {
                                                                    return !e.done
                                                                })).length) {
                                                                t.next = 26;
                                                                break
                                                            }
                                                            return t.abrupt("return", "break");
                                                        case 26:
                                                        case "end":
                                                            return t.stop()
                                                    }
                                                }), t)
                                            }));
                                        case 23:
                                            return t.delegateYield(h(), "t0", 25);
                                        case 25:
                                            if ("break" !== (p = t.t0)) {
                                                t.next = 28;
                                                break
                                            }
                                            return t.abrupt("break", 32);
                                        case 28:
                                            if ("object" !== typeof p) {
                                                t.next = 30;
                                                break
                                            }
                                            return t.abrupt("return", p.v);
                                        case 30:
                                            t.next = 23;
                                            break;
                                        case 32:
                                            return s.forEach((function(e) {
                                                e.staller && e.staller.cancel(), e.cancelled = !0
                                            })), t.abrupt("return", Y.throwError("failed to meet quorum", b.Logger.errors.SERVER_ERROR, {
                                                method: e,
                                                params: r,
                                                results: s.map((function(e) {
                                                    return se(e)
                                                })),
                                                provider: this
                                            }));
                                        case 34:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }]), t
                }(o.Zk),
                he = null,
                de = new b.Logger(E.i),
                pe = "84842078b09946638c03157f83405213",
                ve = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, n) {
                        var i;
                        (0, a.Z)(this, t);
                        var o = new ge(e, n),
                            s = o.connection;
                        s.password && de.throwError("INFURA WebSocket project secrets unsupported", b.Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "InfuraProvider.getWebSocketProvider()"
                        });
                        var c = s.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
                        return i = r.call(this, c, e), (0, l.defineReadOnly)((0, u.Z)(i), "apiKey", o.projectId), (0, l.defineReadOnly)((0, u.Z)(i), "projectId", o.projectId), (0, l.defineReadOnly)((0, u.Z)(i), "projectSecret", o.projectSecret), i
                    }
                    return (0, s.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.projectId === pe
                        }
                    }]), t
                }(x),
                ge = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.projectId === pe
                        }
                    }], [{
                        key: "getWebSocketProvider",
                        value: function(e, r) {
                            return new ve(e, r)
                        }
                    }, {
                        key: "getApiKey",
                        value: function(e) {
                            var r = {
                                apiKey: pe,
                                projectId: pe,
                                projectSecret: null
                            };
                            return null == e || ("string" === typeof e ? r.projectId = e : null != e.projectSecret ? (de.assertArgument("string" === typeof e.projectId, "projectSecret requires a projectId", "projectId", e.projectId), de.assertArgument("string" === typeof e.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"), r.projectId = e.projectId, r.projectSecret = e.projectSecret) : e.projectId && (r.projectId = e.projectId), r.apiKey = r.projectId), r
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            switch (e ? e.name : "unknown") {
                                case "homestead":
                                    t = "mainnet.infura.io";
                                    break;
                                case "goerli":
                                    t = "goerli.infura.io";
                                    break;
                                case "sepolia":
                                    t = "sepolia.infura.io";
                                    break;
                                case "matic":
                                    t = "polygon-mainnet.infura.io";
                                    break;
                                case "maticmum":
                                    t = "polygon-mumbai.infura.io";
                                    break;
                                case "optimism":
                                    t = "optimism-mainnet.infura.io";
                                    break;
                                case "optimism-goerli":
                                    t = "optimism-goerli.infura.io";
                                    break;
                                case "arbitrum":
                                    t = "arbitrum-mainnet.infura.io";
                                    break;
                                case "arbitrum-goerli":
                                    t = "arbitrum-goerli.infura.io";
                                    break;
                                default:
                                    de.throwError("unsupported network", b.Logger.errors.INVALID_ARGUMENT, {
                                        argument: "network",
                                        value: e
                                    })
                            }
                            var n = {
                                allowGzip: !0,
                                url: "https://" + t + "/v3/" + r.projectId,
                                throttleCallback: function(e, t) {
                                    return r.projectId === pe && (0, h.vh)(), Promise.resolve(!0)
                                }
                            };
                            return null != r.projectSecret && (n.user = "", n.password = r.projectSecret), n
                        }
                    }]), t
                }(I.l),
                me = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, [{
                        key: "send",
                        value: function(e, r) {
                            var t = this,
                                n = {
                                    method: e,
                                    params: r,
                                    id: this._nextId++,
                                    jsonrpc: "2.0"
                                };
                            null == this._pendingBatch && (this._pendingBatch = []);
                            var i = {
                                    request: n,
                                    resolve: null,
                                    reject: null
                                },
                                o = new Promise((function(e, r) {
                                    i.resolve = e, i.reject = r
                                }));
                            return this._pendingBatch.push(i), this._pendingBatchAggregator || (this._pendingBatchAggregator = setTimeout((function() {
                                var e = t._pendingBatch;
                                t._pendingBatch = null, t._pendingBatchAggregator = null;
                                var r = e.map((function(e) {
                                    return e.request
                                }));
                                return t.emit("debug", {
                                    action: "requestBatch",
                                    request: (0, l.deepCopy)(r),
                                    provider: t
                                }), (0, Z.fetchJson)(t.connection, JSON.stringify(r)).then((function(n) {
                                    t.emit("debug", {
                                        action: "response",
                                        request: r,
                                        response: n,
                                        provider: t
                                    }), e.forEach((function(e, r) {
                                        var t = n[r];
                                        if (t.error) {
                                            var i = new Error(t.error.message);
                                            i.code = t.error.code, i.data = t.error.data, e.reject(i)
                                        } else e.resolve(t.result)
                                    }))
                                }), (function(n) {
                                    t.emit("debug", {
                                        action: "response",
                                        error: n,
                                        request: r,
                                        provider: t
                                    }), e.forEach((function(e) {
                                        e.reject(n)
                                    }))
                                }))
                            }), 10)), o
                        }
                    }]), t
                }(y.r),
                ye = new b.Logger(E.i),
                be = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, null, [{
                        key: "getApiKey",
                        value: function(e) {
                            return e && "string" !== typeof e && ye.throwArgumentError("invalid apiKey", "apiKey", e), e || "ETHERS_JS_SHARED"
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            ye.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
                            var t = null;
                            switch (e.name) {
                                case "homestead":
                                    t = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                                    break;
                                case "ropsten":
                                    t = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                                    break;
                                case "rinkeby":
                                    t = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                                    break;
                                case "goerli":
                                    t = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                                    break;
                                case "kovan":
                                    t = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                                    break;
                                default:
                                    ye.throwArgumentError("unsupported network", "network", arguments[0])
                            }
                            return t + "?apiKey=" + r
                        }
                    }]), t
                }(I.l),
                Ee = new b.Logger(E.i),
                we = "62e1ad51b37b8e00394bda3b",
                Ae = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.applicationId === we
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            var r = {
                                applicationId: null,
                                loadBalancer: !0,
                                applicationSecretKey: null
                            };
                            return null == e ? r.applicationId = we : "string" === typeof e ? r.applicationId = e : null != e.applicationSecretKey ? (r.applicationId = e.applicationId, r.applicationSecretKey = e.applicationSecretKey) : e.applicationId ? r.applicationId = e.applicationId : Ee.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", e), r
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            switch (e ? e.name : "unknown") {
                                case "goerli":
                                    t = "eth-goerli.gateway.pokt.network";
                                    break;
                                case "homestead":
                                    t = "eth-mainnet.gateway.pokt.network";
                                    break;
                                case "kovan":
                                    t = "poa-kovan.gateway.pokt.network";
                                    break;
                                case "matic":
                                    t = "poly-mainnet.gateway.pokt.network";
                                    break;
                                case "maticmum":
                                    t = "polygon-mumbai-rpc.gateway.pokt.network";
                                    break;
                                case "rinkeby":
                                    t = "eth-rinkeby.gateway.pokt.network";
                                    break;
                                case "ropsten":
                                    t = "eth-ropsten.gateway.pokt.network";
                                    break;
                                default:
                                    Ee.throwError("unsupported network", b.Logger.errors.INVALID_ARGUMENT, {
                                        argument: "network",
                                        value: e
                                    })
                            }
                            var n = {
                                headers: {},
                                url: "https://".concat(t, "/v1/lb/").concat(r.applicationId)
                            };
                            return null != r.applicationSecretKey && (n.user = "", n.password = r.applicationSecretKey), n
                        }
                    }]), t
                }(I.l),
                ke = new b.Logger(E.i),
                Ne = 1;

            function Re(e, r) {
                var t = "Web3LegacyFetcher";
                return function(e, n) {
                    var i = this,
                        o = {
                            method: e,
                            params: n,
                            id: Ne++,
                            jsonrpc: "2.0"
                        };
                    return new Promise((function(e, n) {
                        i.emit("debug", {
                            action: "request",
                            fetcher: t,
                            request: (0, l.deepCopy)(o),
                            provider: i
                        }), r(o, (function(r, a) {
                            if (r) return i.emit("debug", {
                                action: "response",
                                fetcher: t,
                                error: r,
                                request: o,
                                provider: i
                            }), n(r);
                            if (i.emit("debug", {
                                    action: "response",
                                    fetcher: t,
                                    request: o,
                                    response: a,
                                    provider: i
                                }), a.error) {
                                var s = new Error(a.error.message);
                                return s.code = a.error.code, s.data = a.error.data, n(s)
                            }
                            e(a.result)
                        }))
                    }))
                }
            }
            var xe = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, n) {
                        var i;
                        (0, a.Z)(this, t), null == e && ke.throwArgumentError("missing provider", "provider", e);
                        var o = null,
                            s = null,
                            c = null;
                        return "function" === typeof e ? (o = "unknown:", s = e) : (!(o = e.host || e.path || "") && e.isMetaMask && (o = "metamask"), c = e, e.request ? ("" === o && (o = "eip-1193:"), s = function(e) {
                            return function(r, t) {
                                var n = this;
                                null == t && (t = []);
                                var i = {
                                    method: r,
                                    params: t
                                };
                                return this.emit("debug", {
                                    action: "request",
                                    fetcher: "Eip1193Fetcher",
                                    request: (0, l.deepCopy)(i),
                                    provider: this
                                }), e.request(i).then((function(e) {
                                    return n.emit("debug", {
                                        action: "response",
                                        fetcher: "Eip1193Fetcher",
                                        request: i,
                                        response: e,
                                        provider: n
                                    }), e
                                }), (function(e) {
                                    throw n.emit("debug", {
                                        action: "response",
                                        fetcher: "Eip1193Fetcher",
                                        request: i,
                                        error: e,
                                        provider: n
                                    }), e
                                }))
                            }
                        }(e)) : e.sendAsync ? s = Re(0, e.sendAsync.bind(e)) : e.send ? s = Re(0, e.send.bind(e)) : ke.throwArgumentError("unsupported provider", "provider", e), o || (o = "unknown:")), i = r.call(this, o, n), (0, l.defineReadOnly)((0, u.Z)(i), "jsonRpcFetchFunc", s), (0, l.defineReadOnly)((0, u.Z)(i), "provider", c), i
                    }
                    return (0, s.Z)(t, [{
                        key: "send",
                        value: function(e, r) {
                            return this.jsonRpcFetchFunc(e, r)
                        }
                    }]), t
                }(y.r),
                Ie = new b.Logger(E.i);

            function Pe(e, r) {
                if (null == e && (e = "homestead"), "string" === typeof e) {
                    var t = e.match(/^(ws|http)s?:/i);
                    if (t) switch (t[1].toLowerCase()) {
                        case "http":
                        case "https":
                            return new y.r(e);
                        case "ws":
                        case "wss":
                            return new x(e);
                        default:
                            Ie.throwArgumentError("unsupported URL scheme", "network", e)
                    }
                }
                var n = (0, i.H)(e);
                return n && n._defaultProvider || Ie.throwError("unsupported getDefaultProvider network", b.Logger.errors.NETWORK_ERROR, {
                    operation: "getDefaultProvider",
                    network: e
                }), n._defaultProvider({
                    FallbackProvider: le,
                    AlchemyProvider: T,
                    AnkrProvider: L,
                    CloudflareProvider: M,
                    EtherscanProvider: J,
                    InfuraProvider: ge,
                    JsonRpcProvider: y.r,
                    NodesmithProvider: be,
                    PocketProvider: Ae,
                    Web3Provider: xe,
                    IpcProvider: he
                }, r)
            }
        },
        22405: function(e, r, t) {
            "use strict";
            t.d(r, {
                C: function() {
                    return T
                },
                r: function() {
                    return U
                }
            });
            var n = t(44474),
                i = t(53538),
                o = t(27166),
                a = t(27853),
                s = t(84531),
                u = t(6148),
                c = t(81020),
                f = t(18992),
                l = t(80155),
                h = t(96812),
                d = t(53237),
                p = t(81795),
                v = t(87549),
                g = t(9759),
                m = t(42442),
                y = t(16819),
                b = t(79094),
                E = t(10731),
                w = t(69800),
                A = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                k = new b.Logger(E.i),
                N = ["call", "estimateGas"];

            function R(e, r) {
                if (null == e) return null;
                if ("string" === typeof e.message && e.message.match("reverted")) {
                    var t = (0, d.isHexString)(e.data) ? e.data : null;
                    if (!r || t) return {
                        message: e.message,
                        data: t
                    }
                }
                if ("object" === typeof e) {
                    for (var n in e) {
                        var i = R(e[n], r);
                        if (i) return i
                    }
                    return null
                }
                if ("string" === typeof e) try {
                    return R(JSON.parse(e), r)
                } catch (o) {}
                return null
            }

            function x(e, r, t) {
                var n = t.transaction || t.signedTransaction;
                if ("call" === e) {
                    var i = R(r, !0);
                    if (i) return i.data;
                    k.throwError("missing revert data in call exception; Transaction reverted without a reason string", b.Logger.errors.CALL_EXCEPTION, {
                        data: "0x",
                        transaction: n,
                        error: r
                    })
                }
                if ("estimateGas" === e) {
                    var o = R(r.body, !1);
                    null == o && (o = R(r, !1)), o && k.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                        reason: o.message,
                        method: e,
                        transaction: n,
                        error: r
                    })
                }
                var a = r.message;
                throw r.code === b.Logger.errors.SERVER_ERROR && r.error && "string" === typeof r.error.message ? a = r.error.message : "string" === typeof r.body ? a = r.body : "string" === typeof r.responseText && (a = r.responseText), (a = (a || "").toLowerCase()).match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && k.throwError("insufficient funds for intrinsic transaction cost", b.Logger.errors.INSUFFICIENT_FUNDS, {
                    error: r,
                    method: e,
                    transaction: n
                }), a.match(/nonce (is )?too low/i) && k.throwError("nonce has already been used", b.Logger.errors.NONCE_EXPIRED, {
                    error: r,
                    method: e,
                    transaction: n
                }), a.match(/replacement transaction underpriced|transaction gas price.*too low/i) && k.throwError("replacement fee too low", b.Logger.errors.REPLACEMENT_UNDERPRICED, {
                    error: r,
                    method: e,
                    transaction: n
                }), a.match(/only replay-protected/i) && k.throwError("legacy pre-eip-155 transactions not supported", b.Logger.errors.UNSUPPORTED_OPERATION, {
                    error: r,
                    method: e,
                    transaction: n
                }), N.indexOf(e) >= 0 && a.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && k.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: r,
                    method: e,
                    transaction: n
                }), r
            }

            function I(e) {
                return new Promise((function(r) {
                    setTimeout(r, e)
                }))
            }

            function P(e) {
                if (e.error) {
                    var r = new Error(e.error.message);
                    throw r.code = e.error.code, r.data = e.error.data, r
                }
                return e.result
            }

            function S(e) {
                return e ? e.toLowerCase() : e
            }
            var _ = {},
                T = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, n, i) {
                        var o;
                        if ((0, a.Z)(this, t), o = r.call(this), e !== _) throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                        return (0, v.defineReadOnly)((0, u.Z)(o), "provider", n), null == i && (i = 0), "string" === typeof i ? ((0, v.defineReadOnly)((0, u.Z)(o), "_address", o.provider.formatter.address(i)), (0, v.defineReadOnly)((0, u.Z)(o), "_index", null)) : "number" === typeof i ? ((0, v.defineReadOnly)((0, u.Z)(o), "_index", i), (0, v.defineReadOnly)((0, u.Z)(o), "_address", null)) : k.throwArgumentError("invalid address or index", "addressOrIndex", i), o
                    }
                    return (0, s.Z)(t, [{
                        key: "connect",
                        value: function(e) {
                            return k.throwError("cannot alter JSON-RPC Signer connection", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "connect"
                            })
                        }
                    }, {
                        key: "connectUnchecked",
                        value: function() {
                            return new O(_, this.provider, this._address || this._index)
                        }
                    }, {
                        key: "getAddress",
                        value: function() {
                            var e = this;
                            return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then((function(r) {
                                return r.length <= e._index && k.throwError("unknown account #" + e._index, b.Logger.errors.UNSUPPORTED_OPERATION, {
                                    operation: "getAddress"
                                }), e.provider.formatter.address(r[e._index])
                            }))
                        }
                    }, {
                        key: "sendUncheckedTransaction",
                        value: function(e) {
                            var r = this;
                            e = (0, v.shallowCopy)(e);
                            var t = this.getAddress().then((function(e) {
                                return e && (e = e.toLowerCase()), e
                            }));
                            if (null == e.gasLimit) {
                                var n = (0, v.shallowCopy)(e);
                                n.from = t, e.gasLimit = this.provider.estimateGas(n)
                            }
                            return null != e.to && (e.to = Promise.resolve(e.to).then((function(e) {
                                return A(r, void 0, void 0, (0, o.Z)().mark((function r() {
                                    var t;
                                    return (0, o.Z)().wrap((function(r) {
                                        for (;;) switch (r.prev = r.next) {
                                            case 0:
                                                if (null != e) {
                                                    r.next = 2;
                                                    break
                                                }
                                                return r.abrupt("return", null);
                                            case 2:
                                                return r.next = 4, this.provider.resolveName(e);
                                            case 4:
                                                return null == (t = r.sent) && k.throwArgumentError("provided ENS name resolves to null", "tx.to", e), r.abrupt("return", t);
                                            case 7:
                                            case "end":
                                                return r.stop()
                                        }
                                    }), r, this)
                                })))
                            }))), (0, v.resolveProperties)({
                                tx: (0, v.resolveProperties)(e),
                                sender: t
                            }).then((function(t) {
                                var n = t.tx,
                                    i = t.sender;
                                null != n.from ? n.from.toLowerCase() !== i && k.throwArgumentError("from address mismatch", "transaction", e) : n.from = i;
                                var o = r.provider.constructor.hexlifyTransaction(n, {
                                    from: !0
                                });
                                return r.provider.send("eth_sendTransaction", [o]).then((function(e) {
                                    return e
                                }), (function(e) {
                                    return "string" === typeof e.message && e.message.match(/user denied/i) && k.throwError("user rejected transaction", b.Logger.errors.ACTION_REJECTED, {
                                        action: "sendTransaction",
                                        transaction: n
                                    }), x("sendTransaction", e, o)
                                }))
                            }))
                        }
                    }, {
                        key: "signTransaction",
                        value: function(e) {
                            return k.throwError("signing transactions is unsupported", b.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "signTransaction"
                            })
                        }
                    }, {
                        key: "sendTransaction",
                        value: function(e) {
                            return A(this, void 0, void 0, (0, o.Z)().mark((function r() {
                                var t, n, i = this;
                                return (0, o.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
                                        case 2:
                                            return t = r.sent, r.next = 5, this.sendUncheckedTransaction(e);
                                        case 5:
                                            return n = r.sent, r.prev = 6, r.next = 9, (0, y.poll)((function() {
                                                return A(i, void 0, void 0, (0, o.Z)().mark((function e() {
                                                    var r;
                                                    return (0, o.Z)().wrap((function(e) {
                                                        for (;;) switch (e.prev = e.next) {
                                                            case 0:
                                                                return e.next = 2, this.provider.getTransaction(n);
                                                            case 2:
                                                                if (null !== (r = e.sent)) {
                                                                    e.next = 5;
                                                                    break
                                                                }
                                                                return e.abrupt("return", void 0);
                                                            case 5:
                                                                return e.abrupt("return", this.provider._wrapTransaction(r, n, t));
                                                            case 6:
                                                            case "end":
                                                                return e.stop()
                                                        }
                                                    }), e, this)
                                                })))
                                            }), {
                                                oncePoll: this.provider
                                            });
                                        case 9:
                                            return r.abrupt("return", r.sent);
                                        case 12:
                                            throw r.prev = 12, r.t0 = r.catch(6), r.t0.transactionHash = n, r.t0;
                                        case 16:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [6, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "signMessage",
                        value: function(e) {
                            return A(this, void 0, void 0, (0, o.Z)().mark((function r() {
                                var t, n;
                                return (0, o.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = "string" === typeof e ? (0, g.Y0)(e) : e, r.next = 3, this.getAddress();
                                        case 3:
                                            return n = r.sent, r.prev = 4, r.next = 7, this.provider.send("personal_sign", [(0, d.hexlify)(t), n.toLowerCase()]);
                                        case 7:
                                            return r.abrupt("return", r.sent);
                                        case 10:
                                            throw r.prev = 10, r.t0 = r.catch(4), "string" === typeof r.t0.message && r.t0.message.match(/user denied/i) && k.throwError("user rejected signing", b.Logger.errors.ACTION_REJECTED, {
                                                action: "signMessage",
                                                from: n,
                                                messageData: e
                                            }), r.t0;
                                        case 14:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [4, 10]
                                ])
                            })))
                        }
                    }, {
                        key: "_legacySignMessage",
                        value: function(e) {
                            return A(this, void 0, void 0, (0, o.Z)().mark((function r() {
                                var t, n;
                                return (0, o.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = "string" === typeof e ? (0, g.Y0)(e) : e, r.next = 3, this.getAddress();
                                        case 3:
                                            return n = r.sent, r.prev = 4, r.next = 7, this.provider.send("eth_sign", [n.toLowerCase(), (0, d.hexlify)(t)]);
                                        case 7:
                                            return r.abrupt("return", r.sent);
                                        case 10:
                                            throw r.prev = 10, r.t0 = r.catch(4), "string" === typeof r.t0.message && r.t0.message.match(/user denied/i) && k.throwError("user rejected signing", b.Logger.errors.ACTION_REJECTED, {
                                                action: "_legacySignMessage",
                                                from: n,
                                                messageData: e
                                            }), r.t0;
                                        case 14:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [4, 10]
                                ])
                            })))
                        }
                    }, {
                        key: "_signTypedData",
                        value: function(e, r, t) {
                            return A(this, void 0, void 0, (0, o.Z)().mark((function n() {
                                var i, a, s = this;
                                return (0, o.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return n.next = 2, p.E.resolveNames(e, r, t, (function(e) {
                                                return s.provider.resolveName(e)
                                            }));
                                        case 2:
                                            return i = n.sent, n.next = 5, this.getAddress();
                                        case 5:
                                            return a = n.sent, n.prev = 6, n.next = 9, this.provider.send("eth_signTypedData_v4", [a.toLowerCase(), JSON.stringify(p.E.getPayload(i.domain, r, i.value))]);
                                        case 9:
                                            return n.abrupt("return", n.sent);
                                        case 12:
                                            throw n.prev = 12, n.t0 = n.catch(6), "string" === typeof n.t0.message && n.t0.message.match(/user denied/i) && k.throwError("user rejected signing", b.Logger.errors.ACTION_REJECTED, {
                                                action: "_signTypedData",
                                                from: a,
                                                messageData: {
                                                    domain: i.domain,
                                                    types: r,
                                                    value: i.value
                                                }
                                            }), n.t0;
                                        case 16:
                                        case "end":
                                            return n.stop()
                                    }
                                }), n, this, [
                                    [6, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "unlock",
                        value: function(e) {
                            return A(this, void 0, void 0, (0, o.Z)().mark((function r() {
                                var t, n;
                                return (0, o.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = this.provider, r.next = 3, this.getAddress();
                                        case 3:
                                            return n = r.sent, r.abrupt("return", t.send("personal_unlockAccount", [n.toLowerCase(), e, null]));
                                        case 5:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }]), t
                }(l.E),
                O = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, a.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, s.Z)(t, [{
                        key: "sendTransaction",
                        value: function(e) {
                            var r = this;
                            return this.sendUncheckedTransaction(e).then((function(e) {
                                return {
                                    hash: e,
                                    nonce: null,
                                    gasLimit: null,
                                    gasPrice: null,
                                    data: null,
                                    value: null,
                                    chainId: null,
                                    confirmations: 0,
                                    from: null,
                                    wait: function(t) {
                                        return r.provider.waitForTransaction(e, t)
                                    }
                                }
                            }))
                        }
                    }]), t
                }(T),
                C = {
                    chainId: !0,
                    data: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    value: !0,
                    type: !0,
                    accessList: !0,
                    maxFeePerGas: !0,
                    maxPriorityFeePerGas: !0
                },
                U = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, n) {
                        var i;
                        (0, a.Z)(this, t);
                        var o = n;
                        return null == o && (o = new Promise((function(e, r) {
                            setTimeout((function() {
                                i.detectNetwork().then((function(r) {
                                    e(r)
                                }), (function(e) {
                                    r(e)
                                }))
                            }), 0)
                        }))), i = r.call(this, o), e || (e = (0, v.getStatic)(i.constructor, "defaultUrl")()), "string" === typeof e ? (0, v.defineReadOnly)((0, u.Z)(i), "connection", Object.freeze({
                            url: e
                        })) : (0, v.defineReadOnly)((0, u.Z)(i), "connection", Object.freeze((0, v.shallowCopy)(e))), i._nextId = 42, i
                    }
                    return (0, s.Z)(t, [{
                        key: "_cache",
                        get: function() {
                            return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache
                        }
                    }, {
                        key: "detectNetwork",
                        value: function() {
                            var e = this;
                            return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), setTimeout((function() {
                                e._cache.detectNetwork = null
                            }), 0)), this._cache.detectNetwork
                        }
                    }, {
                        key: "_uncachedDetectNetwork",
                        value: function() {
                            return A(this, void 0, void 0, (0, o.Z)().mark((function e() {
                                var r, t;
                                return (0, o.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, I(0);
                                        case 2:
                                            return r = null, e.prev = 3, e.next = 6, this.send("eth_chainId", []);
                                        case 6:
                                            r = e.sent, e.next = 19;
                                            break;
                                        case 9:
                                            return e.prev = 9, e.t0 = e.catch(3), e.prev = 11, e.next = 14, this.send("net_version", []);
                                        case 14:
                                            r = e.sent, e.next = 19;
                                            break;
                                        case 17:
                                            e.prev = 17, e.t1 = e.catch(11);
                                        case 19:
                                            if (null == r) {
                                                e.next = 28;
                                                break
                                            }
                                            return t = (0, v.getStatic)(this.constructor, "getNetwork"), e.prev = 21, e.abrupt("return", t(h.O$.from(r).toNumber()));
                                        case 25:
                                            return e.prev = 25, e.t2 = e.catch(21), e.abrupt("return", k.throwError("could not detect network", b.Logger.errors.NETWORK_ERROR, {
                                                chainId: r,
                                                event: "invalidNetwork",
                                                serverError: e.t2
                                            }));
                                        case 28:
                                            return e.abrupt("return", k.throwError("could not detect network", b.Logger.errors.NETWORK_ERROR, {
                                                event: "noNetwork"
                                            }));
                                        case 29:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [3, 9],
                                    [11, 17],
                                    [21, 25]
                                ])
                            })))
                        }
                    }, {
                        key: "getSigner",
                        value: function(e) {
                            return new T(_, this, e)
                        }
                    }, {
                        key: "getUncheckedSigner",
                        value: function(e) {
                            return this.getSigner(e).connectUnchecked()
                        }
                    }, {
                        key: "listAccounts",
                        value: function() {
                            var e = this;
                            return this.send("eth_accounts", []).then((function(r) {
                                return r.map((function(r) {
                                    return e.formatter.address(r)
                                }))
                            }))
                        }
                    }, {
                        key: "send",
                        value: function(e, r) {
                            var t = this,
                                n = {
                                    method: e,
                                    params: r,
                                    id: this._nextId++,
                                    jsonrpc: "2.0"
                                };
                            this.emit("debug", {
                                action: "request",
                                request: (0, v.deepCopy)(n),
                                provider: this
                            });
                            var i = ["eth_chainId", "eth_blockNumber"].indexOf(e) >= 0;
                            if (i && this._cache[e]) return this._cache[e];
                            var o = (0, y.fetchJson)(this.connection, JSON.stringify(n), P).then((function(e) {
                                return t.emit("debug", {
                                    action: "response",
                                    request: n,
                                    response: e,
                                    provider: t
                                }), e
                            }), (function(e) {
                                throw t.emit("debug", {
                                    action: "response",
                                    error: e,
                                    request: n,
                                    provider: t
                                }), e
                            }));
                            return i && (this._cache[e] = o, setTimeout((function() {
                                t._cache[e] = null
                            }), 0)), o
                        }
                    }, {
                        key: "prepareRequest",
                        value: function(e, r) {
                            switch (e) {
                                case "getBlockNumber":
                                    return ["eth_blockNumber", []];
                                case "getGasPrice":
                                    return ["eth_gasPrice", []];
                                case "getBalance":
                                    return ["eth_getBalance", [S(r.address), r.blockTag]];
                                case "getTransactionCount":
                                    return ["eth_getTransactionCount", [S(r.address), r.blockTag]];
                                case "getCode":
                                    return ["eth_getCode", [S(r.address), r.blockTag]];
                                case "getStorageAt":
                                    return ["eth_getStorageAt", [S(r.address), (0, d.hexZeroPad)(r.position, 32), r.blockTag]];
                                case "sendTransaction":
                                    return ["eth_sendRawTransaction", [r.signedTransaction]];
                                case "getBlock":
                                    return r.blockTag ? ["eth_getBlockByNumber", [r.blockTag, !!r.includeTransactions]] : r.blockHash ? ["eth_getBlockByHash", [r.blockHash, !!r.includeTransactions]] : null;
                                case "getTransaction":
                                    return ["eth_getTransactionByHash", [r.transactionHash]];
                                case "getTransactionReceipt":
                                    return ["eth_getTransactionReceipt", [r.transactionHash]];
                                case "call":
                                    return ["eth_call", [(0, v.getStatic)(this.constructor, "hexlifyTransaction")(r.transaction, {
                                        from: !0
                                    }), r.blockTag]];
                                case "estimateGas":
                                    return ["eth_estimateGas", [(0, v.getStatic)(this.constructor, "hexlifyTransaction")(r.transaction, {
                                        from: !0
                                    })]];
                                case "getLogs":
                                    return r.filter && null != r.filter.address && (r.filter.address = S(r.filter.address)), ["eth_getLogs", [r.filter]]
                            }
                            return null
                        }
                    }, {
                        key: "perform",
                        value: function(e, r) {
                            return A(this, void 0, void 0, (0, o.Z)().mark((function t() {
                                var n, i, a;
                                return (0, o.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if ("call" !== e && "estimateGas" !== e) {
                                                t.next = 8;
                                                break
                                            }
                                            if (!(n = r.transaction) || null == n.type || !h.O$.from(n.type).isZero()) {
                                                t.next = 8;
                                                break
                                            }
                                            if (null != n.maxFeePerGas || null != n.maxPriorityFeePerGas) {
                                                t.next = 8;
                                                break
                                            }
                                            return t.next = 6, this.getFeeData();
                                        case 6:
                                            null == (i = t.sent).maxFeePerGas && null == i.maxPriorityFeePerGas && ((r = (0, v.shallowCopy)(r)).transaction = (0, v.shallowCopy)(n), delete r.transaction.type);
                                        case 8:
                                            return null == (a = this.prepareRequest(e, r)) && k.throwError(e + " not implemented", b.Logger.errors.NOT_IMPLEMENTED, {
                                                operation: e
                                            }), t.prev = 10, t.next = 13, this.send(a[0], a[1]);
                                        case 13:
                                            return t.abrupt("return", t.sent);
                                        case 16:
                                            return t.prev = 16, t.t0 = t.catch(10), t.abrupt("return", x(e, t.t0, r));
                                        case 19:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [10, 16]
                                ])
                            })))
                        }
                    }, {
                        key: "_startEvent",
                        value: function(e) {
                            "pending" === e.tag && this._startPending(), (0, n.Z)((0, i.Z)(t.prototype), "_startEvent", this).call(this, e)
                        }
                    }, {
                        key: "_startPending",
                        value: function() {
                            if (null == this._pendingFilter) {
                                var e = this,
                                    r = this.send("eth_newPendingTransactionFilter", []);
                                this._pendingFilter = r, r.then((function(t) {
                                    return function n() {
                                        e.send("eth_getFilterChanges", [t]).then((function(t) {
                                            if (e._pendingFilter != r) return null;
                                            var n = Promise.resolve();
                                            return t.forEach((function(r) {
                                                e._emitted["t:" + r.toLowerCase()] = "pending", n = n.then((function() {
                                                    return e.getTransaction(r).then((function(r) {
                                                        return e.emit("pending", r), null
                                                    }))
                                                }))
                                            })), n.then((function() {
                                                return I(1e3)
                                            }))
                                        })).then((function() {
                                            if (e._pendingFilter == r) return setTimeout((function() {
                                                n()
                                            }), 0), null;
                                            e.send("eth_uninstallFilter", [t])
                                        })).catch((function(e) {}))
                                    }(), t
                                })).catch((function(e) {}))
                            }
                        }
                    }, {
                        key: "_stopEvent",
                        value: function(e) {
                            "pending" === e.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), (0, n.Z)((0, i.Z)(t.prototype), "_stopEvent", this).call(this, e)
                        }
                    }], [{
                        key: "defaultUrl",
                        value: function() {
                            return "http://localhost:8545"
                        }
                    }, {
                        key: "hexlifyTransaction",
                        value: function(e, r) {
                            var t = (0, v.shallowCopy)(C);
                            if (r)
                                for (var n in r) r[n] && (t[n] = !0);
                            (0, v.checkProperties)(e, t);
                            var i = {};
                            return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach((function(r) {
                                if (null != e[r]) {
                                    var t = (0, d.hexValue)(h.O$.from(e[r]));
                                    "gasLimit" === r && (r = "gas"), i[r] = t
                                }
                            })), ["from", "to", "data"].forEach((function(r) {
                                null != e[r] && (i[r] = (0, d.hexlify)(e[r]))
                            })), e.accessList && (i.accessList = (0, m.accessListify)(e.accessList)), i
                        }
                    }]), t
                }(w.Zk)
        },
        21273: function(e, r, t) {
            "use strict";
            t.d(r, {
                c: function() {
                    return m
                },
                l: function() {
                    return y
                }
            });
            var n = t(6148),
                i = t(27166),
                o = t(27853),
                a = t(84531),
                s = t(44474),
                u = t(53538),
                c = t(81020),
                f = t(18992),
                l = t(87549),
                h = t(79094),
                d = t(10731),
                p = t(22405),
                v = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                g = new h.Logger(d.i),
                m = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t() {
                        return (0, o.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, a.Z)(t, [{
                        key: "detectNetwork",
                        value: function() {
                            var e = this,
                                r = Object.create(null, {
                                    detectNetwork: {
                                        get: function() {
                                            return (0, s.Z)((0, u.Z)(t.prototype), "detectNetwork", e)
                                        }
                                    }
                                });
                            return v(this, void 0, void 0, (0, i.Z)().mark((function e() {
                                var t;
                                return (0, i.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (null != (t = this.network)) {
                                                e.next = 7;
                                                break
                                            }
                                            return e.next = 4, r.detectNetwork.call(this);
                                        case 4:
                                            (t = e.sent) || g.throwError("no network detected", h.Logger.errors.UNKNOWN_ERROR, {}), null == this._network && ((0, l.defineReadOnly)(this, "_network", t), this.emit("network", t, null));
                                        case 7:
                                            return e.abrupt("return", t);
                                        case 8:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }]), t
                }(p.r),
                y = function(e) {
                    (0, c.Z)(t, e);
                    var r = (0, f.Z)(t);

                    function t(e, i) {
                        var a;
                        (0, o.Z)(this, t), g.checkAbstract(this instanceof t ? this.constructor : void 0, t), e = (0, l.getStatic)(this instanceof t ? this.constructor : void 0, "getNetwork")(e), i = (0, l.getStatic)(this instanceof t ? this.constructor : void 0, "getApiKey")(i);
                        var s = (0, l.getStatic)(this instanceof t ? this.constructor : void 0, "getUrl")(e, i);
                        return a = r.call(this, s, e), "string" === typeof i ? (0, l.defineReadOnly)((0, n.Z)(a), "apiKey", i) : null != i && Object.keys(i).forEach((function(e) {
                            (0, l.defineReadOnly)((0, n.Z)(a), e, i[e])
                        })), a
                    }
                    return (0, a.Z)(t, [{
                        key: "_startPending",
                        value: function() {
                            g.warn("WARNING: API provider does not support pending filters")
                        }
                    }, {
                        key: "isCommunityResource",
                        value: function() {
                            return !1
                        }
                    }, {
                        key: "getSigner",
                        value: function(e) {
                            return g.throwError("API provider does not support signing", h.Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "getSigner"
                            })
                        }
                    }, {
                        key: "listAccounts",
                        value: function() {
                            return Promise.resolve([])
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            return e
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            return g.throwError("not implemented; sub-classes must override getUrl", h.Logger.errors.NOT_IMPLEMENTED, {
                                operation: "getUrl"
                            })
                        }
                    }]), t
                }(m)
        },
        30888: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                randomBytes: function() {
                    return n.O
                },
                shuffled: function() {
                    return i.y
                }
            });
            var n = t(3697),
                i = t(65831)
        },
        3697: function(e, r, t) {
            "use strict";
            t.d(r, {
                O: function() {
                    return u
                }
            });
            var n = t(53237),
                i = t(79094),
                o = new i.Logger("random/5.7.0");
            var a = function() {
                    if ("undefined" !== typeof self) return self;
                    if ("undefined" !== typeof window) return window;
                    if ("undefined" !== typeof t.g) return t.g;
                    throw new Error("unable to locate global object")
                }(),
                s = a.crypto || a.msCrypto;

            function u(e) {
                (e <= 0 || e > 1024 || e % 1 || e != e) && o.throwArgumentError("invalid length", "length", e);
                var r = new Uint8Array(e);
                return s.getRandomValues(r), (0, n.arrayify)(r)
            }
            s && s.getRandomValues || (o.warn("WARNING: Missing strong random number source"), s = {
                getRandomValues: function(e) {
                    return o.throwError("no secure random source avaialble", i.Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "crypto.getRandomValues"
                    })
                }
            })
        },
        65831: function(e, r, t) {
            "use strict";

            function n(e) {
                for (var r = (e = e.slice()).length - 1; r > 0; r--) {
                    var t = Math.floor(Math.random() * (r + 1)),
                        n = e[r];
                    e[r] = e[t], e[t] = n
                }
                return e
            }
            t.d(r, {
                y: function() {
                    return n
                }
            })
        },
        76354: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                decode: function() {
                    return h
                },
                encode: function() {
                    return c
                }
            });
            var n = t(53237),
                i = t(79094),
                o = new i.Logger("rlp/5.7.0");

            function a(e) {
                for (var r = []; e;) r.unshift(255 & e), e >>= 8;
                return r
            }

            function s(e, r, t) {
                for (var n = 0, i = 0; i < t; i++) n = 256 * n + e[r + i];
                return n
            }

            function u(e) {
                if (Array.isArray(e)) {
                    var r = [];
                    if (e.forEach((function(e) {
                            r = r.concat(u(e))
                        })), r.length <= 55) return r.unshift(192 + r.length), r;
                    var t = a(r.length);
                    return t.unshift(247 + t.length), t.concat(r)
                }(0, n.isBytesLike)(e) || o.throwArgumentError("RLP object must be BytesLike", "object", e);
                var i = Array.prototype.slice.call((0, n.arrayify)(e));
                if (1 === i.length && i[0] <= 127) return i;
                if (i.length <= 55) return i.unshift(128 + i.length), i;
                var s = a(i.length);
                return s.unshift(183 + s.length), s.concat(i)
            }

            function c(e) {
                return (0, n.hexlify)(u(e))
            }

            function f(e, r, t, n) {
                for (var a = []; t < r + 1 + n;) {
                    var s = l(e, t);
                    a.push(s.result), (t += s.consumed) > r + 1 + n && o.throwError("child data too short", i.Logger.errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + n,
                    result: a
                }
            }

            function l(e, r) {
                if (0 === e.length && o.throwError("data too short", i.Logger.errors.BUFFER_OVERRUN, {}), e[r] >= 248) {
                    var t = e[r] - 247;
                    r + 1 + t > e.length && o.throwError("data short segment too short", i.Logger.errors.BUFFER_OVERRUN, {});
                    var a = s(e, r + 1, t);
                    return r + 1 + t + a > e.length && o.throwError("data long segment too short", i.Logger.errors.BUFFER_OVERRUN, {}), f(e, r, r + 1 + t, t + a)
                }
                if (e[r] >= 192) {
                    var u = e[r] - 192;
                    return r + 1 + u > e.length && o.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {}), f(e, r, r + 1, u)
                }
                if (e[r] >= 184) {
                    var c = e[r] - 183;
                    r + 1 + c > e.length && o.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {});
                    var l = s(e, r + 1, c);
                    return r + 1 + c + l > e.length && o.throwError("data array too short", i.Logger.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + c + l,
                        result: (0, n.hexlify)(e.slice(r + 1 + c, r + 1 + c + l))
                    }
                }
                if (e[r] >= 128) {
                    var h = e[r] - 128;
                    return r + 1 + h > e.length && o.throwError("data too short", i.Logger.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + h,
                        result: (0, n.hexlify)(e.slice(r + 1, r + 1 + h))
                    }
                }
                return {
                    consumed: 1,
                    result: (0, n.hexlify)(e[r])
                }
            }

            function h(e) {
                var r = (0, n.arrayify)(e),
                    t = l(r, 0);
                return t.consumed !== r.length && o.throwArgumentError("invalid rlp data", "data", e), t.result
            }
        },
        80347: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                SupportedAlgorithm: function() {
                    return i.p
                },
                computeHmac: function() {
                    return n.Gy
                },
                ripemd160: function() {
                    return n.bP
                },
                sha256: function() {
                    return n.JQ
                },
                sha512: function() {
                    return n.o
                }
            });
            var n = t(30226),
                i = t(71129)
        },
        30226: function(e, r, t) {
            "use strict";
            t.d(r, {
                Gy: function() {
                    return h
                },
                bP: function() {
                    return c
                },
                JQ: function() {
                    return f
                },
                o: function() {
                    return l
                }
            });
            var n = t(12111),
                i = t.n(n),
                o = t(53237),
                a = t(71129),
                s = t(79094),
                u = new s.Logger("sha2/5.7.0");

            function c(e) {
                return "0x" + i().ripemd160().update((0, o.arrayify)(e)).digest("hex")
            }

            function f(e) {
                return "0x" + i().sha256().update((0, o.arrayify)(e)).digest("hex")
            }

            function l(e) {
                return "0x" + i().sha512().update((0, o.arrayify)(e)).digest("hex")
            }

            function h(e, r, t) {
                return a.p[e] || u.throwError("unsupported algorithm " + e, s.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "hmac",
                    algorithm: e
                }), "0x" + i().hmac(i()[e], (0, o.arrayify)(r)).update((0, o.arrayify)(t)).digest("hex")
            }
        },
        71129: function(e, r, t) {
            "use strict";
            var n;
            t.d(r, {
                    p: function() {
                        return n
                    }
                }),
                function(e) {
                    e.sha256 = "sha256", e.sha512 = "sha512"
                }(n || (n = {}))
        },
        31654: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                SigningKey: function() {
                    return X
                },
                computePublicKey: function() {
                    return Y
                },
                recoverPublicKey: function() {
                    return Q
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(27239),
                a = t.n(o),
                s = t(12111),
                u = t.n(s);
            "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof t.g ? t.g : "undefined" !== typeof self && self;

            function c(e, r, t) {
                return t = {
                    path: r,
                    exports: {},
                    require: function(e, r) {
                        return function() {
                            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                        }((void 0 === r || null === r) && t.path)
                    }
                }, e(t, t.exports), t.exports
            }
            var f = l;

            function l(e, r) {
                if (!e) throw new Error(r || "Assertion failed")
            }
            l.equal = function(e, r, t) {
                if (e != r) throw new Error(t || "Assertion failed: " + e + " != " + r)
            };
            var h = c((function(e, r) {
                    var t = r;

                    function n(e) {
                        return 1 === e.length ? "0" + e : e
                    }

                    function i(e) {
                        for (var r = "", t = 0; t < e.length; t++) r += n(e[t].toString(16));
                        return r
                    }
                    t.toArray = function(e, r) {
                        if (Array.isArray(e)) return e.slice();
                        if (!e) return [];
                        var t = [];
                        if ("string" !== typeof e) {
                            for (var n = 0; n < e.length; n++) t[n] = 0 | e[n];
                            return t
                        }
                        if ("hex" === r) {
                            (e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 !== 0 && (e = "0" + e);
                            for (n = 0; n < e.length; n += 2) t.push(parseInt(e[n] + e[n + 1], 16))
                        } else
                            for (n = 0; n < e.length; n++) {
                                var i = e.charCodeAt(n),
                                    o = i >> 8,
                                    a = 255 & i;
                                o ? t.push(o, a) : t.push(a)
                            }
                        return t
                    }, t.zero2 = n, t.toHex = i, t.encode = function(e, r) {
                        return "hex" === r ? i(e) : e
                    }
                })),
                d = c((function(e, r) {
                    var t = r;
                    t.assert = f, t.toArray = h.toArray, t.zero2 = h.zero2, t.toHex = h.toHex, t.encode = h.encode, t.getNAF = function(e, r, t) {
                        var n = new Array(Math.max(e.bitLength(), t) + 1);
                        n.fill(0);
                        for (var i = 1 << r + 1, o = e.clone(), a = 0; a < n.length; a++) {
                            var s, u = o.andln(i - 1);
                            o.isOdd() ? (s = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(s)) : s = 0, n[a] = s, o.iushrn(1)
                        }
                        return n
                    }, t.getJSF = function(e, r) {
                        var t = [
                            [],
                            []
                        ];
                        e = e.clone(), r = r.clone();
                        for (var n, i = 0, o = 0; e.cmpn(-i) > 0 || r.cmpn(-o) > 0;) {
                            var a, s, u = e.andln(3) + i & 3,
                                c = r.andln(3) + o & 3;
                            3 === u && (u = -1), 3 === c && (c = -1), a = 0 === (1 & u) ? 0 : 3 !== (n = e.andln(7) + i & 7) && 5 !== n || 2 !== c ? u : -u, t[0].push(a), s = 0 === (1 & c) ? 0 : 3 !== (n = r.andln(7) + o & 7) && 5 !== n || 2 !== u ? c : -c, t[1].push(s), 2 * i === a + 1 && (i = 1 - i), 2 * o === s + 1 && (o = 1 - o), e.iushrn(1), r.iushrn(1)
                        }
                        return t
                    }, t.cachedProperty = function(e, r, t) {
                        var n = "_" + r;
                        e.prototype[r] = function() {
                            return void 0 !== this[n] ? this[n] : this[n] = t.call(this)
                        }
                    }, t.parseBytes = function(e) {
                        return "string" === typeof e ? t.toArray(e, "hex") : e
                    }, t.intFromLE = function(e) {
                        return new(a())(e, "hex", "le")
                    }
                })),
                p = d.getNAF,
                v = d.getJSF,
                g = d.assert;

            function m(e, r) {
                this.type = e, this.p = new(a())(r.p, 16), this.red = r.prime ? a().red(r.prime) : a().mont(this.p), this.zero = new(a())(0).toRed(this.red), this.one = new(a())(1).toRed(this.red), this.two = new(a())(2).toRed(this.red), this.n = r.n && new(a())(r.n, 16), this.g = r.g && this.pointFromJSON(r.g, r.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                var t = this.n && this.p.div(this.n);
                !t || t.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
            }
            var y = m;

            function b(e, r) {
                this.curve = e, this.type = r, this.precomputed = null
            }
            m.prototype.point = function() {
                throw new Error("Not implemented")
            }, m.prototype.validate = function() {
                throw new Error("Not implemented")
            }, m.prototype._fixedNafMul = function(e, r) {
                g(e.precomputed);
                var t = e._getDoubles(),
                    n = p(r, 1, this._bitLength),
                    i = (1 << t.step + 1) - (t.step % 2 === 0 ? 2 : 1);
                i /= 3;
                var o, a, s = [];
                for (o = 0; o < n.length; o += t.step) {
                    a = 0;
                    for (var u = o + t.step - 1; u >= o; u--) a = (a << 1) + n[u];
                    s.push(a)
                }
                for (var c = this.jpoint(null, null, null), f = this.jpoint(null, null, null), l = i; l > 0; l--) {
                    for (o = 0; o < s.length; o++)(a = s[o]) === l ? f = f.mixedAdd(t.points[o]) : a === -l && (f = f.mixedAdd(t.points[o].neg()));
                    c = c.add(f)
                }
                return c.toP()
            }, m.prototype._wnafMul = function(e, r) {
                var t = 4,
                    n = e._getNAFPoints(t);
                t = n.wnd;
                for (var i = n.points, o = p(r, t, this._bitLength), a = this.jpoint(null, null, null), s = o.length - 1; s >= 0; s--) {
                    for (var u = 0; s >= 0 && 0 === o[s]; s--) u++;
                    if (s >= 0 && u++, a = a.dblp(u), s < 0) break;
                    var c = o[s];
                    g(0 !== c), a = "affine" === e.type ? c > 0 ? a.mixedAdd(i[c - 1 >> 1]) : a.mixedAdd(i[-c - 1 >> 1].neg()) : c > 0 ? a.add(i[c - 1 >> 1]) : a.add(i[-c - 1 >> 1].neg())
                }
                return "affine" === e.type ? a.toP() : a
            }, m.prototype._wnafMulAdd = function(e, r, t, n, i) {
                var o, a, s, u = this._wnafT1,
                    c = this._wnafT2,
                    f = this._wnafT3,
                    l = 0;
                for (o = 0; o < n; o++) {
                    var h = (s = r[o])._getNAFPoints(e);
                    u[o] = h.wnd, c[o] = h.points
                }
                for (o = n - 1; o >= 1; o -= 2) {
                    var d = o - 1,
                        g = o;
                    if (1 === u[d] && 1 === u[g]) {
                        var m = [r[d], null, null, r[g]];
                        0 === r[d].y.cmp(r[g].y) ? (m[1] = r[d].add(r[g]), m[2] = r[d].toJ().mixedAdd(r[g].neg())) : 0 === r[d].y.cmp(r[g].y.redNeg()) ? (m[1] = r[d].toJ().mixedAdd(r[g]), m[2] = r[d].add(r[g].neg())) : (m[1] = r[d].toJ().mixedAdd(r[g]), m[2] = r[d].toJ().mixedAdd(r[g].neg()));
                        var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            b = v(t[d], t[g]);
                        for (l = Math.max(b[0].length, l), f[d] = new Array(l), f[g] = new Array(l), a = 0; a < l; a++) {
                            var E = 0 | b[0][a],
                                w = 0 | b[1][a];
                            f[d][a] = y[3 * (E + 1) + (w + 1)], f[g][a] = 0, c[d] = m
                        }
                    } else f[d] = p(t[d], u[d], this._bitLength), f[g] = p(t[g], u[g], this._bitLength), l = Math.max(f[d].length, l), l = Math.max(f[g].length, l)
                }
                var A = this.jpoint(null, null, null),
                    k = this._wnafT4;
                for (o = l; o >= 0; o--) {
                    for (var N = 0; o >= 0;) {
                        var R = !0;
                        for (a = 0; a < n; a++) k[a] = 0 | f[a][o], 0 !== k[a] && (R = !1);
                        if (!R) break;
                        N++, o--
                    }
                    if (o >= 0 && N++, A = A.dblp(N), o < 0) break;
                    for (a = 0; a < n; a++) {
                        var x = k[a];
                        0 !== x && (x > 0 ? s = c[a][x - 1 >> 1] : x < 0 && (s = c[a][-x - 1 >> 1].neg()), A = "affine" === s.type ? A.mixedAdd(s) : A.add(s))
                    }
                }
                for (o = 0; o < n; o++) c[o] = null;
                return i ? A : A.toP()
            }, m.BasePoint = b, b.prototype.eq = function() {
                throw new Error("Not implemented")
            }, b.prototype.validate = function() {
                return this.curve.validate(this)
            }, m.prototype.decodePoint = function(e, r) {
                e = d.toArray(e, r);
                var t = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 === 2 * t) return 6 === e[0] ? g(e[e.length - 1] % 2 === 0) : 7 === e[0] && g(e[e.length - 1] % 2 === 1), this.point(e.slice(1, 1 + t), e.slice(1 + t, 1 + 2 * t));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === t) return this.pointFromX(e.slice(1, 1 + t), 3 === e[0]);
                throw new Error("Unknown point format")
            }, b.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }, b.prototype._encode = function(e) {
                var r = this.curve.p.byteLength(),
                    t = this.getX().toArray("be", r);
                return e ? [this.getY().isEven() ? 2 : 3].concat(t) : [4].concat(t, this.getY().toArray("be", r))
            }, b.prototype.encode = function(e, r) {
                return d.encode(this._encode(r), e)
            }, b.prototype.precompute = function(e) {
                if (this.precomputed) return this;
                var r = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, e), r.beta = this._getBeta(), this.precomputed = r, this
            }, b.prototype._hasDoubles = function(e) {
                if (!this.precomputed) return !1;
                var r = this.precomputed.doubles;
                return !!r && r.points.length >= Math.ceil((e.bitLength() + 1) / r.step)
            }, b.prototype._getDoubles = function(e, r) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var t = [this], n = this, i = 0; i < r; i += e) {
                    for (var o = 0; o < e; o++) n = n.dbl();
                    t.push(n)
                }
                return {
                    step: e,
                    points: t
                }
            }, b.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var r = [this], t = (1 << e) - 1, n = 1 === t ? null : this.dbl(), i = 1; i < t; i++) r[i] = r[i - 1].add(n);
                return {
                    wnd: e,
                    points: r
                }
            }, b.prototype._getBeta = function() {
                return null
            }, b.prototype.dblp = function(e) {
                for (var r = this, t = 0; t < e; t++) r = r.dbl();
                return r
            };
            var E = c((function(e) {
                    "function" === typeof Object.create ? e.exports = function(e, r) {
                        r && (e.super_ = r, e.prototype = Object.create(r.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : e.exports = function(e, r) {
                        if (r) {
                            e.super_ = r;
                            var t = function() {};
                            t.prototype = r.prototype, e.prototype = new t, e.prototype.constructor = e
                        }
                    }
                })),
                w = d.assert;

            function A(e) {
                y.call(this, "short", e), this.a = new(a())(e.a, 16).toRed(this.red), this.b = new(a())(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
            }
            E(A, y);
            var k = A;

            function N(e, r, t, n) {
                y.BasePoint.call(this, e, "affine"), null === r && null === t ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new(a())(r, 16), this.y = new(a())(t, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
            }

            function R(e, r, t, n) {
                y.BasePoint.call(this, e, "jacobian"), null === r && null === t && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new(a())(0)) : (this.x = new(a())(r, 16), this.y = new(a())(t, 16), this.z = new(a())(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
            }
            A.prototype._getEndomorphism = function(e) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var r, t;
                    if (e.beta) r = new(a())(e.beta, 16).toRed(this.red);
                    else {
                        var n = this._getEndoRoots(this.p);
                        r = (r = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red)
                    }
                    if (e.lambda) t = new(a())(e.lambda, 16);
                    else {
                        var i = this._getEndoRoots(this.n);
                        0 === this.g.mul(i[0]).x.cmp(this.g.x.redMul(r)) ? t = i[0] : (t = i[1], w(0 === this.g.mul(t).x.cmp(this.g.x.redMul(r))))
                    }
                    return {
                        beta: r,
                        lambda: t,
                        basis: e.basis ? e.basis.map((function(e) {
                            return {
                                a: new(a())(e.a, 16),
                                b: new(a())(e.b, 16)
                            }
                        })) : this._getEndoBasis(t)
                    }
                }
            }, A.prototype._getEndoRoots = function(e) {
                var r = e === this.p ? this.red : a().mont(e),
                    t = new(a())(2).toRed(r).redInvm(),
                    n = t.redNeg(),
                    i = new(a())(3).toRed(r).redNeg().redSqrt().redMul(t);
                return [n.redAdd(i).fromRed(), n.redSub(i).fromRed()]
            }, A.prototype._getEndoBasis = function(e) {
                for (var r, t, n, i, o, s, u, c, f, l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h = e, d = this.n.clone(), p = new(a())(1), v = new(a())(0), g = new(a())(0), m = new(a())(1), y = 0; 0 !== h.cmpn(0);) {
                    var b = d.div(h);
                    c = d.sub(b.mul(h)), f = g.sub(b.mul(p));
                    var E = m.sub(b.mul(v));
                    if (!n && c.cmp(l) < 0) r = u.neg(), t = p, n = c.neg(), i = f;
                    else if (n && 2 === ++y) break;
                    u = c, d = h, h = c, g = p, p = f, m = v, v = E
                }
                o = c.neg(), s = f;
                var w = n.sqr().add(i.sqr());
                return o.sqr().add(s.sqr()).cmp(w) >= 0 && (o = r, s = t), n.negative && (n = n.neg(), i = i.neg()), o.negative && (o = o.neg(), s = s.neg()), [{
                    a: n,
                    b: i
                }, {
                    a: o,
                    b: s
                }]
            }, A.prototype._endoSplit = function(e) {
                var r = this.endo.basis,
                    t = r[0],
                    n = r[1],
                    i = n.b.mul(e).divRound(this.n),
                    o = t.b.neg().mul(e).divRound(this.n),
                    a = i.mul(t.a),
                    s = o.mul(n.a),
                    u = i.mul(t.b),
                    c = o.mul(n.b);
                return {
                    k1: e.sub(a).sub(s),
                    k2: u.add(c).neg()
                }
            }, A.prototype.pointFromX = function(e, r) {
                (e = new(a())(e, 16)).red || (e = e.toRed(this.red));
                var t = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),
                    n = t.redSqrt();
                if (0 !== n.redSqr().redSub(t).cmp(this.zero)) throw new Error("invalid point");
                var i = n.fromRed().isOdd();
                return (r && !i || !r && i) && (n = n.redNeg()), this.point(e, n)
            }, A.prototype.validate = function(e) {
                if (e.inf) return !0;
                var r = e.x,
                    t = e.y,
                    n = this.a.redMul(r),
                    i = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);
                return 0 === t.redSqr().redISub(i).cmpn(0)
            }, A.prototype._endoWnafMulAdd = function(e, r, t) {
                for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < e.length; o++) {
                    var a = this._endoSplit(r[o]),
                        s = e[o],
                        u = s._getBeta();
                    a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2
                }
                for (var c = this._wnafMulAdd(1, n, i, 2 * o, t), f = 0; f < 2 * o; f++) n[f] = null, i[f] = null;
                return c
            }, E(N, y.BasePoint), A.prototype.point = function(e, r, t) {
                return new N(this, e, r, t)
            }, A.prototype.pointFromJSON = function(e, r) {
                return N.fromJSON(this, e, r)
            }, N.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var e = this.precomputed;
                    if (e && e.beta) return e.beta;
                    var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (e) {
                        var t = this.curve,
                            n = function(e) {
                                return t.point(e.x.redMul(t.endo.beta), e.y)
                            };
                        e.beta = r, r.precomputed = {
                            beta: null,
                            naf: e.naf && {
                                wnd: e.naf.wnd,
                                points: e.naf.points.map(n)
                            },
                            doubles: e.doubles && {
                                step: e.doubles.step,
                                points: e.doubles.points.map(n)
                            }
                        }
                    }
                    return r
                }
            }, N.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }, N.fromJSON = function(e, r, t) {
                "string" === typeof r && (r = JSON.parse(r));
                var n = e.point(r[0], r[1], t);
                if (!r[2]) return n;

                function i(r) {
                    return e.point(r[0], r[1], t)
                }
                var o = r[2];
                return n.precomputed = {
                    beta: null,
                    doubles: o.doubles && {
                        step: o.doubles.step,
                        points: [n].concat(o.doubles.points.map(i))
                    },
                    naf: o.naf && {
                        wnd: o.naf.wnd,
                        points: [n].concat(o.naf.points.map(i))
                    }
                }, n
            }, N.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }, N.prototype.isInfinity = function() {
                return this.inf
            }, N.prototype.add = function(e) {
                if (this.inf) return e;
                if (e.inf) return this;
                if (this.eq(e)) return this.dbl();
                if (this.neg().eq(e)) return this.curve.point(null, null);
                if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                var r = this.y.redSub(e.y);
                0 !== r.cmpn(0) && (r = r.redMul(this.x.redSub(e.x).redInvm()));
                var t = r.redSqr().redISub(this.x).redISub(e.x),
                    n = r.redMul(this.x.redSub(t)).redISub(this.y);
                return this.curve.point(t, n)
            }, N.prototype.dbl = function() {
                if (this.inf) return this;
                var e = this.y.redAdd(this.y);
                if (0 === e.cmpn(0)) return this.curve.point(null, null);
                var r = this.curve.a,
                    t = this.x.redSqr(),
                    n = e.redInvm(),
                    i = t.redAdd(t).redIAdd(t).redIAdd(r).redMul(n),
                    o = i.redSqr().redISub(this.x.redAdd(this.x)),
                    a = i.redMul(this.x.redSub(o)).redISub(this.y);
                return this.curve.point(o, a)
            }, N.prototype.getX = function() {
                return this.x.fromRed()
            }, N.prototype.getY = function() {
                return this.y.fromRed()
            }, N.prototype.mul = function(e) {
                return e = new(a())(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
            }, N.prototype.mulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
            }, N.prototype.jmulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
            }, N.prototype.eq = function(e) {
                return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
            }, N.prototype.neg = function(e) {
                if (this.inf) return this;
                var r = this.curve.point(this.x, this.y.redNeg());
                if (e && this.precomputed) {
                    var t = this.precomputed,
                        n = function(e) {
                            return e.neg()
                        };
                    r.precomputed = {
                        naf: t.naf && {
                            wnd: t.naf.wnd,
                            points: t.naf.points.map(n)
                        },
                        doubles: t.doubles && {
                            step: t.doubles.step,
                            points: t.doubles.points.map(n)
                        }
                    }
                }
                return r
            }, N.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }, E(R, y.BasePoint), A.prototype.jpoint = function(e, r, t) {
                return new R(this, e, r, t)
            }, R.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var e = this.z.redInvm(),
                    r = e.redSqr(),
                    t = this.x.redMul(r),
                    n = this.y.redMul(r).redMul(e);
                return this.curve.point(t, n)
            }, R.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }, R.prototype.add = function(e) {
                if (this.isInfinity()) return e;
                if (e.isInfinity()) return this;
                var r = e.z.redSqr(),
                    t = this.z.redSqr(),
                    n = this.x.redMul(r),
                    i = e.x.redMul(t),
                    o = this.y.redMul(r.redMul(e.z)),
                    a = e.y.redMul(t.redMul(this.z)),
                    s = n.redSub(i),
                    u = o.redSub(a);
                if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = s.redSqr(),
                    f = c.redMul(s),
                    l = n.redMul(c),
                    h = u.redSqr().redIAdd(f).redISub(l).redISub(l),
                    d = u.redMul(l.redISub(h)).redISub(o.redMul(f)),
                    p = this.z.redMul(e.z).redMul(s);
                return this.curve.jpoint(h, d, p)
            }, R.prototype.mixedAdd = function(e) {
                if (this.isInfinity()) return e.toJ();
                if (e.isInfinity()) return this;
                var r = this.z.redSqr(),
                    t = this.x,
                    n = e.x.redMul(r),
                    i = this.y,
                    o = e.y.redMul(r).redMul(this.z),
                    a = t.redSub(n),
                    s = i.redSub(o);
                if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = a.redSqr(),
                    c = u.redMul(a),
                    f = t.redMul(u),
                    l = s.redSqr().redIAdd(c).redISub(f).redISub(f),
                    h = s.redMul(f.redISub(l)).redISub(i.redMul(c)),
                    d = this.z.redMul(a);
                return this.curve.jpoint(l, h, d)
            }, R.prototype.dblp = function(e) {
                if (0 === e) return this;
                if (this.isInfinity()) return this;
                if (!e) return this.dbl();
                var r;
                if (this.curve.zeroA || this.curve.threeA) {
                    var t = this;
                    for (r = 0; r < e; r++) t = t.dbl();
                    return t
                }
                var n = this.curve.a,
                    i = this.curve.tinv,
                    o = this.x,
                    a = this.y,
                    s = this.z,
                    u = s.redSqr().redSqr(),
                    c = a.redAdd(a);
                for (r = 0; r < e; r++) {
                    var f = o.redSqr(),
                        l = c.redSqr(),
                        h = l.redSqr(),
                        d = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)),
                        p = o.redMul(l),
                        v = d.redSqr().redISub(p.redAdd(p)),
                        g = p.redISub(v),
                        m = d.redMul(g);
                    m = m.redIAdd(m).redISub(h);
                    var y = c.redMul(s);
                    r + 1 < e && (u = u.redMul(h)), o = v, s = y, c = m
                }
                return this.curve.jpoint(o, c.redMul(i), s)
            }, R.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }, R.prototype._zeroDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n),
                        u = s.redSqr().redISub(a).redISub(a),
                        c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), e = u, r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.x.redSqr(),
                        l = this.y.redSqr(),
                        h = l.redSqr(),
                        d = this.x.redAdd(l).redSqr().redISub(f).redISub(h);
                    d = d.redIAdd(d);
                    var p = f.redAdd(f).redIAdd(f),
                        v = p.redSqr(),
                        g = h.redIAdd(h);
                    g = (g = g.redIAdd(g)).redIAdd(g), e = v.redISub(d).redISub(d), r = p.redMul(d.redISub(e)).redISub(g), t = (t = this.y.redMul(this.z)).redIAdd(t)
                }
                return this.curve.jpoint(e, r, t)
            }, R.prototype._threeDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                        u = s.redSqr().redISub(a).redISub(a);
                    e = u;
                    var c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.z.redSqr(),
                        l = this.y.redSqr(),
                        h = this.x.redMul(l),
                        d = this.x.redSub(f).redMul(this.x.redAdd(f));
                    d = d.redAdd(d).redIAdd(d);
                    var p = h.redIAdd(h),
                        v = (p = p.redIAdd(p)).redAdd(p);
                    e = d.redSqr().redISub(v), t = this.y.redAdd(this.z).redSqr().redISub(l).redISub(f);
                    var g = l.redSqr();
                    g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), r = d.redMul(p.redISub(e)).redISub(g)
                }
                return this.curve.jpoint(e, r, t)
            }, R.prototype._dbl = function() {
                var e = this.curve.a,
                    r = this.x,
                    t = this.y,
                    n = this.z,
                    i = n.redSqr().redSqr(),
                    o = r.redSqr(),
                    a = t.redSqr(),
                    s = o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),
                    u = r.redAdd(r),
                    c = (u = u.redIAdd(u)).redMul(a),
                    f = s.redSqr().redISub(c.redAdd(c)),
                    l = c.redISub(f),
                    h = a.redSqr();
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = s.redMul(l).redISub(h),
                    p = t.redAdd(t).redMul(n);
                return this.curve.jpoint(f, d, p)
            }, R.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var e = this.x.redSqr(),
                    r = this.y.redSqr(),
                    t = this.z.redSqr(),
                    n = r.redSqr(),
                    i = e.redAdd(e).redIAdd(e),
                    o = i.redSqr(),
                    a = this.x.redAdd(r).redSqr().redISub(e).redISub(n),
                    s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),
                    u = n.redIAdd(n);
                u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
                    f = r.redMul(c);
                f = (f = f.redIAdd(f)).redIAdd(f);
                var l = this.x.redMul(s).redISub(f);
                l = (l = l.redIAdd(l)).redIAdd(l);
                var h = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = this.z.redAdd(a).redSqr().redISub(t).redISub(s);
                return this.curve.jpoint(l, h, d)
            }, R.prototype.mul = function(e, r) {
                return e = new(a())(e, r), this.curve._wnafMul(this, e)
            }, R.prototype.eq = function(e) {
                if ("affine" === e.type) return this.eq(e.toJ());
                if (this === e) return !0;
                var r = this.z.redSqr(),
                    t = e.z.redSqr();
                if (0 !== this.x.redMul(t).redISub(e.x.redMul(r)).cmpn(0)) return !1;
                var n = r.redMul(this.z),
                    i = t.redMul(e.z);
                return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)
            }, R.prototype.eqXToP = function(e) {
                var r = this.z.redSqr(),
                    t = e.toRed(this.curve.red).redMul(r);
                if (0 === this.x.cmp(t)) return !0;
                for (var n = e.clone(), i = this.curve.redN.redMul(r);;) {
                    if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                    if (t.redIAdd(i), 0 === this.x.cmp(t)) return !0
                }
            }, R.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }, R.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            };
            var x = c((function(e, r) {
                    var t = r;
                    t.base = y, t.short = k, t.mont = null, t.edwards = null
                })),
                I = c((function(e, r) {
                    var t, n = r,
                        i = d.assert;

                    function o(e) {
                        "short" === e.type ? this.curve = new x.short(e) : "edwards" === e.type ? this.curve = new x.edwards(e) : this.curve = new x.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                    }

                    function a(e, r) {
                        Object.defineProperty(n, e, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var t = new o(r);
                                return Object.defineProperty(n, e, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: t
                                }), t
                            }
                        })
                    }
                    n.PresetCurve = o, a("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }), a("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }), a("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }), a("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: u().sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }), a("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: u().sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }), a("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["9"]
                    }), a("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                    try {
                        t = null.crash()
                    } catch (s) {
                        t = void 0
                    }
                    a("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: u().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [{
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        }, {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", t]
                    })
                }));

            function P(e) {
                if (!(this instanceof P)) return new P(e);
                this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var r = h.toArray(e.entropy, e.entropyEnc || "hex"),
                    t = h.toArray(e.nonce, e.nonceEnc || "hex"),
                    n = h.toArray(e.pers, e.persEnc || "hex");
                f(r.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(r, t, n)
            }
            var S = P;
            P.prototype._init = function(e, r, t) {
                var n = e.concat(r).concat(t);
                this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
            }, P.prototype._hmac = function() {
                return new(u().hmac)(this.hash, this.K)
            }, P.prototype._update = function(e) {
                var r = this._hmac().update(this.V).update([0]);
                e && (r = r.update(e)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest())
            }, P.prototype.reseed = function(e, r, t, n) {
                "string" !== typeof r && (n = t, t = r, r = null), e = h.toArray(e, r), t = h.toArray(t, n), f(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(t || [])), this._reseed = 1
            }, P.prototype.generate = function(e, r, t, n) {
                if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                "string" !== typeof r && (n = t, t = r, r = null), t && (t = h.toArray(t, n || "hex"), this._update(t));
                for (var i = []; i.length < e;) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                var o = i.slice(0, e);
                return this._update(t), this._reseed++, h.encode(o, r)
            };
            var _ = d.assert;

            function T(e, r) {
                this.ec = e, this.priv = null, this.pub = null, r.priv && this._importPrivate(r.priv, r.privEnc), r.pub && this._importPublic(r.pub, r.pubEnc)
            }
            var O = T;
            T.fromPublic = function(e, r, t) {
                return r instanceof T ? r : new T(e, {
                    pub: r,
                    pubEnc: t
                })
            }, T.fromPrivate = function(e, r, t) {
                return r instanceof T ? r : new T(e, {
                    priv: r,
                    privEnc: t
                })
            }, T.prototype.validate = function() {
                var e = this.getPublic();
                return e.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }, T.prototype.getPublic = function(e, r) {
                return "string" === typeof e && (r = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, e) : this.pub
            }, T.prototype.getPrivate = function(e) {
                return "hex" === e ? this.priv.toString(16, 2) : this.priv
            }, T.prototype._importPrivate = function(e, r) {
                this.priv = new(a())(e, r || 16), this.priv = this.priv.umod(this.ec.curve.n)
            }, T.prototype._importPublic = function(e, r) {
                if (e.x || e.y) return "mont" === this.ec.curve.type ? _(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || _(e.x && e.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(e.x, e.y));
                this.pub = this.ec.curve.decodePoint(e, r)
            }, T.prototype.derive = function(e) {
                return e.validate() || _(e.validate(), "public point not validated"), e.mul(this.priv).getX()
            }, T.prototype.sign = function(e, r, t) {
                return this.ec.sign(e, this, r, t)
            }, T.prototype.verify = function(e, r) {
                return this.ec.verify(e, r, this)
            }, T.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            };
            var C = d.assert;

            function U(e, r) {
                if (e instanceof U) return e;
                this._importDER(e, r) || (C(e.r && e.s, "Signature without r or s"), this.r = new(a())(e.r, 16), this.s = new(a())(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }
            var L = U;

            function F() {
                this.place = 0
            }

            function D(e, r) {
                var t = e[r.place++];
                if (!(128 & t)) return t;
                var n = 15 & t;
                if (0 === n || n > 4) return !1;
                for (var i = 0, o = 0, a = r.place; o < n; o++, a++) i <<= 8, i |= e[a], i >>>= 0;
                return !(i <= 127) && (r.place = a, i)
            }

            function M(e) {
                for (var r = 0, t = e.length - 1; !e[r] && !(128 & e[r + 1]) && r < t;) r++;
                return 0 === r ? e : e.slice(r)
            }

            function B(e, r) {
                if (r < 128) e.push(r);
                else {
                    var t = 1 + (Math.log(r) / Math.LN2 >>> 3);
                    for (e.push(128 | t); --t;) e.push(r >>> (t << 3) & 255);
                    e.push(r)
                }
            }
            U.prototype._importDER = function(e, r) {
                e = d.toArray(e, r);
                var t = new F;
                if (48 !== e[t.place++]) return !1;
                var n = D(e, t);
                if (!1 === n) return !1;
                if (n + t.place !== e.length) return !1;
                if (2 !== e[t.place++]) return !1;
                var i = D(e, t);
                if (!1 === i) return !1;
                var o = e.slice(t.place, i + t.place);
                if (t.place += i, 2 !== e[t.place++]) return !1;
                var s = D(e, t);
                if (!1 === s) return !1;
                if (e.length !== s + t.place) return !1;
                var u = e.slice(t.place, s + t.place);
                if (0 === o[0]) {
                    if (!(128 & o[1])) return !1;
                    o = o.slice(1)
                }
                if (0 === u[0]) {
                    if (!(128 & u[1])) return !1;
                    u = u.slice(1)
                }
                return this.r = new(a())(o), this.s = new(a())(u), this.recoveryParam = null, !0
            }, U.prototype.toDER = function(e) {
                var r = this.r.toArray(),
                    t = this.s.toArray();
                for (128 & r[0] && (r = [0].concat(r)), 128 & t[0] && (t = [0].concat(t)), r = M(r), t = M(t); !t[0] && !(128 & t[1]);) t = t.slice(1);
                var n = [2];
                B(n, r.length), (n = n.concat(r)).push(2), B(n, t.length);
                var i = n.concat(t),
                    o = [48];
                return B(o, i.length), o = o.concat(i), d.encode(o, e)
            };
            var G = function() {
                    throw new Error("unsupported")
                },
                Z = d.assert;

            function j(e) {
                if (!(this instanceof j)) return new j(e);
                "string" === typeof e && (Z(Object.prototype.hasOwnProperty.call(I, e), "Unknown curve " + e), e = I[e]), e instanceof I.PresetCurve && (e = {
                    curve: e
                }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash
            }
            var K = j;
            j.prototype.keyPair = function(e) {
                return new O(this, e)
            }, j.prototype.keyFromPrivate = function(e, r) {
                return O.fromPrivate(this, e, r)
            }, j.prototype.keyFromPublic = function(e, r) {
                return O.fromPublic(this, e, r)
            }, j.prototype.genKeyPair = function(e) {
                e || (e = {});
                for (var r = new S({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || G(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), t = this.n.byteLength(), n = this.n.sub(new(a())(2));;) {
                    var i = new(a())(r.generate(t));
                    if (!(i.cmp(n) > 0)) return i.iaddn(1), this.keyFromPrivate(i)
                }
            }, j.prototype._truncateToN = function(e, r) {
                var t = 8 * e.byteLength() - this.n.bitLength();
                return t > 0 && (e = e.ushrn(t)), !r && e.cmp(this.n) >= 0 ? e.sub(this.n) : e
            }, j.prototype.sign = function(e, r, t, n) {
                "object" === typeof t && (n = t, t = null), n || (n = {}), r = this.keyFromPrivate(r, t), e = this._truncateToN(new(a())(e, 16));
                for (var i = this.n.byteLength(), o = r.getPrivate().toArray("be", i), s = e.toArray("be", i), u = new S({
                        hash: this.hash,
                        entropy: o,
                        nonce: s,
                        pers: n.pers,
                        persEnc: n.persEnc || "utf8"
                    }), c = this.n.sub(new(a())(1)), f = 0;; f++) {
                    var l = n.k ? n.k(f) : new(a())(u.generate(this.n.byteLength()));
                    if (!((l = this._truncateToN(l, !0)).cmpn(1) <= 0 || l.cmp(c) >= 0)) {
                        var h = this.g.mul(l);
                        if (!h.isInfinity()) {
                            var d = h.getX(),
                                p = d.umod(this.n);
                            if (0 !== p.cmpn(0)) {
                                var v = l.invm(this.n).mul(p.mul(r.getPrivate()).iadd(e));
                                if (0 !== (v = v.umod(this.n)).cmpn(0)) {
                                    var g = (h.getY().isOdd() ? 1 : 0) | (0 !== d.cmp(p) ? 2 : 0);
                                    return n.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), g ^= 1), new L({
                                        r: p,
                                        s: v,
                                        recoveryParam: g
                                    })
                                }
                            }
                        }
                    }
                }
            }, j.prototype.verify = function(e, r, t, n) {
                e = this._truncateToN(new(a())(e, 16)), t = this.keyFromPublic(t, n);
                var i = (r = new L(r, "hex")).r,
                    o = r.s;
                if (i.cmpn(1) < 0 || i.cmp(this.n) >= 0) return !1;
                if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                var s, u = o.invm(this.n),
                    c = u.mul(e).umod(this.n),
                    f = u.mul(i).umod(this.n);
                return this.curve._maxwellTrick ? !(s = this.g.jmulAdd(c, t.getPublic(), f)).isInfinity() && s.eqXToP(i) : !(s = this.g.mulAdd(c, t.getPublic(), f)).isInfinity() && 0 === s.getX().umod(this.n).cmp(i)
            }, j.prototype.recoverPubKey = function(e, r, t, n) {
                Z((3 & t) === t, "The recovery param is more than two bits"), r = new L(r, n);
                var i = this.n,
                    o = new(a())(e),
                    s = r.r,
                    u = r.s,
                    c = 1 & t,
                    f = t >> 1;
                if (s.cmp(this.curve.p.umod(this.curve.n)) >= 0 && f) throw new Error("Unable to find sencond key candinate");
                s = f ? this.curve.pointFromX(s.add(this.curve.n), c) : this.curve.pointFromX(s, c);
                var l = r.r.invm(i),
                    h = i.sub(o).mul(l).umod(i),
                    d = u.mul(l).umod(i);
                return this.g.mulAdd(h, s, d)
            }, j.prototype.getKeyRecoveryParam = function(e, r, t, n) {
                if (null !== (r = new L(r, n)).recoveryParam) return r.recoveryParam;
                for (var i = 0; i < 4; i++) {
                    var o;
                    try {
                        o = this.recoverPubKey(e, r, i)
                    } catch (e) {
                        continue
                    }
                    if (o.eq(t)) return i
                }
                throw new Error("Unable to find valid recovery factor")
            };
            var z = c((function(e, r) {
                    var t = r;
                    t.version = "6.5.4", t.utils = d, t.rand = function() {
                        throw new Error("unsupported")
                    }, t.curve = x, t.curves = I, t.ec = K, t.eddsa = null
                })).ec,
                q = t(53237),
                H = t(87549),
                W = new(t(79094).Logger)("signing-key/5.7.0"),
                V = null;

            function J() {
                return V || (V = new z("secp256k1")), V
            }
            var X = function() {
                function e(r) {
                    (0, n.Z)(this, e), (0, H.defineReadOnly)(this, "curve", "secp256k1"), (0, H.defineReadOnly)(this, "privateKey", (0, q.hexlify)(r)), 32 !== (0, q.hexDataLength)(this.privateKey) && W.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                    var t = J().keyFromPrivate((0, q.arrayify)(this.privateKey));
                    (0, H.defineReadOnly)(this, "publicKey", "0x" + t.getPublic(!1, "hex")), (0, H.defineReadOnly)(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), (0, H.defineReadOnly)(this, "_isSigningKey", !0)
                }
                return (0, i.Z)(e, [{
                    key: "_addPoint",
                    value: function(e) {
                        var r = J().keyFromPublic((0, q.arrayify)(this.publicKey)),
                            t = J().keyFromPublic((0, q.arrayify)(e));
                        return "0x" + r.pub.add(t.pub).encodeCompressed("hex")
                    }
                }, {
                    key: "signDigest",
                    value: function(e) {
                        var r = J().keyFromPrivate((0, q.arrayify)(this.privateKey)),
                            t = (0, q.arrayify)(e);
                        32 !== t.length && W.throwArgumentError("bad digest length", "digest", e);
                        var n = r.sign(t, {
                            canonical: !0
                        });
                        return (0, q.splitSignature)({
                            recoveryParam: n.recoveryParam,
                            r: (0, q.hexZeroPad)("0x" + n.r.toString(16), 32),
                            s: (0, q.hexZeroPad)("0x" + n.s.toString(16), 32)
                        })
                    }
                }, {
                    key: "computeSharedSecret",
                    value: function(e) {
                        var r = J().keyFromPrivate((0, q.arrayify)(this.privateKey)),
                            t = J().keyFromPublic((0, q.arrayify)(Y(e)));
                        return (0, q.hexZeroPad)("0x" + r.derive(t.getPublic()).toString(16), 32)
                    }
                }], [{
                    key: "isSigningKey",
                    value: function(e) {
                        return !(!e || !e._isSigningKey)
                    }
                }]), e
            }();

            function Q(e, r) {
                var t = (0, q.splitSignature)(r),
                    n = {
                        r: (0, q.arrayify)(t.r),
                        s: (0, q.arrayify)(t.s)
                    };
                return "0x" + J().recoverPubKey((0, q.arrayify)(e), n, t.recoveryParam).encode("hex", !1)
            }

            function Y(e, r) {
                var t = (0, q.arrayify)(e);
                if (32 === t.length) {
                    var n = new X(t);
                    return r ? "0x" + J().keyFromPrivate(t).getPublic(!0, "hex") : n.publicKey
                }
                return 33 === t.length ? r ? (0, q.hexlify)(t) : "0x" + J().keyFromPublic(t).getPublic(!1, "hex") : 65 === t.length ? r ? "0x" + J().keyFromPublic(t).getPublic(!0, "hex") : (0, q.hexlify)(t) : W.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
        },
        73608: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                keccak256: function() {
                    return g
                },
                pack: function() {
                    return v
                },
                sha256: function() {
                    return m
                }
            });
            var n = t(96812),
                i = t(53237),
                o = t(81e3),
                a = t(30226),
                s = t(9759),
                u = t(79094),
                c = new RegExp("^bytes([0-9]+)$"),
                f = new RegExp("^(u?int)([0-9]*)$"),
                l = new RegExp("^(.*)\\[([0-9]*)\\]$"),
                h = "0000000000000000000000000000000000000000000000000000000000000000",
                d = new u.Logger("solidity/5.6.1");

            function p(e, r, t) {
                switch (e) {
                    case "address":
                        return t ? (0, i.zeroPad)(r, 32) : (0, i.arrayify)(r);
                    case "string":
                        return (0, s.Y0)(r);
                    case "bytes":
                        return (0, i.arrayify)(r);
                    case "bool":
                        return r = r ? "0x01" : "0x00", t ? (0, i.zeroPad)(r, 32) : (0, i.arrayify)(r)
                }
                var o = e.match(f);
                if (o) {
                    var a = parseInt(o[2] || "256");
                    return (o[2] && String(a) !== o[2] || a % 8 !== 0 || 0 === a || a > 256) && d.throwArgumentError("invalid number type", "type", e), t && (a = 256), r = n.O$.from(r).toTwos(a), (0, i.zeroPad)(r, a / 8)
                }
                if (o = e.match(c)) {
                    var u = parseInt(o[1]);
                    return (String(u) !== o[1] || 0 === u || u > 32) && d.throwArgumentError("invalid bytes type", "type", e), (0, i.arrayify)(r).byteLength !== u && d.throwArgumentError("invalid value for ".concat(e), "value", r), t ? (0, i.arrayify)((r + h).substring(0, 66)) : r
                }
                if ((o = e.match(l)) && Array.isArray(r)) {
                    var v = o[1];
                    parseInt(o[2] || String(r.length)) != r.length && d.throwArgumentError("invalid array length for ".concat(e), "value", r);
                    var g = [];
                    return r.forEach((function(e) {
                        g.push(p(v, e, !0))
                    })), (0, i.concat)(g)
                }
                return d.throwArgumentError("invalid type", "type", e)
            }

            function v(e, r) {
                e.length != r.length && d.throwArgumentError("wrong number of values; expected ${ types.length }", "values", r);
                var t = [];
                return e.forEach((function(e, n) {
                    t.push(p(e, r[n]))
                })), (0, i.hexlify)((0, i.concat)(t))
            }

            function g(e, r) {
                return (0, o.keccak256)(v(e, r))
            }

            function m(e, r) {
                return (0, a.JQ)(v(e, r))
            }
        },
        28133: function(e, r, t) {
            "use strict";
            t.d(r, {
                F: function() {
                    return s
                },
                s: function() {
                    return a
                }
            });
            var n = t(70956),
                i = t(53237),
                o = t(9759);

            function a(e) {
                var r = (0, o.Y0)(e);
                if (r.length > 31) throw new Error("bytes32 string must be less than 32 bytes");
                return (0, i.hexlify)((0, i.concat)([r, n.R]).slice(0, 32))
            }

            function s(e) {
                var r = (0, i.arrayify)(e);
                if (32 !== r.length) throw new Error("invalid bytes32 - not 32 bytes long");
                if (0 !== r[31]) throw new Error("invalid bytes32 string - no null terminator");
                for (var t = 31; 0 === r[t - 1];) t--;
                return (0, o.ZN)(r.slice(0, t))
            }
        },
        50273: function(e, r, t) {
            "use strict";
            t.d(r, {
                Ll: function() {
                    return p
                }
            });
            var n = t(9759);

            function i(e, r) {
                r || (r = function(e) {
                    return [parseInt(e, 16)]
                });
                var t = 0,
                    n = {};
                return e.split(",").forEach((function(e) {
                    var i = e.split(":");
                    t += parseInt(i[0], 16), n[t] = r(i[1])
                })), n
            }

            function o(e) {
                var r = 0;
                return e.split(",").map((function(e) {
                    var t = e.split("-");
                    return 1 === t.length ? t[1] = "0" : "" === t[1] && (t[1] = "1"), {
                        l: r + parseInt(t[0], 16),
                        h: r = parseInt(t[1], 16)
                    }
                }))
            }

            function a(e, r) {
                for (var t = 0, n = 0; n < r.length; n++) {
                    var i = r[n];
                    if (e >= (t += i.l) && e <= t + i.h && (e - t) % (i.d || 1) === 0) {
                        if (i.e && -1 !== i.e.indexOf(e - t)) continue;
                        return i
                    }
                }
                return null
            }
            var s = o("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),
                u = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((function(e) {
                    return parseInt(e, 16)
                })),
                c = [{
                    h: 25,
                    s: 32,
                    l: 65
                }, {
                    h: 30,
                    s: 32,
                    e: [23],
                    l: 127
                }, {
                    h: 54,
                    s: 1,
                    e: [48],
                    l: 64,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 57,
                    d: 2
                }, {
                    h: 44,
                    s: 1,
                    l: 17,
                    d: 2
                }, {
                    h: 10,
                    s: 1,
                    e: [2, 6, 8],
                    l: 61,
                    d: 2
                }, {
                    h: 16,
                    s: 1,
                    l: 68,
                    d: 2
                }, {
                    h: 84,
                    s: 1,
                    e: [18, 24, 66],
                    l: 19,
                    d: 2
                }, {
                    h: 26,
                    s: 32,
                    e: [17],
                    l: 435
                }, {
                    h: 22,
                    s: 1,
                    l: 71,
                    d: 2
                }, {
                    h: 15,
                    s: 80,
                    l: 40
                }, {
                    h: 31,
                    s: 32,
                    l: 16
                }, {
                    h: 32,
                    s: 1,
                    l: 80,
                    d: 2
                }, {
                    h: 52,
                    s: 1,
                    l: 42,
                    d: 2
                }, {
                    h: 12,
                    s: 1,
                    l: 55,
                    d: 2
                }, {
                    h: 40,
                    s: 1,
                    e: [38],
                    l: 15,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 48,
                    d: 2
                }, {
                    h: 37,
                    s: 48,
                    l: 49
                }, {
                    h: 148,
                    s: 1,
                    l: 6351,
                    d: 2
                }, {
                    h: 88,
                    s: 1,
                    l: 160,
                    d: 2
                }, {
                    h: 15,
                    s: 16,
                    l: 704
                }, {
                    h: 25,
                    s: 26,
                    l: 854
                }, {
                    h: 25,
                    s: 32,
                    l: 55915
                }, {
                    h: 37,
                    s: 40,
                    l: 1247
                }, {
                    h: 25,
                    s: -119711,
                    l: 53248
                }, {
                    h: 25,
                    s: -119763,
                    l: 52
                }, {
                    h: 25,
                    s: -119815,
                    l: 52
                }, {
                    h: 25,
                    s: -119867,
                    e: [1, 4, 5, 7, 8, 11, 12, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -119919,
                    l: 52
                }, {
                    h: 24,
                    s: -119971,
                    e: [2, 7, 8, 17],
                    l: 52
                }, {
                    h: 24,
                    s: -120023,
                    e: [2, 7, 13, 15, 16, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -120075,
                    l: 52
                }, {
                    h: 25,
                    s: -120127,
                    l: 52
                }, {
                    h: 25,
                    s: -120179,
                    l: 52
                }, {
                    h: 25,
                    s: -120231,
                    l: 52
                }, {
                    h: 25,
                    s: -120283,
                    l: 52
                }, {
                    h: 25,
                    s: -120335,
                    l: 52
                }, {
                    h: 24,
                    s: -119543,
                    e: [17],
                    l: 56
                }, {
                    h: 24,
                    s: -119601,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119659,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119717,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119775,
                    e: [17],
                    l: 58
                }],
                f = i("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),
                l = i("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),
                h = i("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", (function(e) {
                    if (e.length % 4 !== 0) throw new Error("bad data");
                    for (var r = [], t = 0; t < e.length; t += 4) r.push(parseInt(e.substring(t, t + 4), 16));
                    return r
                })),
                d = o("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

            function p(e) {
                if (e.match(/^[a-z0-9-]*$/i) && e.length <= 59) return e.toLowerCase();
                var r, t = (0, n.XL)(e);
                r = t.map((function(e) {
                    if (u.indexOf(e) >= 0) return [];
                    if (e >= 65024 && e <= 65039) return [];
                    var r = function(e) {
                        var r = a(e, c);
                        if (r) return [e + r.s];
                        var t = f[e];
                        if (t) return t;
                        var n = l[e];
                        return n ? [e + n[0]] : h[e] || null
                    }(e);
                    return r || [e]
                })), t = r.reduce((function(e, r) {
                    return r.forEach((function(r) {
                        e.push(r)
                    })), e
                }), []), (t = (0, n.XL)((0, n.uu)(t), n.Uj.NFKC)).forEach((function(e) {
                    if (a(e, d)) throw new Error("STRINGPREP_CONTAINS_PROHIBITED")
                })), t.forEach((function(e) {
                    if (a(e, s)) throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")
                }));
                var i = (0, n.uu)(t);
                if ("-" === i.substring(0, 1) || "--" === i.substring(2, 4) || "-" === i.substring(i.length - 1)) throw new Error("invalid hyphen");
                return i
            }
        },
        7827: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                UnicodeNormalizationForm: function() {
                    return o.Uj
                },
                Utf8ErrorFuncs: function() {
                    return o.te
                },
                Utf8ErrorReason: function() {
                    return o.Uw
                },
                _toEscapedUtf8String: function() {
                    return o.U$
                },
                formatBytes32String: function() {
                    return n.s
                },
                nameprep: function() {
                    return i.Ll
                },
                parseBytes32String: function() {
                    return n.F
                },
                toUtf8Bytes: function() {
                    return o.Y0
                },
                toUtf8CodePoints: function() {
                    return o.XL
                },
                toUtf8String: function() {
                    return o.ZN
                }
            });
            var n = t(28133),
                i = t(50273),
                o = t(9759)
        },
        9759: function(e, r, t) {
            "use strict";
            t.d(r, {
                Uj: function() {
                    return n
                },
                te: function() {
                    return u
                },
                Uw: function() {
                    return i
                },
                U$: function() {
                    return h
                },
                uu: function() {
                    return d
                },
                Y0: function() {
                    return f
                },
                XL: function() {
                    return v
                },
                ZN: function() {
                    return p
                }
            });
            var n, i, o = t(53237),
                a = new(t(79094).Logger)("strings/5.7.0");

            function s(e, r, t, n, o) {
                if (e === i.BAD_PREFIX || e === i.UNEXPECTED_CONTINUE) {
                    for (var a = 0, s = r + 1; s < t.length && t[s] >> 6 === 2; s++) a++;
                    return a
                }
                return e === i.OVERRUN ? t.length - r - 1 : 0
            }! function(e) {
                e.current = "", e.NFC = "NFC", e.NFD = "NFD", e.NFKC = "NFKC", e.NFKD = "NFKD"
            }(n || (n = {})),
            function(e) {
                e.UNEXPECTED_CONTINUE = "unexpected continuation byte", e.BAD_PREFIX = "bad codepoint prefix", e.OVERRUN = "string overrun", e.MISSING_CONTINUE = "missing continuation byte", e.OUT_OF_RANGE = "out of UTF-8 range", e.UTF16_SURROGATE = "UTF-16 surrogate", e.OVERLONG = "overlong representation"
            }(i || (i = {}));
            var u = Object.freeze({
                error: function(e, r, t, n, i) {
                    return a.throwArgumentError("invalid codepoint at offset ".concat(r, "; ").concat(e), "bytes", t)
                },
                ignore: s,
                replace: function(e, r, t, n, o) {
                    return e === i.OVERLONG ? (n.push(o), 0) : (n.push(65533), s(e, r, t))
                }
            });

            function c(e, r) {
                null == r && (r = u.error), e = (0, o.arrayify)(e);
                for (var t = [], n = 0; n < e.length;) {
                    var a = e[n++];
                    if (a >> 7 !== 0) {
                        var s = null,
                            c = null;
                        if (192 === (224 & a)) s = 1, c = 127;
                        else if (224 === (240 & a)) s = 2, c = 2047;
                        else {
                            if (240 !== (248 & a)) {
                                n += r(128 === (192 & a) ? i.UNEXPECTED_CONTINUE : i.BAD_PREFIX, n - 1, e, t);
                                continue
                            }
                            s = 3, c = 65535
                        }
                        if (n - 1 + s >= e.length) n += r(i.OVERRUN, n - 1, e, t);
                        else {
                            for (var f = a & (1 << 8 - s - 1) - 1, l = 0; l < s; l++) {
                                var h = e[n];
                                if (128 != (192 & h)) {
                                    n += r(i.MISSING_CONTINUE, n, e, t), f = null;
                                    break
                                }
                                f = f << 6 | 63 & h, n++
                            }
                            null !== f && (f > 1114111 ? n += r(i.OUT_OF_RANGE, n - 1 - s, e, t, f) : f >= 55296 && f <= 57343 ? n += r(i.UTF16_SURROGATE, n - 1 - s, e, t, f) : f <= c ? n += r(i.OVERLONG, n - 1 - s, e, t, f) : t.push(f))
                        }
                    } else t.push(a)
                }
                return t
            }

            function f(e) {
                var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current;
                r != n.current && (a.checkNormalize(), e = e.normalize(r));
                for (var t = [], i = 0; i < e.length; i++) {
                    var s = e.charCodeAt(i);
                    if (s < 128) t.push(s);
                    else if (s < 2048) t.push(s >> 6 | 192), t.push(63 & s | 128);
                    else if (55296 == (64512 & s)) {
                        i++;
                        var u = e.charCodeAt(i);
                        if (i >= e.length || 56320 !== (64512 & u)) throw new Error("invalid utf-8 string");
                        var c = 65536 + ((1023 & s) << 10) + (1023 & u);
                        t.push(c >> 18 | 240), t.push(c >> 12 & 63 | 128), t.push(c >> 6 & 63 | 128), t.push(63 & c | 128)
                    } else t.push(s >> 12 | 224), t.push(s >> 6 & 63 | 128), t.push(63 & s | 128)
                }
                return (0, o.arrayify)(t)
            }

            function l(e) {
                var r = "0000" + e.toString(16);
                return "\\u" + r.substring(r.length - 4)
            }

            function h(e, r) {
                return '"' + c(e, r).map((function(e) {
                    if (e < 256) {
                        switch (e) {
                            case 8:
                                return "\\b";
                            case 9:
                                return "\\t";
                            case 10:
                                return "\\n";
                            case 13:
                                return "\\r";
                            case 34:
                                return '\\"';
                            case 92:
                                return "\\\\"
                        }
                        if (e >= 32 && e < 127) return String.fromCharCode(e)
                    }
                    return e <= 65535 ? l(e) : l(55296 + ((e -= 65536) >> 10 & 1023)) + l(56320 + (1023 & e))
                })).join("") + '"'
            }

            function d(e) {
                return e.map((function(e) {
                    return e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode(55296 + (e >> 10 & 1023), 56320 + (1023 & e)))
                })).join("")
            }

            function p(e, r) {
                return d(c(e, r))
            }

            function v(e) {
                return c(f(e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current))
            }
        },
        42442: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                TransactionTypes: function() {
                    return n
                },
                accessListify: function() {
                    return A
                },
                computeAddress: function() {
                    return y
                },
                parse: function() {
                    return P
                },
                recoverAddress: function() {
                    return b
                },
                serialize: function() {
                    return x
                }
            });
            var n, i = t(4477),
                o = t(96812),
                a = t(53237),
                s = t(86217),
                u = t(81e3),
                c = t(87549),
                f = t(76354),
                l = t(31654),
                h = t(79094),
                d = new h.Logger("transactions/5.7.0");

            function p(e) {
                return "0x" === e ? null : (0, i.getAddress)(e)
            }

            function v(e) {
                return "0x" === e ? s._Y : o.O$.from(e)
            }! function(e) {
                e[e.legacy = 0] = "legacy", e[e.eip2930 = 1] = "eip2930", e[e.eip1559 = 2] = "eip1559"
            }(n || (n = {}));
            var g = [{
                    name: "nonce",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasPrice",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasLimit",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "to",
                    length: 20
                }, {
                    name: "value",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "data"
                }],
                m = {
                    chainId: !0,
                    data: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    type: !0,
                    value: !0
                };

            function y(e) {
                var r = (0, l.computePublicKey)(e);
                return (0, i.getAddress)((0, a.hexDataSlice)((0, u.keccak256)((0, a.hexDataSlice)(r, 1)), 12))
            }

            function b(e, r) {
                return y((0, l.recoverPublicKey)((0, a.arrayify)(e), r))
            }

            function E(e, r) {
                var t = (0, a.stripZeros)(o.O$.from(e).toHexString());
                return t.length > 32 && d.throwArgumentError("invalid length for " + r, "transaction:" + r, e), t
            }

            function w(e, r) {
                return {
                    address: (0, i.getAddress)(e),
                    storageKeys: (r || []).map((function(r, t) {
                        return 32 !== (0, a.hexDataLength)(r) && d.throwArgumentError("invalid access list storageKey", "accessList[".concat(e, ":").concat(t, "]"), r), r.toLowerCase()
                    }))
                }
            }

            function A(e) {
                if (Array.isArray(e)) return e.map((function(e, r) {
                    return Array.isArray(e) ? (e.length > 2 && d.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[".concat(r, "]"), e), w(e[0], e[1])) : w(e.address, e.storageKeys)
                }));
                var r = Object.keys(e).map((function(r) {
                    var t = e[r].reduce((function(e, r) {
                        return e[r] = !0, e
                    }), {});
                    return w(r, Object.keys(t).sort())
                }));
                return r.sort((function(e, r) {
                    return e.address.localeCompare(r.address)
                })), r
            }

            function k(e) {
                return A(e).map((function(e) {
                    return [e.address, e.storageKeys]
                }))
            }

            function N(e, r) {
                if (null != e.gasPrice) {
                    var t = o.O$.from(e.gasPrice),
                        n = o.O$.from(e.maxFeePerGas || 0);
                    t.eq(n) || d.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: t,
                        maxFeePerGas: n
                    })
                }
                var s = [E(e.chainId || 0, "chainId"), E(e.nonce || 0, "nonce"), E(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), E(e.maxFeePerGas || 0, "maxFeePerGas"), E(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, i.getAddress)(e.to) : "0x", E(e.value || 0, "value"), e.data || "0x", k(e.accessList || [])];
                if (r) {
                    var u = (0, a.splitSignature)(r);
                    s.push(E(u.recoveryParam, "recoveryParam")), s.push((0, a.stripZeros)(u.r)), s.push((0, a.stripZeros)(u.s))
                }
                return (0, a.hexConcat)(["0x02", f.encode(s)])
            }

            function R(e, r) {
                var t = [E(e.chainId || 0, "chainId"), E(e.nonce || 0, "nonce"), E(e.gasPrice || 0, "gasPrice"), E(e.gasLimit || 0, "gasLimit"), null != e.to ? (0, i.getAddress)(e.to) : "0x", E(e.value || 0, "value"), e.data || "0x", k(e.accessList || [])];
                if (r) {
                    var n = (0, a.splitSignature)(r);
                    t.push(E(n.recoveryParam, "recoveryParam")), t.push((0, a.stripZeros)(n.r)), t.push((0, a.stripZeros)(n.s))
                }
                return (0, a.hexConcat)(["0x01", f.encode(t)])
            }

            function x(e, r) {
                if (null == e.type || 0 === e.type) return null != e.accessList && d.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", e),
                    function(e, r) {
                        (0, c.checkProperties)(e, m);
                        var t = [];
                        g.forEach((function(r) {
                            var n = e[r.name] || [],
                                i = {};
                            r.numeric && (i.hexPad = "left"), n = (0, a.arrayify)((0, a.hexlify)(n, i)), r.length && n.length !== r.length && n.length > 0 && d.throwArgumentError("invalid length for " + r.name, "transaction:" + r.name, n), r.maxLength && (n = (0, a.stripZeros)(n)).length > r.maxLength && d.throwArgumentError("invalid length for " + r.name, "transaction:" + r.name, n), t.push((0, a.hexlify)(n))
                        }));
                        var n = 0;
                        if (null != e.chainId ? "number" !== typeof(n = e.chainId) && d.throwArgumentError("invalid transaction.chainId", "transaction", e) : r && !(0, a.isBytesLike)(r) && r.v > 28 && (n = Math.floor((r.v - 35) / 2)), 0 !== n && (t.push((0, a.hexlify)(n)), t.push("0x"), t.push("0x")), !r) return f.encode(t);
                        var i = (0, a.splitSignature)(r),
                            o = 27 + i.recoveryParam;
                        return 0 !== n ? (t.pop(), t.pop(), t.pop(), o += 2 * n + 8, i.v > 28 && i.v !== o && d.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", r)) : i.v !== o && d.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", r), t.push((0, a.hexlify)(o)), t.push((0, a.stripZeros)((0, a.arrayify)(i.r))), t.push((0, a.stripZeros)((0, a.arrayify)(i.s))), f.encode(t)
                    }(e, r);
                switch (e.type) {
                    case 1:
                        return R(e, r);
                    case 2:
                        return N(e, r)
                }
                return d.throwError("unsupported transaction type: ".concat(e.type), h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "serializeTransaction",
                    transactionType: e.type
                })
            }

            function I(e, r, t) {
                try {
                    var n = v(r[0]).toNumber();
                    if (0 !== n && 1 !== n) throw new Error("bad recid");
                    e.v = n
                } catch (o) {
                    d.throwArgumentError("invalid v for transaction type: 1", "v", r[0])
                }
                e.r = (0, a.hexZeroPad)(r[1], 32), e.s = (0, a.hexZeroPad)(r[2], 32);
                try {
                    var i = (0, u.keccak256)(t(e));
                    e.from = b(i, {
                        r: e.r,
                        s: e.s,
                        recoveryParam: e.v
                    })
                } catch (o) {}
            }

            function P(e) {
                var r = (0, a.arrayify)(e);
                if (r[0] > 127) return function(e) {
                    var r = f.decode(e);
                    9 !== r.length && 6 !== r.length && d.throwArgumentError("invalid raw transaction", "rawTransaction", e);
                    var t = {
                        nonce: v(r[0]).toNumber(),
                        gasPrice: v(r[1]),
                        gasLimit: v(r[2]),
                        to: p(r[3]),
                        value: v(r[4]),
                        data: r[5],
                        chainId: 0
                    };
                    if (6 === r.length) return t;
                    try {
                        t.v = o.O$.from(r[6]).toNumber()
                    } catch (c) {
                        return t
                    }
                    if (t.r = (0, a.hexZeroPad)(r[7], 32), t.s = (0, a.hexZeroPad)(r[8], 32), o.O$.from(t.r).isZero() && o.O$.from(t.s).isZero()) t.chainId = t.v, t.v = 0;
                    else {
                        t.chainId = Math.floor((t.v - 35) / 2), t.chainId < 0 && (t.chainId = 0);
                        var n = t.v - 27,
                            i = r.slice(0, 6);
                        0 !== t.chainId && (i.push((0, a.hexlify)(t.chainId)), i.push("0x"), i.push("0x"), n -= 2 * t.chainId + 8);
                        var s = (0, u.keccak256)(f.encode(i));
                        try {
                            t.from = b(s, {
                                r: (0, a.hexlify)(t.r),
                                s: (0, a.hexlify)(t.s),
                                recoveryParam: n
                            })
                        } catch (c) {}
                        t.hash = (0, u.keccak256)(e)
                    }
                    return t.type = null, t
                }(r);
                switch (r[0]) {
                    case 1:
                        return function(e) {
                            var r = f.decode(e.slice(1));
                            8 !== r.length && 11 !== r.length && d.throwArgumentError("invalid component count for transaction type: 1", "payload", (0, a.hexlify)(e));
                            var t = {
                                type: 1,
                                chainId: v(r[0]).toNumber(),
                                nonce: v(r[1]).toNumber(),
                                gasPrice: v(r[2]),
                                gasLimit: v(r[3]),
                                to: p(r[4]),
                                value: v(r[5]),
                                data: r[6],
                                accessList: A(r[7])
                            };
                            return 8 === r.length || (t.hash = (0, u.keccak256)(e), I(t, r.slice(8), R)), t
                        }(r);
                    case 2:
                        return function(e) {
                            var r = f.decode(e.slice(1));
                            9 !== r.length && 12 !== r.length && d.throwArgumentError("invalid component count for transaction type: 2", "payload", (0, a.hexlify)(e));
                            var t = v(r[2]),
                                n = v(r[3]),
                                i = {
                                    type: 2,
                                    chainId: v(r[0]).toNumber(),
                                    nonce: v(r[1]).toNumber(),
                                    maxPriorityFeePerGas: t,
                                    maxFeePerGas: n,
                                    gasPrice: null,
                                    gasLimit: v(r[4]),
                                    to: p(r[5]),
                                    value: v(r[6]),
                                    data: r[7],
                                    accessList: A(r[8])
                                };
                            return 9 === r.length || (i.hash = (0, u.keccak256)(e), I(i, r.slice(9), N)), i
                        }(r)
                }
                return d.throwError("unsupported transaction type: ".concat(r[0]), h.Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "parseTransaction",
                    transactionType: r[0]
                })
            }
        },
        83138: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                commify: function() {
                    return a
                },
                formatEther: function() {
                    return c
                },
                formatUnits: function() {
                    return s
                },
                parseEther: function() {
                    return f
                },
                parseUnits: function() {
                    return u
                }
            });
            var n = t(28550),
                i = new(t(79094).Logger)("units/5.6.1"),
                o = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];

            function a(e) {
                var r = String(e).split(".");
                (r.length > 2 || !r[0].match(/^-?[0-9]*$/) || r[1] && !r[1].match(/^[0-9]*$/) || "." === e || "-." === e) && i.throwArgumentError("invalid value", "value", e);
                var t = r[0],
                    n = "";
                for ("-" === t.substring(0, 1) && (n = "-", t = t.substring(1));
                    "0" === t.substring(0, 1);) t = t.substring(1);
                "" === t && (t = "0");
                var o = "";
                for (2 === r.length && (o = "." + (r[1] || "0")); o.length > 2 && "0" === o[o.length - 1];) o = o.substring(0, o.length - 1);
                for (var a = []; t.length;) {
                    if (t.length <= 3) {
                        a.unshift(t);
                        break
                    }
                    var s = t.length - 3;
                    a.unshift(t.substring(s)), t = t.substring(0, s)
                }
                return n + a.join(",") + o
            }

            function s(e, r) {
                if ("string" === typeof r) {
                    var t = o.indexOf(r); - 1 !== t && (r = 3 * t)
                }
                return (0, n.S5)(e, null != r ? r : 18)
            }

            function u(e, r) {
                if ("string" !== typeof e && i.throwArgumentError("value must be a string", "value", e), "string" === typeof r) {
                    var t = o.indexOf(r); - 1 !== t && (r = 3 * t)
                }
                return (0, n.Ox)(e, null != r ? r : 18)
            }

            function c(e) {
                return s(e, 18)
            }

            function f(e) {
                return u(e, 18)
            }
        },
        84632: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                Wallet: function() {
                    return x
                },
                verifyMessage: function() {
                    return I
                },
                verifyTypedData: function() {
                    return P
                }
            });
            var n = t(27166),
                i = t(27853),
                o = t(84531),
                a = t(6148),
                s = t(81020),
                u = t(18992),
                c = t(4477),
                f = t(99221),
                l = t(80155),
                h = t(53237),
                d = t(50001),
                p = t(81795),
                v = t(36723),
                g = t(81e3),
                m = t(87549),
                y = t(3697),
                b = t(31654),
                E = t(75750),
                w = t(69449),
                A = t(42442),
                k = t(79094),
                N = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                R = new k.Logger("wallet/5.6.2");
            var x = function(e) {
                (0, s.Z)(t, e);
                var r = (0, u.Z)(t);

                function t(e, n) {
                    var o, s;
                    if ((0, i.Z)(this, t), o = r.call(this), null != (s = e) && (0, h.isHexString)(s.privateKey, 32) && null != s.address) {
                        var u = new b.SigningKey(e.privateKey);
                        if ((0, m.defineReadOnly)((0, a.Z)(o), "_signingKey", (function() {
                                return u
                            })), (0, m.defineReadOnly)((0, a.Z)(o), "address", (0, A.computeAddress)(o.publicKey)), o.address !== (0, c.getAddress)(e.address) && R.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"), function(e) {
                                var r = e.mnemonic;
                                return r && r.phrase
                            }(e)) {
                            var l = e.mnemonic;
                            (0, m.defineReadOnly)((0, a.Z)(o), "_mnemonic", (function() {
                                return {
                                    phrase: l.phrase,
                                    path: l.path || v.defaultPath,
                                    locale: l.locale || "en"
                                }
                            }));
                            var d = o.mnemonic,
                                p = v.HDNode.fromMnemonic(d.phrase, null, d.locale).derivePath(d.path);
                            (0, A.computeAddress)(p.privateKey) !== o.address && R.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]")
                        } else(0, m.defineReadOnly)((0, a.Z)(o), "_mnemonic", (function() {
                            return null
                        }))
                    } else {
                        if (b.SigningKey.isSigningKey(e)) "secp256k1" !== e.curve && R.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"), (0, m.defineReadOnly)((0, a.Z)(o), "_signingKey", (function() {
                            return e
                        }));
                        else {
                            "string" === typeof e && e.match(/^[0-9a-f]*$/i) && 64 === e.length && (e = "0x" + e);
                            var g = new b.SigningKey(e);
                            (0, m.defineReadOnly)((0, a.Z)(o), "_signingKey", (function() {
                                return g
                            }))
                        }(0, m.defineReadOnly)((0, a.Z)(o), "_mnemonic", (function() {
                            return null
                        })), (0, m.defineReadOnly)((0, a.Z)(o), "address", (0, A.computeAddress)(o.publicKey))
                    }
                    return n && !f.zt.isProvider(n) && R.throwArgumentError("invalid provider", "provider", n), (0, m.defineReadOnly)((0, a.Z)(o), "provider", n || null), o
                }
                return (0, o.Z)(t, [{
                    key: "mnemonic",
                    get: function() {
                        return this._mnemonic()
                    }
                }, {
                    key: "privateKey",
                    get: function() {
                        return this._signingKey().privateKey
                    }
                }, {
                    key: "publicKey",
                    get: function() {
                        return this._signingKey().publicKey
                    }
                }, {
                    key: "getAddress",
                    value: function() {
                        return Promise.resolve(this.address)
                    }
                }, {
                    key: "connect",
                    value: function(e) {
                        return new t(this, e)
                    }
                }, {
                    key: "signTransaction",
                    value: function(e) {
                        var r = this;
                        return (0, m.resolveProperties)(e).then((function(t) {
                            null != t.from && ((0, c.getAddress)(t.from) !== r.address && R.throwArgumentError("transaction from address mismatch", "transaction.from", e.from), delete t.from);
                            var n = r._signingKey().signDigest((0, g.keccak256)((0, A.serialize)(t)));
                            return (0, A.serialize)(t, n)
                        }))
                    }
                }, {
                    key: "signMessage",
                    value: function(e) {
                        return N(this, void 0, void 0, (0, n.Z)().mark((function r() {
                            return (0, n.Z)().wrap((function(r) {
                                for (;;) switch (r.prev = r.next) {
                                    case 0:
                                        return r.abrupt("return", (0, h.joinSignature)(this._signingKey().signDigest((0, d.r)(e))));
                                    case 1:
                                    case "end":
                                        return r.stop()
                                }
                            }), r, this)
                        })))
                    }
                }, {
                    key: "_signTypedData",
                    value: function(e, r, t) {
                        return N(this, void 0, void 0, (0, n.Z)().mark((function i() {
                            var o, a = this;
                            return (0, n.Z)().wrap((function(n) {
                                for (;;) switch (n.prev = n.next) {
                                    case 0:
                                        return n.next = 2, p.E.resolveNames(e, r, t, (function(e) {
                                            return null == a.provider && R.throwError("cannot resolve ENS names without a provider", k.Logger.errors.UNSUPPORTED_OPERATION, {
                                                operation: "resolveName",
                                                value: e
                                            }), a.provider.resolveName(e)
                                        }));
                                    case 2:
                                        return o = n.sent, n.abrupt("return", (0, h.joinSignature)(this._signingKey().signDigest(p.E.hash(o.domain, r, o.value))));
                                    case 4:
                                    case "end":
                                        return n.stop()
                                }
                            }), i, this)
                        })))
                    }
                }, {
                    key: "encrypt",
                    value: function(e, r, t) {
                        if ("function" !== typeof r || t || (t = r, r = {}), t && "function" !== typeof t) throw new Error("invalid callback");
                        return r || (r = {}), (0, E.HI)(this, e, r, t)
                    }
                }], [{
                    key: "createRandom",
                    value: function(e) {
                        var r = (0, y.O)(16);
                        e || (e = {}), e.extraEntropy && (r = (0, h.arrayify)((0, h.hexDataSlice)((0, g.keccak256)((0, h.concat)([r, e.extraEntropy])), 0, 16)));
                        var n = (0, v.entropyToMnemonic)(r, e.locale);
                        return t.fromMnemonic(n, e.path, e.locale)
                    }
                }, {
                    key: "fromEncryptedJson",
                    value: function(e, r, n) {
                        return (0, w.decryptJsonWallet)(e, r, n).then((function(e) {
                            return new t(e)
                        }))
                    }
                }, {
                    key: "fromEncryptedJsonSync",
                    value: function(e, r) {
                        return new t((0, w.decryptJsonWalletSync)(e, r))
                    }
                }, {
                    key: "fromMnemonic",
                    value: function(e, r, n) {
                        return r || (r = v.defaultPath), new t(v.HDNode.fromMnemonic(e, null, n).derivePath(r))
                    }
                }]), t
            }(l.E);

            function I(e, r) {
                return (0, A.recoverAddress)((0, d.r)(e), r)
            }

            function P(e, r, t, n) {
                return (0, A.recoverAddress)(p.E.hash(e, r, t), n)
            }
        },
        16819: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                _fetchData: function() {
                    return v
                },
                fetchJson: function() {
                    return g
                },
                poll: function() {
                    return m
                }
            });
            var n = t(27166),
                i = t(38531),
                o = t(53237),
                a = t(87549),
                s = t(9759),
                u = t(79094),
                c = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                };

            function f(e, r) {
                return c(this, void 0, void 0, (0, n.Z)().mark((function t() {
                    var i, a, s, u, c;
                    return (0, n.Z)().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return null == r && (r = {}), i = {
                                    method: r.method || "GET",
                                    headers: r.headers || {},
                                    body: r.body || void 0
                                }, !0 !== r.skipFetchSetup && (i.mode = "cors", i.cache = "no-cache", i.credentials = "same-origin", i.redirect = "follow", i.referrer = "client"), null != r.fetchOptions && ((a = r.fetchOptions).mode && (i.mode = a.mode), a.cache && (i.cache = a.cache), a.credentials && (i.credentials = a.credentials), a.redirect && (i.redirect = a.redirect), a.referrer && (i.referrer = a.referrer)), t.next = 7, fetch(e, i);
                            case 7:
                                return s = t.sent, t.next = 10, s.arrayBuffer();
                            case 10:
                                return u = t.sent, c = {}, s.headers.forEach ? s.headers.forEach((function(e, r) {
                                    c[r.toLowerCase()] = e
                                })) : s.headers.keys().forEach((function(e) {
                                    c[e.toLowerCase()] = s.headers.get(e)
                                })), t.abrupt("return", {
                                    headers: c,
                                    statusCode: s.status,
                                    statusMessage: s.statusText,
                                    body: (0, o.arrayify)(new Uint8Array(u))
                                });
                            case 14:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))
            }
            var l = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                h = new u.Logger("web/5.7.1");

            function d(e) {
                return new Promise((function(r) {
                    setTimeout(r, e)
                }))
            }

            function p(e, r) {
                if (null == e) return null;
                if ("string" === typeof e) return e;
                if ((0, o.isBytesLike)(e)) {
                    if (r && ("text" === r.split("/")[0] || "application/json" === r.split(";")[0].trim())) try {
                        return (0, s.ZN)(e)
                    } catch (t) {}
                    return (0, o.hexlify)(e)
                }
                return e
            }

            function v(e, r, t) {
                var o = "object" === typeof e && null != e.throttleLimit ? e.throttleLimit : 12;
                h.assertArgument(o > 0 && o % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", o);
                var c = "object" === typeof e ? e.throttleCallback : null,
                    v = "object" === typeof e && "number" === typeof e.throttleSlotInterval ? e.throttleSlotInterval : 100;
                h.assertArgument(v > 0 && v % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", v);
                var g = "object" === typeof e && !!e.errorPassThrough,
                    m = {},
                    y = null,
                    b = {
                        method: "GET"
                    },
                    E = !1,
                    w = 12e4;
                if ("string" === typeof e) y = e;
                else if ("object" === typeof e) {
                    if (null != e && null != e.url || h.throwArgumentError("missing URL", "connection.url", e), y = e.url, "number" === typeof e.timeout && e.timeout > 0 && (w = e.timeout), e.headers)
                        for (var A in e.headers) m[A.toLowerCase()] = {
                            key: A,
                            value: String(e.headers[A])
                        }, ["if-none-match", "if-modified-since"].indexOf(A.toLowerCase()) >= 0 && (E = !0);
                    if (b.allowGzip = !!e.allowGzip, null != e.user && null != e.password) {
                        "https:" !== y.substring(0, 6) && !0 !== e.allowInsecureAuthentication && h.throwError("basic authentication requires a secure https url", u.Logger.errors.INVALID_ARGUMENT, {
                            argument: "url",
                            url: y,
                            user: e.user,
                            password: "[REDACTED]"
                        });
                        var k = e.user + ":" + e.password;
                        m.authorization = {
                            key: "Authorization",
                            value: "Basic " + (0, i.c)((0, s.Y0)(k))
                        }
                    }
                    null != e.skipFetchSetup && (b.skipFetchSetup = !!e.skipFetchSetup), null != e.fetchOptions && (b.fetchOptions = (0, a.shallowCopy)(e.fetchOptions))
                }
                var N, R = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"),
                    x = y ? y.match(R) : null;
                if (x) try {
                    var I = {
                            statusCode: 200,
                            statusMessage: "OK",
                            headers: {
                                "content-type": x[1] || "text/plain"
                            },
                            body: x[2] ? (0, i.J)(x[3]) : (N = x[3], (0, s.Y0)(N.replace(/%([0-9a-f][0-9a-f])/gi, (function(e, r) {
                                return String.fromCharCode(parseInt(r, 16))
                            }))))
                        },
                        P = I.body;
                    return t && (P = t(I.body, I)), Promise.resolve(P)
                } catch (O) {
                    h.throwError("processing response error", u.Logger.errors.SERVER_ERROR, {
                        body: p(x[1], x[2]),
                        error: O,
                        requestBody: null,
                        requestMethod: "GET",
                        url: y
                    })
                }
                r && (b.method = "POST", b.body = r, null == m["content-type"] && (m["content-type"] = {
                    key: "Content-Type",
                    value: "application/octet-stream"
                }), null == m["content-length"] && (m["content-length"] = {
                    key: "Content-Length",
                    value: String(r.length)
                }));
                var S = {};
                Object.keys(m).forEach((function(e) {
                    var r = m[e];
                    S[r.key] = r.value
                })), b.headers = S;
                var _ = function() {
                        var e = null;
                        return {
                            promise: new Promise((function(r, t) {
                                w && (e = setTimeout((function() {
                                    null != e && (e = null, t(h.makeError("timeout", u.Logger.errors.TIMEOUT, {
                                        requestBody: p(b.body, S["content-type"]),
                                        requestMethod: b.method,
                                        timeout: w,
                                        url: y
                                    })))
                                }), w))
                            })),
                            cancel: function() {
                                null != e && (clearTimeout(e), e = null)
                            }
                        }
                    }(),
                    T = function() {
                        return l(this, void 0, void 0, (0, n.Z)().mark((function e() {
                            var r, i, a, s, l, m, w, A, k, N;
                            return (0, n.Z)().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        r = 0;
                                    case 1:
                                        if (!(r < o)) {
                                            e.next = 65;
                                            break
                                        }
                                        return i = null, e.prev = 3, e.next = 6, f(y, b);
                                    case 6:
                                        if (i = e.sent, !(r < o)) {
                                            e.next = 28;
                                            break
                                        }
                                        if (301 !== i.statusCode && 302 !== i.statusCode) {
                                            e.next = 15;
                                            break
                                        }
                                        if (a = i.headers.location || "", "GET" !== b.method || !a.match(/^https:/)) {
                                            e.next = 13;
                                            break
                                        }
                                        return y = i.headers.location, e.abrupt("continue", 62);
                                    case 13:
                                        e.next = 28;
                                        break;
                                    case 15:
                                        if (429 !== i.statusCode) {
                                            e.next = 28;
                                            break
                                        }
                                        if (s = !0, !c) {
                                            e.next = 21;
                                            break
                                        }
                                        return e.next = 20, c(r, y);
                                    case 20:
                                        s = e.sent;
                                    case 21:
                                        if (!s) {
                                            e.next = 28;
                                            break
                                        }
                                        return l = 0, m = i.headers["retry-after"], l = "string" === typeof m && m.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(m) : v * parseInt(String(Math.random() * Math.pow(2, r))), e.next = 27, d(l);
                                    case 27:
                                        return e.abrupt("continue", 62);
                                    case 28:
                                        e.next = 34;
                                        break;
                                    case 30:
                                        e.prev = 30, e.t0 = e.catch(3), null == (i = e.t0.response) && (_.cancel(), h.throwError("missing response", u.Logger.errors.SERVER_ERROR, {
                                            requestBody: p(b.body, S["content-type"]),
                                            requestMethod: b.method,
                                            serverError: e.t0,
                                            url: y
                                        }));
                                    case 34:
                                        if (w = i.body, E && 304 === i.statusCode ? w = null : !g && (i.statusCode < 200 || i.statusCode >= 300) && (_.cancel(), h.throwError("bad response", u.Logger.errors.SERVER_ERROR, {
                                                status: i.statusCode,
                                                headers: i.headers,
                                                body: p(w, i.headers ? i.headers["content-type"] : null),
                                                requestBody: p(b.body, S["content-type"]),
                                                requestMethod: b.method,
                                                url: y
                                            })), !t) {
                                            e.next = 60;
                                            break
                                        }
                                        return e.prev = 37, e.next = 40, t(w, i);
                                    case 40:
                                        return A = e.sent, _.cancel(), e.abrupt("return", A);
                                    case 45:
                                        if (e.prev = 45, e.t1 = e.catch(37), !(e.t1.throttleRetry && r < o)) {
                                            e.next = 58;
                                            break
                                        }
                                        if (k = !0, !c) {
                                            e.next = 53;
                                            break
                                        }
                                        return e.next = 52, c(r, y);
                                    case 52:
                                        k = e.sent;
                                    case 53:
                                        if (!k) {
                                            e.next = 58;
                                            break
                                        }
                                        return N = v * parseInt(String(Math.random() * Math.pow(2, r))), e.next = 57, d(N);
                                    case 57:
                                        return e.abrupt("continue", 62);
                                    case 58:
                                        _.cancel(), h.throwError("processing response error", u.Logger.errors.SERVER_ERROR, {
                                            body: p(w, i.headers ? i.headers["content-type"] : null),
                                            error: e.t1,
                                            requestBody: p(b.body, S["content-type"]),
                                            requestMethod: b.method,
                                            url: y
                                        });
                                    case 60:
                                        return _.cancel(), e.abrupt("return", w);
                                    case 62:
                                        r++, e.next = 1;
                                        break;
                                    case 65:
                                        return e.abrupt("return", h.throwError("failed response", u.Logger.errors.SERVER_ERROR, {
                                            requestBody: p(b.body, S["content-type"]),
                                            requestMethod: b.method,
                                            url: y
                                        }));
                                    case 66:
                                    case "end":
                                        return e.stop()
                                }
                            }), e, null, [
                                [3, 30],
                                [37, 45]
                            ])
                        })))
                    }();
                return Promise.race([_.promise, T])
            }

            function g(e, r, t) {
                var n = null;
                if (null != r) {
                    n = (0, s.Y0)(r);
                    var i = "string" === typeof e ? {
                        url: e
                    } : (0, a.shallowCopy)(e);
                    if (i.headers) 0 !== Object.keys(i.headers).filter((function(e) {
                        return "content-type" === e.toLowerCase()
                    })).length || (i.headers = (0, a.shallowCopy)(i.headers), i.headers["content-type"] = "application/json");
                    else i.headers = {
                        "content-type": "application/json"
                    };
                    e = i
                }
                return v(e, n, (function(e, r) {
                    var n = null;
                    if (null != e) try {
                        n = JSON.parse((0, s.ZN)(e))
                    } catch (i) {
                        h.throwError("invalid JSON", u.Logger.errors.SERVER_ERROR, {
                            body: e,
                            error: i
                        })
                    }
                    return t && (n = t(n, r)), n
                }))
            }

            function m(e, r) {
                return r || (r = {}), null == (r = (0, a.shallowCopy)(r)).floor && (r.floor = 0), null == r.ceiling && (r.ceiling = 1e4), null == r.interval && (r.interval = 250), new Promise((function(t, n) {
                    var i = null,
                        o = !1,
                        a = function() {
                            return !o && (o = !0, i && clearTimeout(i), !0)
                        };
                    r.timeout && (i = setTimeout((function() {
                        a() && n(new Error("timeout"))
                    }), r.timeout));
                    var s = r.retryLimit,
                        u = 0;
                    ! function i() {
                        return e().then((function(e) {
                            if (void 0 !== e) a() && t(e);
                            else if (r.oncePoll) r.oncePoll.once("poll", i);
                            else if (r.onceBlock) r.onceBlock.once("block", i);
                            else if (!o) {
                                if (++u > s) return void(a() && n(new Error("retry limit reached")));
                                var c = r.interval * parseInt(String(Math.random() * Math.pow(2, u)));
                                c < r.floor && (c = r.floor), c > r.ceiling && (c = r.ceiling), setTimeout(i, c)
                            }
                            return null
                        }), (function(e) {
                            a() && n(e)
                        }))
                    }()
                }))
            }
        },
        85734: function(e, r, t) {
            "use strict";
            t.d(r, {
                D: function() {
                    return c
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(16939),
                a = t(87549),
                s = t(79094),
                u = new s.Logger("wordlists/5.6.1"),
                c = function() {
                    function e(r) {
                        (0, n.Z)(this, e), u.checkAbstract(this instanceof e ? this.constructor : void 0, e), (0, a.defineReadOnly)(this, "locale", r)
                    }
                    return (0, i.Z)(e, [{
                        key: "split",
                        value: function(e) {
                            return e.toLowerCase().split(/ +/g)
                        }
                    }, {
                        key: "join",
                        value: function(e) {
                            return e.join(" ")
                        }
                    }], [{
                        key: "check",
                        value: function(e) {
                            for (var r = [], t = 0; t < 2048; t++) {
                                var n = e.getWord(t);
                                if (t !== e.getWordIndex(n)) return "0x";
                                r.push(n)
                            }
                            return (0, o.id)(r.join("\n") + "\n")
                        }
                    }, {
                        key: "register",
                        value: function(e, r) {
                            r || (r = e.locale)
                        }
                    }]), e
                }()
        },
        80896: function(e, r, t) {
            "use strict";
            t.d(r, {
                E: function() {
                    return l
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(81020),
                a = t(18992),
                s = t(85734),
                u = null;

            function c(e) {
                if (null == u && (u = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60" !== s.D.check(e))) throw u = null, new Error("BIP39 Wordlist for en (English) FAILED")
            }
            var f = new(function(e) {
                (0, o.Z)(t, e);
                var r = (0, a.Z)(t);

                function t() {
                    return (0, n.Z)(this, t), r.call(this, "en")
                }
                return (0, i.Z)(t, [{
                    key: "getWord",
                    value: function(e) {
                        return c(this), u[e]
                    }
                }, {
                    key: "getWordIndex",
                    value: function(e) {
                        return c(this), u.indexOf(e)
                    }
                }]), t
            }(s.D));
            s.D.register(f);
            var l = {
                en: f
            }
        },
        41157: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                BaseContract: function() {
                    return a.VZ
                },
                BigNumber: function() {
                    return s.O$
                },
                Contract: function() {
                    return a.CH
                },
                ContractFactory: function() {
                    return a.lV
                },
                FixedNumber: function() {
                    return k
                },
                Signer: function() {
                    return W
                },
                VoidSigner: function() {
                    return V
                },
                Wallet: function() {
                    return J.Wallet
                },
                Wordlist: function() {
                    return Me.D
                },
                constants: function() {
                    return n
                },
                errors: function() {
                    return er.ErrorCode
                },
                ethers: function() {
                    return o
                },
                getDefaultProvider: function() {
                    return Fe.getDefaultProvider
                },
                logger: function() {
                    return gr
                },
                providers: function() {
                    return Fe
                },
                utils: function() {
                    return i
                },
                version: function() {
                    return vr
                },
                wordlists: function() {
                    return De.E
                }
            });
            var n = {};
            t.r(n), t.d(n, {
                AddressZero: function() {
                    return X
                },
                EtherSymbol: function() {
                    return Le
                },
                HashZero: function() {
                    return Ue
                },
                MaxInt256: function() {
                    return Ce
                },
                MaxUint256: function() {
                    return Te
                },
                MinInt256: function() {
                    return Oe
                },
                NegativeOne: function() {
                    return xe
                },
                One: function() {
                    return Pe
                },
                Two: function() {
                    return Se
                },
                WeiPerEther: function() {
                    return _e
                },
                Zero: function() {
                    return Ie
                }
            });
            var i = {};
            t.r(i), t.d(i, {
                AbiCoder: function() {
                    return Be.R
                },
                ConstructorFragment: function() {
                    return Ge.Xg
                },
                ErrorFragment: function() {
                    return Ge.IC
                },
                EventFragment: function() {
                    return Ge.QV
                },
                FormatTypes: function() {
                    return Ge.pc
                },
                Fragment: function() {
                    return Ge.HY
                },
                FunctionFragment: function() {
                    return Ge.YW
                },
                HDNode: function() {
                    return Qe.HDNode
                },
                Indexed: function() {
                    return je.Hk
                },
                Interface: function() {
                    return je.vU
                },
                LogDescription: function() {
                    return je.CC
                },
                Logger: function() {
                    return er.Logger
                },
                ParamType: function() {
                    return Ge._R
                },
                RLP: function() {
                    return ar
                },
                SigningKey: function() {
                    return sr.SigningKey
                },
                SupportedAlgorithm: function() {
                    return pr.p
                },
                TransactionDescription: function() {
                    return je.vk
                },
                TransactionTypes: function() {
                    return lr.TransactionTypes
                },
                UnicodeNormalizationForm: function() {
                    return cr.Uj
                },
                Utf8ErrorFuncs: function() {
                    return cr.te
                },
                Utf8ErrorReason: function() {
                    return cr.Uw
                },
                _TypedDataEncoder: function() {
                    return Xe.E
                },
                _fetchData: function() {
                    return dr._fetchData
                },
                _toEscapedUtf8String: function() {
                    return cr.U$
                },
                accessListify: function() {
                    return lr.accessListify
                },
                arrayify: function() {
                    return He.arrayify
                },
                base58: function() {
                    return qe.Base58
                },
                base64: function() {
                    return ze
                },
                checkProperties: function() {
                    return or.checkProperties
                },
                checkResultErrors: function() {
                    return Ze.BR
                },
                commify: function() {
                    return hr.commify
                },
                computeAddress: function() {
                    return lr.computeAddress
                },
                computeHmac: function() {
                    return rr.Gy
                },
                computePublicKey: function() {
                    return sr.computePublicKey
                },
                concat: function() {
                    return He.concat
                },
                deepCopy: function() {
                    return or.deepCopy
                },
                defaultAbiCoder: function() {
                    return Be.$
                },
                defaultPath: function() {
                    return Qe.defaultPath
                },
                defineReadOnly: function() {
                    return or.defineReadOnly
                },
                dnsEncode: function() {
                    return We.Kn
                },
                entropyToMnemonic: function() {
                    return Qe.entropyToMnemonic
                },
                fetchJson: function() {
                    return dr.fetchJson
                },
                formatBytes32String: function() {
                    return fr.s
                },
                formatEther: function() {
                    return hr.formatEther
                },
                formatUnits: function() {
                    return hr.formatUnits
                },
                getAccountPath: function() {
                    return Qe.getAccountPath
                },
                getAddress: function() {
                    return Ke.getAddress
                },
                getContractAddress: function() {
                    return Ke.getContractAddress
                },
                getCreate2Address: function() {
                    return Ke.getCreate2Address
                },
                getIcapAddress: function() {
                    return Ke.getIcapAddress
                },
                getJsonWalletAddress: function() {
                    return Ye.Rb
                },
                getStatic: function() {
                    return or.getStatic
                },
                hashMessage: function() {
                    return Ve.r
                },
                hexConcat: function() {
                    return He.hexConcat
                },
                hexDataLength: function() {
                    return He.hexDataLength
                },
                hexDataSlice: function() {
                    return He.hexDataSlice
                },
                hexStripZeros: function() {
                    return He.hexStripZeros
                },
                hexValue: function() {
                    return He.hexValue
                },
                hexZeroPad: function() {
                    return He.hexZeroPad
                },
                hexlify: function() {
                    return He.hexlify
                },
                id: function() {
                    return Je.id
                },
                isAddress: function() {
                    return Ke.isAddress
                },
                isBytes: function() {
                    return He.isBytes
                },
                isBytesLike: function() {
                    return He.isBytesLike
                },
                isHexString: function() {
                    return He.isHexString
                },
                isValidMnemonic: function() {
                    return Qe.isValidMnemonic
                },
                isValidName: function() {
                    return We.r1
                },
                joinSignature: function() {
                    return He.joinSignature
                },
                keccak256: function() {
                    return $e.keccak256
                },
                mnemonicToEntropy: function() {
                    return Qe.mnemonicToEntropy
                },
                mnemonicToSeed: function() {
                    return Qe.mnemonicToSeed
                },
                namehash: function() {
                    return We.VM
                },
                nameprep: function() {
                    return ur.Ll
                },
                parseBytes32String: function() {
                    return fr.F
                },
                parseEther: function() {
                    return hr.parseEther
                },
                parseTransaction: function() {
                    return lr.parse
                },
                parseUnits: function() {
                    return hr.parseUnits
                },
                poll: function() {
                    return dr.poll
                },
                randomBytes: function() {
                    return nr.O
                },
                recoverAddress: function() {
                    return lr.recoverAddress
                },
                recoverPublicKey: function() {
                    return sr.recoverPublicKey
                },
                resolveProperties: function() {
                    return or.resolveProperties
                },
                ripemd160: function() {
                    return rr.bP
                },
                serializeTransaction: function() {
                    return lr.serialize
                },
                sha256: function() {
                    return rr.JQ
                },
                sha512: function() {
                    return rr.o
                },
                shallowCopy: function() {
                    return or.shallowCopy
                },
                shuffled: function() {
                    return ir.y
                },
                solidityKeccak256: function() {
                    return tr.keccak256
                },
                solidityPack: function() {
                    return tr.pack
                },
                soliditySha256: function() {
                    return tr.sha256
                },
                splitSignature: function() {
                    return He.splitSignature
                },
                stripZeros: function() {
                    return He.stripZeros
                },
                toUtf8Bytes: function() {
                    return cr.Y0
                },
                toUtf8CodePoints: function() {
                    return cr.XL
                },
                toUtf8String: function() {
                    return cr.ZN
                },
                verifyMessage: function() {
                    return J.verifyMessage
                },
                verifyTypedData: function() {
                    return J.verifyTypedData
                },
                zeroPad: function() {
                    return He.zeroPad
                }
            });
            var o = {};
            t.r(o), t.d(o, {
                BaseContract: function() {
                    return a.VZ
                },
                BigNumber: function() {
                    return s.O$
                },
                Contract: function() {
                    return a.CH
                },
                ContractFactory: function() {
                    return a.lV
                },
                FixedNumber: function() {
                    return k
                },
                Signer: function() {
                    return W
                },
                VoidSigner: function() {
                    return V
                },
                Wallet: function() {
                    return J.Wallet
                },
                Wordlist: function() {
                    return Me.D
                },
                constants: function() {
                    return n
                },
                errors: function() {
                    return er.ErrorCode
                },
                getDefaultProvider: function() {
                    return Fe.getDefaultProvider
                },
                logger: function() {
                    return gr
                },
                providers: function() {
                    return Fe
                },
                utils: function() {
                    return i
                },
                version: function() {
                    return vr
                },
                wordlists: function() {
                    return De.E
                }
            });
            var a = t(739),
                s = t(56986),
                u = t(27853),
                c = t(84531),
                f = t(21331),
                l = t(80425),
                h = t(16528),
                d = new l.Yd(h.i),
                p = {},
                v = s.O$.from(0),
                g = s.O$.from(-1);

            function m(e, r, t, n) {
                var i = {
                    fault: r,
                    operation: t
                };
                return void 0 !== n && (i.value = n), d.throwError(e, l.Yd.errors.NUMERIC_FAULT, i)
            }
            for (var y = "0"; y.length < 256;) y += y;

            function b(e) {
                if ("number" !== typeof e) try {
                    e = s.O$.from(e).toNumber()
                } catch (r) {}
                return "number" === typeof e && e >= 0 && e <= 256 && !(e % 1) ? "1" + y.substring(0, e) : d.throwArgumentError("invalid decimal size", "decimals", e)
            }

            function E(e, r) {
                null == r && (r = 0);
                var t = b(r),
                    n = (e = s.O$.from(e)).lt(v);
                n && (e = e.mul(g));
                for (var i = e.mod(t).toString(); i.length < t.length - 1;) i = "0" + i;
                i = i.match(/^([0-9]*[1-9]|0)(0*)/)[1];
                var o = e.div(t).toString();
                return e = 1 === t.length ? o : o + "." + i, n && (e = "-" + e), e
            }

            function w(e, r) {
                null == r && (r = 0);
                var t = b(r);
                "string" === typeof e && e.match(/^-?[0-9.]+$/) || d.throwArgumentError("invalid decimal value", "value", e);
                var n = "-" === e.substring(0, 1);
                n && (e = e.substring(1)), "." === e && d.throwArgumentError("missing value", "value", e);
                var i = e.split(".");
                i.length > 2 && d.throwArgumentError("too many decimal points", "value", e);
                var o = i[0],
                    a = i[1];
                for (o || (o = "0"), a || (a = "0");
                    "0" === a[a.length - 1];) a = a.substring(0, a.length - 1);
                for (a.length > t.length - 1 && m("fractional component exceeds decimals", "underflow", "parseFixed"), "" === a && (a = "0"); a.length < t.length - 1;) a += "0";
                var u = s.O$.from(o),
                    c = s.O$.from(a),
                    f = u.mul(t).add(c);
                return n && (f = f.mul(g)), f
            }
            var A = function() {
                    function e(r, t, n, i) {
                        (0, u.Z)(this, e), r !== p && d.throwError("cannot use FixedFormat constructor; use FixedFormat.from", l.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "new FixedFormat"
                        }), this.signed = t, this.width = n, this.decimals = i, this.name = (t ? "" : "u") + "fixed" + String(n) + "x" + String(i), this._multiplier = b(i), Object.freeze(this)
                    }
                    return (0, c.Z)(e, null, [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            "number" === typeof r && (r = "fixed128x".concat(r));
                            var t = !0,
                                n = 128,
                                i = 18;
                            if ("string" === typeof r)
                                if ("fixed" === r);
                                else if ("ufixed" === r) t = !1;
                            else {
                                var o = r.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                                o || d.throwArgumentError("invalid fixed format", "format", r), t = "u" !== o[1], n = parseInt(o[2]), i = parseInt(o[3])
                            } else if (r) {
                                var a = function(e, t, n) {
                                    return null == r[e] ? n : (typeof r[e] !== t && d.throwArgumentError("invalid fixed format (" + e + " not " + t + ")", "format." + e, r[e]), r[e])
                                };
                                t = a("signed", "boolean", t), n = a("width", "number", n), i = a("decimals", "number", i)
                            }
                            return n % 8 && d.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", n), i > 80 && d.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", i), new e(p, t, n, i)
                        }
                    }]), e
                }(),
                k = function() {
                    function e(r, t, n, i) {
                        (0, u.Z)(this, e), r !== p && d.throwError("cannot use FixedNumber constructor; use FixedNumber.from", l.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "new FixedFormat"
                        }), this.format = i, this._hex = t, this._value = n, this._isFixedNumber = !0, Object.freeze(this)
                    }
                    return (0, c.Z)(e, [{
                        key: "_checkFormat",
                        value: function(e) {
                            this.format.name !== e.format.name && d.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", e)
                        }
                    }, {
                        key: "addUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = w(this._value, this.format.decimals),
                                n = w(r._value, r.format.decimals);
                            return e.fromValue(t.add(n), this.format.decimals, this.format)
                        }
                    }, {
                        key: "subUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = w(this._value, this.format.decimals),
                                n = w(r._value, r.format.decimals);
                            return e.fromValue(t.sub(n), this.format.decimals, this.format)
                        }
                    }, {
                        key: "mulUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = w(this._value, this.format.decimals),
                                n = w(r._value, r.format.decimals);
                            return e.fromValue(t.mul(n).div(this.format._multiplier), this.format.decimals, this.format)
                        }
                    }, {
                        key: "divUnsafe",
                        value: function(r) {
                            this._checkFormat(r);
                            var t = w(this._value, this.format.decimals),
                                n = w(r._value, r.format.decimals);
                            return e.fromValue(t.mul(this.format._multiplier).div(n), this.format.decimals, this.format)
                        }
                    }, {
                        key: "floor",
                        value: function() {
                            var r = this.toString().split(".");
                            1 === r.length && r.push("0");
                            var t = e.from(r[0], this.format),
                                n = !r[1].match(/^(0*)$/);
                            return this.isNegative() && n && (t = t.subUnsafe(N.toFormat(t.format))), t
                        }
                    }, {
                        key: "ceiling",
                        value: function() {
                            var r = this.toString().split(".");
                            1 === r.length && r.push("0");
                            var t = e.from(r[0], this.format),
                                n = !r[1].match(/^(0*)$/);
                            return !this.isNegative() && n && (t = t.addUnsafe(N.toFormat(t.format))), t
                        }
                    }, {
                        key: "round",
                        value: function(r) {
                            null == r && (r = 0);
                            var t = this.toString().split(".");
                            if (1 === t.length && t.push("0"), (r < 0 || r > 80 || r % 1) && d.throwArgumentError("invalid decimal count", "decimals", r), t[1].length <= r) return this;
                            var n = e.from("1" + y.substring(0, r), this.format),
                                i = R.toFormat(this.format);
                            return this.mulUnsafe(n).addUnsafe(i).floor().divUnsafe(n)
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return "0.0" === this._value || "0" === this._value
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._value[0]
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return this._value
                        }
                    }, {
                        key: "toHexString",
                        value: function(e) {
                            if (null == e) return this._hex;
                            e % 8 && d.throwArgumentError("invalid byte width", "width", e);
                            var r = s.O$.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();
                            return (0, f.$m)(r, e / 8)
                        }
                    }, {
                        key: "toUnsafeFloat",
                        value: function() {
                            return parseFloat(this.toString())
                        }
                    }, {
                        key: "toFormat",
                        value: function(r) {
                            return e.fromString(this._value, r)
                        }
                    }], [{
                        key: "fromValue",
                        value: function(r, t, n) {
                            return null != n || null == t || (0, s.Zm)(t) || (n = t, t = null), null == t && (t = 0), null == n && (n = "fixed"), e.fromString(E(r, t), A.from(n))
                        }
                    }, {
                        key: "fromString",
                        value: function(r, t) {
                            null == t && (t = "fixed");
                            var n = A.from(t),
                                i = w(r, n.decimals);
                            !n.signed && i.lt(v) && m("unsigned value cannot be negative", "overflow", "value", r);
                            var o = null;
                            n.signed ? o = i.toTwos(n.width).toHexString() : (o = i.toHexString(), o = (0, f.$m)(o, n.width / 8));
                            var a = E(i, n.decimals);
                            return new e(p, o, a, n)
                        }
                    }, {
                        key: "fromBytes",
                        value: function(r, t) {
                            null == t && (t = "fixed");
                            var n = A.from(t);
                            if ((0, f.lE)(r).length > n.width / 8) throw new Error("overflow");
                            var i = s.O$.from(r);
                            n.signed && (i = i.fromTwos(n.width));
                            var o = i.toTwos((n.signed ? 0 : 1) + n.width).toHexString(),
                                a = E(i, n.decimals);
                            return new e(p, o, a, n)
                        }
                    }, {
                        key: "from",
                        value: function(r, t) {
                            if ("string" === typeof r) return e.fromString(r, t);
                            if ((0, f._t)(r)) return e.fromBytes(r, t);
                            try {
                                return e.fromValue(r, 0, t)
                            } catch (n) {
                                if (n.code !== l.Yd.errors.INVALID_ARGUMENT) throw n
                            }
                            return d.throwArgumentError("invalid FixedNumber value", "value", r)
                        }
                    }, {
                        key: "isFixedNumber",
                        value: function(e) {
                            return !(!e || !e._isFixedNumber)
                        }
                    }]), e
                }(),
                N = k.from(1),
                R = k.from("0.5"),
                x = t(6148),
                I = t(81020),
                P = t(18992),
                S = t(27166),
                _ = !1,
                T = !1,
                O = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                C = O.default,
                U = null;
            var L, F, D = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(L || (L = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(F || (F = {}));
            var M = "0123456789abcdef",
                B = function() {
                    function e(r) {
                        (0, u.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, c.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == O[t] && this.throwArgumentError("invalid log level name", "logLevel", e), C > O[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (T) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += M[r[o] >> 4], t += M[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (u) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case F.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var s = r;
                                    switch (s) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + s;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case F.CALL_EXCEPTION:
                                case F.INSUFFICIENT_FUNDS:
                                case F.MISSING_NEW:
                                case F.NONCE_EXPIRED:
                                case F.REPLACEMENT_UNDERPRICED:
                                case F.TRANSACTION_REPLACED:
                                case F.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var u = new Error(r);
                            return u.reason = o, u.code = t, Object.keys(n).forEach((function(e) {
                                u[e] = n[e]
                            })), u
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), D && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: D
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return U || (U = new e("logger/5.7.0")), U
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), _) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            T = !!r, _ = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = O[r.toLowerCase()];
                            null != t ? C = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            B.errors = F, B.levels = L;
            var G = function(e, r, t, n) {
                return new(t || (t = Promise))((function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (r) {
                            o(r)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (r) {
                            o(r)
                        }
                    }

                    function u(e) {
                        var r;
                        e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                            e(r)
                        }))).then(a, s)
                    }
                    u((n = n.apply(e, r || [])).next())
                }))
            };
            new B("properties/5.7.0");

            function Z(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }

            function j(e) {
                return G(this, void 0, void 0, (0, S.Z)().mark((function r() {
                    var t, n;
                    return (0, S.Z)().wrap((function(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return t = Object.keys(e).map((function(r) {
                                    var t = e[r];
                                    return Promise.resolve(t).then((function(e) {
                                        return {
                                            key: r,
                                            value: e
                                        }
                                    }))
                                })), r.next = 3, Promise.all(t);
                            case 3:
                                return n = r.sent, r.abrupt("return", n.reduce((function(e, r) {
                                    return e[r.key] = r.value, e
                                }), {}));
                            case 5:
                            case "end":
                                return r.stop()
                        }
                    }), r)
                })))
            }
            var K = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                z = new B("abstract-signer/5.6.2"),
                q = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                H = [B.errors.INSUFFICIENT_FUNDS, B.errors.NONCE_EXPIRED, B.errors.REPLACEMENT_UNDERPRICED],
                W = function() {
                    function e() {
                        (0, u.Z)(this, e), z.checkAbstract(this instanceof e ? this.constructor : void 0, e), Z(this, "_isSigner", !0)
                    }
                    return (0, c.Z)(e, [{
                        key: "getBalance",
                        value: function(e) {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function r() {
                                return (0, S.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("getBalance"), r.next = 3, this.provider.getBalance(this.getAddress(), e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getTransactionCount",
                        value: function(e) {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function r() {
                                return (0, S.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("getTransactionCount"), r.next = 3, this.provider.getTransactionCount(this.getAddress(), e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "estimateGas",
                        value: function(e) {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function r() {
                                var t;
                                return (0, S.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("estimateGas"), r.next = 3, j(this.checkTransaction(e));
                                        case 3:
                                            return t = r.sent, r.next = 6, this.provider.estimateGas(t);
                                        case 6:
                                            return r.abrupt("return", r.sent);
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "call",
                        value: function(e, r) {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function t() {
                                var n;
                                return (0, S.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return this._checkProvider("call"), t.next = 3, j(this.checkTransaction(e));
                                        case 3:
                                            return n = t.sent, t.next = 6, this.provider.call(n, r);
                                        case 6:
                                            return t.abrupt("return", t.sent);
                                        case 7:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }, {
                        key: "sendTransaction",
                        value: function(e) {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function r() {
                                var t, n;
                                return (0, S.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("sendTransaction"), r.next = 3, this.populateTransaction(e);
                                        case 3:
                                            return t = r.sent, r.next = 6, this.signTransaction(t);
                                        case 6:
                                            return n = r.sent, r.next = 9, this.provider.sendTransaction(n);
                                        case 9:
                                            return r.abrupt("return", r.sent);
                                        case 10:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getChainId",
                        value: function() {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function e() {
                                var r;
                                return (0, S.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getChainId"), e.next = 3, this.provider.getNetwork();
                                        case 3:
                                            return r = e.sent, e.abrupt("return", r.chainId);
                                        case 5:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getGasPrice",
                        value: function() {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function e() {
                                return (0, S.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getGasPrice"), e.next = 3, this.provider.getGasPrice();
                                        case 3:
                                            return e.abrupt("return", e.sent);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getFeeData",
                        value: function() {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function e() {
                                return (0, S.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getFeeData"), e.next = 3, this.provider.getFeeData();
                                        case 3:
                                            return e.abrupt("return", e.sent);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "resolveName",
                        value: function(e) {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function r() {
                                return (0, S.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("resolveName"), r.next = 3, this.provider.resolveName(e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "checkTransaction",
                        value: function(e) {
                            for (var r in e) - 1 === q.indexOf(r) && z.throwArgumentError("invalid transaction key: " + r, "transaction", e);
                            var t = function(e) {
                                var r = {};
                                for (var t in e) r[t] = e[t];
                                return r
                            }(e);
                            return null == t.from ? t.from = this.getAddress() : t.from = Promise.all([Promise.resolve(t.from), this.getAddress()]).then((function(r) {
                                return r[0].toLowerCase() !== r[1].toLowerCase() && z.throwArgumentError("from address mismatch", "transaction", e), r[0]
                            })), t
                        }
                    }, {
                        key: "populateTransaction",
                        value: function(e) {
                            return K(this, void 0, void 0, (0, S.Z)().mark((function r() {
                                var t, n, i, o, a = this;
                                return (0, S.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, j(this.checkTransaction(e));
                                        case 2:
                                            if (null != (t = r.sent).to && (t.to = Promise.resolve(t.to).then((function(e) {
                                                    return K(a, void 0, void 0, (0, S.Z)().mark((function r() {
                                                        var t;
                                                        return (0, S.Z)().wrap((function(r) {
                                                            for (;;) switch (r.prev = r.next) {
                                                                case 0:
                                                                    if (null != e) {
                                                                        r.next = 2;
                                                                        break
                                                                    }
                                                                    return r.abrupt("return", null);
                                                                case 2:
                                                                    return r.next = 4, this.resolveName(e);
                                                                case 4:
                                                                    return null == (t = r.sent) && z.throwArgumentError("provided ENS name resolves to null", "tx.to", e), r.abrupt("return", t);
                                                                case 7:
                                                                case "end":
                                                                    return r.stop()
                                                            }
                                                        }), r, this)
                                                    })))
                                                })), t.to.catch((function(e) {}))), n = null != t.maxFeePerGas || null != t.maxPriorityFeePerGas, null == t.gasPrice || 2 !== t.type && !n ? 0 !== t.type && 1 !== t.type || !n || z.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e) : z.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e), 2 !== t.type && null != t.type || null == t.maxFeePerGas || null == t.maxPriorityFeePerGas) {
                                                r.next = 10;
                                                break
                                            }
                                            t.type = 2, r.next = 18;
                                            break;
                                        case 10:
                                            if (0 !== t.type && 1 !== t.type) {
                                                r.next = 14;
                                                break
                                            }
                                            null == t.gasPrice && (t.gasPrice = this.getGasPrice()), r.next = 18;
                                            break;
                                        case 14:
                                            return r.next = 16, this.getFeeData();
                                        case 16:
                                            i = r.sent, null == t.type ? null != i.maxFeePerGas && null != i.maxPriorityFeePerGas ? (t.type = 2, null != t.gasPrice ? (o = t.gasPrice, delete t.gasPrice, t.maxFeePerGas = o, t.maxPriorityFeePerGas = o) : (null == t.maxFeePerGas && (t.maxFeePerGas = i.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas))) : null != i.gasPrice ? (n && z.throwError("network does not support EIP-1559", B.errors.UNSUPPORTED_OPERATION, {
                                                operation: "populateTransaction"
                                            }), null == t.gasPrice && (t.gasPrice = i.gasPrice), t.type = 0) : z.throwError("failed to get consistent fee data", B.errors.UNSUPPORTED_OPERATION, {
                                                operation: "signer.getFeeData"
                                            }) : 2 === t.type && (null == t.maxFeePerGas && (t.maxFeePerGas = i.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas));
                                        case 18:
                                            return null == t.nonce && (t.nonce = this.getTransactionCount("pending")), null == t.gasLimit && (t.gasLimit = this.estimateGas(t).catch((function(e) {
                                                if (H.indexOf(e.code) >= 0) throw e;
                                                return z.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", B.errors.UNPREDICTABLE_GAS_LIMIT, {
                                                    error: e,
                                                    tx: t
                                                })
                                            }))), null == t.chainId ? t.chainId = this.getChainId() : t.chainId = Promise.all([Promise.resolve(t.chainId), this.getChainId()]).then((function(r) {
                                                return 0 !== r[1] && r[0] !== r[1] && z.throwArgumentError("chainId address mismatch", "transaction", e), r[0]
                                            })), r.next = 23, j(t);
                                        case 23:
                                            return r.abrupt("return", r.sent);
                                        case 24:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_checkProvider",
                        value: function(e) {
                            this.provider || z.throwError("missing provider", B.errors.UNSUPPORTED_OPERATION, {
                                operation: e || "_checkProvider"
                            })
                        }
                    }], [{
                        key: "isSigner",
                        value: function(e) {
                            return !(!e || !e._isSigner)
                        }
                    }]), e
                }(),
                V = function(e) {
                    (0, I.Z)(t, e);
                    var r = (0, P.Z)(t);

                    function t(e, n) {
                        var i;
                        return (0, u.Z)(this, t), i = r.call(this), Z((0, x.Z)(i), "address", e), Z((0, x.Z)(i), "provider", n || null), i
                    }
                    return (0, c.Z)(t, [{
                        key: "getAddress",
                        value: function() {
                            return Promise.resolve(this.address)
                        }
                    }, {
                        key: "_fail",
                        value: function(e, r) {
                            return Promise.resolve().then((function() {
                                z.throwError(e, B.errors.UNSUPPORTED_OPERATION, {
                                    operation: r
                                })
                            }))
                        }
                    }, {
                        key: "signMessage",
                        value: function(e) {
                            return this._fail("VoidSigner cannot sign messages", "signMessage")
                        }
                    }, {
                        key: "signTransaction",
                        value: function(e) {
                            return this._fail("VoidSigner cannot sign transactions", "signTransaction")
                        }
                    }, {
                        key: "_signTypedData",
                        value: function(e, r, t) {
                            return this._fail("VoidSigner cannot sign typed data", "signTypedData")
                        }
                    }, {
                        key: "connect",
                        value: function(e) {
                            return new t(this.address, e)
                        }
                    }]), t
                }(W),
                J = t(84632),
                X = "0x0000000000000000000000000000000000000000",
                Q = t(27239),
                Y = t.n(Q),
                $ = !1,
                ee = !1,
                re = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                te = re.default,
                ne = null;
            var ie, oe, ae = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(ie || (ie = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(oe || (oe = {}));
            var se = "0123456789abcdef",
                ue = function() {
                    function e(r) {
                        (0, u.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, c.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == re[t] && this.throwArgumentError("invalid log level name", "logLevel", e), te > re[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (ee) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += se[r[o] >> 4], t += se[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (u) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case oe.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var s = r;
                                    switch (s) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + s;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case oe.CALL_EXCEPTION:
                                case oe.INSUFFICIENT_FUNDS:
                                case oe.MISSING_NEW:
                                case oe.NONCE_EXPIRED:
                                case oe.REPLACEMENT_UNDERPRICED:
                                case oe.TRANSACTION_REPLACED:
                                case oe.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var u = new Error(r);
                            return u.reason = o, u.code = t, Object.keys(n).forEach((function(e) {
                                u[e] = n[e]
                            })), u
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), ae && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: ae
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return ne || (ne = new e("logger/5.7.0")), ne
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), $) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            ee = !!r, $ = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = re[r.toLowerCase()];
                            null != t ? te = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            ue.errors = oe, ue.levels = ie;
            var ce = new ue("bytes/5.7.0");

            function fe(e) {
                return !!e.toHexString
            }

            function le(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function he(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!le(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!le(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function de(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var pe = "0123456789abcdef";

            function ve(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    ce.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = pe[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), fe(e)) return e.toHexString();
                if (de(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : ce.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (he(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += pe[(240 & o) >> 4] + pe[15 & o]
                    }
                    return n
                }
                return ce.throwArgumentError("invalid hexlify value", "value", e)
            }
            var ge = Y().BN,
                me = new ue("bignumber/5.7.0"),
                ye = {},
                be = 9007199254740991;
            var Ee = !1,
                we = function() {
                    function e(r, t) {
                        (0, u.Z)(this, e), r !== ye && me.throwError("cannot call constructor directly; use BigNumber.from", ue.errors.UNSUPPORTED_OPERATION, {
                            operation: "new (BigNumber)"
                        }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                    }
                    return (0, c.Z)(e, [{
                        key: "fromTwos",
                        value: function(e) {
                            return ke(Ne(this).fromTwos(e))
                        }
                    }, {
                        key: "toTwos",
                        value: function(e) {
                            return ke(Ne(this).toTwos(e))
                        }
                    }, {
                        key: "abs",
                        value: function() {
                            return "-" === this._hex[0] ? e.from(this._hex.substring(1)) : this
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            return ke(Ne(this).add(Ne(e)))
                        }
                    }, {
                        key: "sub",
                        value: function(e) {
                            return ke(Ne(this).sub(Ne(e)))
                        }
                    }, {
                        key: "div",
                        value: function(r) {
                            return e.from(r).isZero() && Re("division-by-zero", "div"), ke(Ne(this).div(Ne(r)))
                        }
                    }, {
                        key: "mul",
                        value: function(e) {
                            return ke(Ne(this).mul(Ne(e)))
                        }
                    }, {
                        key: "mod",
                        value: function(e) {
                            var r = Ne(e);
                            return r.isNeg() && Re("division-by-zero", "mod"), ke(Ne(this).umod(r))
                        }
                    }, {
                        key: "pow",
                        value: function(e) {
                            var r = Ne(e);
                            return r.isNeg() && Re("negative-power", "pow"), ke(Ne(this).pow(r))
                        }
                    }, {
                        key: "and",
                        value: function(e) {
                            var r = Ne(e);
                            return (this.isNegative() || r.isNeg()) && Re("unbound-bitwise-result", "and"), ke(Ne(this).and(r))
                        }
                    }, {
                        key: "or",
                        value: function(e) {
                            var r = Ne(e);
                            return (this.isNegative() || r.isNeg()) && Re("unbound-bitwise-result", "or"), ke(Ne(this).or(r))
                        }
                    }, {
                        key: "xor",
                        value: function(e) {
                            var r = Ne(e);
                            return (this.isNegative() || r.isNeg()) && Re("unbound-bitwise-result", "xor"), ke(Ne(this).xor(r))
                        }
                    }, {
                        key: "mask",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && Re("negative-width", "mask"), ke(Ne(this).maskn(e))
                        }
                    }, {
                        key: "shl",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && Re("negative-width", "shl"), ke(Ne(this).shln(e))
                        }
                    }, {
                        key: "shr",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && Re("negative-width", "shr"), ke(Ne(this).shrn(e))
                        }
                    }, {
                        key: "eq",
                        value: function(e) {
                            return Ne(this).eq(Ne(e))
                        }
                    }, {
                        key: "lt",
                        value: function(e) {
                            return Ne(this).lt(Ne(e))
                        }
                    }, {
                        key: "lte",
                        value: function(e) {
                            return Ne(this).lte(Ne(e))
                        }
                    }, {
                        key: "gt",
                        value: function(e) {
                            return Ne(this).gt(Ne(e))
                        }
                    }, {
                        key: "gte",
                        value: function(e) {
                            return Ne(this).gte(Ne(e))
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._hex[0]
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return Ne(this).isZero()
                        }
                    }, {
                        key: "toNumber",
                        value: function() {
                            try {
                                return Ne(this).toNumber()
                            } catch (e) {
                                Re("overflow", "toNumber", this.toString())
                            }
                            return null
                        }
                    }, {
                        key: "toBigInt",
                        value: function() {
                            try {
                                return BigInt(this.toString())
                            } catch (e) {}
                            return me.throwError("this platform does not support BigInt", ue.errors.UNSUPPORTED_OPERATION, {
                                value: this.toString()
                            })
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return arguments.length > 0 && (10 === arguments[0] ? Ee || (Ee = !0, me.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? me.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", ue.errors.UNEXPECTED_ARGUMENT, {}) : me.throwError("BigNumber.toString does not accept parameters", ue.errors.UNEXPECTED_ARGUMENT, {})), Ne(this).toString(10)
                        }
                    }, {
                        key: "toHexString",
                        value: function() {
                            return this._hex
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            return {
                                type: "BigNumber",
                                hex: this.toHexString()
                            }
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            if ("string" === typeof r) return r.match(/^-?0x[0-9a-f]+$/i) ? new e(ye, Ae(r)) : r.match(/^-?[0-9]+$/) ? new e(ye, Ae(new ge(r))) : me.throwArgumentError("invalid BigNumber string", "value", r);
                            if ("number" === typeof r) return r % 1 && Re("underflow", "BigNumber.from", r), (r >= be || r <= -be) && Re("overflow", "BigNumber.from", r), e.from(String(r));
                            var t = r;
                            if ("bigint" === typeof t) return e.from(t.toString());
                            if (he(t)) return e.from(ve(t));
                            if (t)
                                if (t.toHexString) {
                                    var n = t.toHexString();
                                    if ("string" === typeof n) return e.from(n)
                                } else {
                                    var i = t._hex;
                                    if (null == i && "BigNumber" === t.type && (i = t.hex), "string" === typeof i && (de(i) || "-" === i[0] && de(i.substring(1)))) return e.from(i)
                                }
                            return me.throwArgumentError("invalid BigNumber value", "value", r)
                        }
                    }, {
                        key: "isBigNumber",
                        value: function(e) {
                            return !(!e || !e._isBigNumber)
                        }
                    }]), e
                }();

            function Ae(e) {
                if ("string" !== typeof e) return Ae(e.toString(16));
                if ("-" === e[0]) return "-" === (e = e.substring(1))[0] && me.throwArgumentError("invalid hex", "value", e), "0x00" === (e = Ae(e)) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function ke(e) {
                return we.from(Ae(e))
            }

            function Ne(e) {
                var r = we.from(e).toHexString();
                return "-" === r[0] ? new ge("-" + r.substring(3), 16) : new ge(r.substring(2), 16)
            }

            function Re(e, r, t) {
                var n = {
                    fault: e,
                    operation: r
                };
                return null != t && (n.value = t), me.throwError(e, ue.errors.NUMERIC_FAULT, n)
            }
            var xe = we.from(-1),
                Ie = we.from(0),
                Pe = we.from(1),
                Se = we.from(2),
                _e = we.from("1000000000000000000"),
                Te = we.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                Oe = we.from("-0x8000000000000000000000000000000000000000000000000000000000000000"),
                Ce = we.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                Ue = "0x0000000000000000000000000000000000000000000000000000000000000000",
                Le = "\u039e",
                Fe = t(30417),
                De = t(80896),
                Me = t(85734),
                Be = t(45462),
                Ge = t(93514),
                Ze = t(57802),
                je = t(63235),
                Ke = t(38743),
                ze = t(35506),
                qe = t(6043),
                He = t(60347),
                We = t(18141),
                Ve = t(35850),
                Je = t(81952),
                Xe = t(13403),
                Qe = t(36723),
                Ye = t(69596),
                $e = t(93910),
                er = t(71394),
                rr = t(73313),
                tr = t(73608),
                nr = t(16743),
                ir = t(78513),
                or = t(52137),
                ar = t(79704),
                sr = t(14184),
                ur = t(33088),
                cr = t(72338),
                fr = t(85742),
                lr = t(54741),
                hr = t(83138),
                dr = t(8356),
                pr = t(61585),
                vr = "ethers/5.6.9",
                gr = new er.Logger(vr);
            try {
                var mr = window;
                null == mr._ethers && (mr._ethers = o)
            } catch (yr) {}
        },
        75073: function(e, r, t) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, r, t, n) {
                    void 0 === n && (n = t), Object.defineProperty(e, n, {
                        enumerable: !0,
                        get: function() {
                            return r[t]
                        }
                    })
                } : function(e, r, t, n) {
                    void 0 === n && (n = t), e[n] = r[t]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, r) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: r
                    })
                } : function(e, r) {
                    e.default = r
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var r = {};
                    if (null != e)
                        for (var t in e) "default" !== t && Object.prototype.hasOwnProperty.call(e, t) && n(r, e, t);
                    return i(r, e), r
                };
            Object.defineProperty(r, "__esModule", {
                value: !0
            }), r.formatBytes32String = r.Utf8ErrorFuncs = r.toUtf8String = r.toUtf8CodePoints = r.toUtf8Bytes = r._toEscapedUtf8String = r.nameprep = r.hexDataSlice = r.hexDataLength = r.hexZeroPad = r.hexValue = r.hexStripZeros = r.hexConcat = r.isHexString = r.hexlify = r.base64 = r.base58 = r.TransactionDescription = r.LogDescription = r.Interface = r.SigningKey = r.HDNode = r.defaultPath = r.isBytesLike = r.isBytes = r.zeroPad = r.stripZeros = r.concat = r.arrayify = r.shallowCopy = r.resolveProperties = r.getStatic = r.defineReadOnly = r.deepCopy = r.checkProperties = r.poll = r.fetchJson = r._fetchData = r.RLP = r.Logger = r.checkResultErrors = r.FormatTypes = r.ParamType = r.FunctionFragment = r.EventFragment = r.ErrorFragment = r.ConstructorFragment = r.Fragment = r.defaultAbiCoder = r.AbiCoder = void 0, r.Indexed = r.Utf8ErrorReason = r.UnicodeNormalizationForm = r.SupportedAlgorithm = r.mnemonicToSeed = r.isValidMnemonic = r.entropyToMnemonic = r.mnemonicToEntropy = r.getAccountPath = r.verifyTypedData = r.verifyMessage = r.recoverPublicKey = r.computePublicKey = r.recoverAddress = r.computeAddress = r.getJsonWalletAddress = r.TransactionTypes = r.serializeTransaction = r.parseTransaction = r.accessListify = r.joinSignature = r.splitSignature = r.soliditySha256 = r.solidityKeccak256 = r.solidityPack = r.shuffled = r.randomBytes = r.sha512 = r.sha256 = r.ripemd160 = r.keccak256 = r.computeHmac = r.commify = r.parseUnits = r.formatUnits = r.parseEther = r.formatEther = r.isAddress = r.getCreate2Address = r.getContractAddress = r.getIcapAddress = r.getAddress = r._TypedDataEncoder = r.id = r.isValidName = r.namehash = r.hashMessage = r.dnsEncode = r.parseBytes32String = void 0;
            var a = t(67378);
            Object.defineProperty(r, "AbiCoder", {
                enumerable: !0,
                get: function() {
                    return a.AbiCoder
                }
            }), Object.defineProperty(r, "checkResultErrors", {
                enumerable: !0,
                get: function() {
                    return a.checkResultErrors
                }
            }), Object.defineProperty(r, "ConstructorFragment", {
                enumerable: !0,
                get: function() {
                    return a.ConstructorFragment
                }
            }), Object.defineProperty(r, "defaultAbiCoder", {
                enumerable: !0,
                get: function() {
                    return a.defaultAbiCoder
                }
            }), Object.defineProperty(r, "ErrorFragment", {
                enumerable: !0,
                get: function() {
                    return a.ErrorFragment
                }
            }), Object.defineProperty(r, "EventFragment", {
                enumerable: !0,
                get: function() {
                    return a.EventFragment
                }
            }), Object.defineProperty(r, "FormatTypes", {
                enumerable: !0,
                get: function() {
                    return a.FormatTypes
                }
            }), Object.defineProperty(r, "Fragment", {
                enumerable: !0,
                get: function() {
                    return a.Fragment
                }
            }), Object.defineProperty(r, "FunctionFragment", {
                enumerable: !0,
                get: function() {
                    return a.FunctionFragment
                }
            }), Object.defineProperty(r, "Indexed", {
                enumerable: !0,
                get: function() {
                    return a.Indexed
                }
            }), Object.defineProperty(r, "Interface", {
                enumerable: !0,
                get: function() {
                    return a.Interface
                }
            }), Object.defineProperty(r, "LogDescription", {
                enumerable: !0,
                get: function() {
                    return a.LogDescription
                }
            }), Object.defineProperty(r, "ParamType", {
                enumerable: !0,
                get: function() {
                    return a.ParamType
                }
            }), Object.defineProperty(r, "TransactionDescription", {
                enumerable: !0,
                get: function() {
                    return a.TransactionDescription
                }
            });
            var s = t(38743);
            Object.defineProperty(r, "getAddress", {
                enumerable: !0,
                get: function() {
                    return s.getAddress
                }
            }), Object.defineProperty(r, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return s.getCreate2Address
                }
            }), Object.defineProperty(r, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return s.getContractAddress
                }
            }), Object.defineProperty(r, "getIcapAddress", {
                enumerable: !0,
                get: function() {
                    return s.getIcapAddress
                }
            }), Object.defineProperty(r, "isAddress", {
                enumerable: !0,
                get: function() {
                    return s.isAddress
                }
            });
            var u = o(t(35506));
            r.base64 = u;
            var c = t(6043);
            Object.defineProperty(r, "base58", {
                enumerable: !0,
                get: function() {
                    return c.Base58
                }
            });
            var f = t(60347);
            Object.defineProperty(r, "arrayify", {
                enumerable: !0,
                get: function() {
                    return f.arrayify
                }
            }), Object.defineProperty(r, "concat", {
                enumerable: !0,
                get: function() {
                    return f.concat
                }
            }), Object.defineProperty(r, "hexConcat", {
                enumerable: !0,
                get: function() {
                    return f.hexConcat
                }
            }), Object.defineProperty(r, "hexDataSlice", {
                enumerable: !0,
                get: function() {
                    return f.hexDataSlice
                }
            }), Object.defineProperty(r, "hexDataLength", {
                enumerable: !0,
                get: function() {
                    return f.hexDataLength
                }
            }), Object.defineProperty(r, "hexlify", {
                enumerable: !0,
                get: function() {
                    return f.hexlify
                }
            }), Object.defineProperty(r, "hexStripZeros", {
                enumerable: !0,
                get: function() {
                    return f.hexStripZeros
                }
            }), Object.defineProperty(r, "hexValue", {
                enumerable: !0,
                get: function() {
                    return f.hexValue
                }
            }), Object.defineProperty(r, "hexZeroPad", {
                enumerable: !0,
                get: function() {
                    return f.hexZeroPad
                }
            }), Object.defineProperty(r, "isBytes", {
                enumerable: !0,
                get: function() {
                    return f.isBytes
                }
            }), Object.defineProperty(r, "isBytesLike", {
                enumerable: !0,
                get: function() {
                    return f.isBytesLike
                }
            }), Object.defineProperty(r, "isHexString", {
                enumerable: !0,
                get: function() {
                    return f.isHexString
                }
            }), Object.defineProperty(r, "joinSignature", {
                enumerable: !0,
                get: function() {
                    return f.joinSignature
                }
            }), Object.defineProperty(r, "zeroPad", {
                enumerable: !0,
                get: function() {
                    return f.zeroPad
                }
            }), Object.defineProperty(r, "splitSignature", {
                enumerable: !0,
                get: function() {
                    return f.splitSignature
                }
            }), Object.defineProperty(r, "stripZeros", {
                enumerable: !0,
                get: function() {
                    return f.stripZeros
                }
            });
            var l = t(86718);
            Object.defineProperty(r, "_TypedDataEncoder", {
                enumerable: !0,
                get: function() {
                    return l._TypedDataEncoder
                }
            }), Object.defineProperty(r, "dnsEncode", {
                enumerable: !0,
                get: function() {
                    return l.dnsEncode
                }
            }), Object.defineProperty(r, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return l.hashMessage
                }
            }), Object.defineProperty(r, "id", {
                enumerable: !0,
                get: function() {
                    return l.id
                }
            }), Object.defineProperty(r, "isValidName", {
                enumerable: !0,
                get: function() {
                    return l.isValidName
                }
            }), Object.defineProperty(r, "namehash", {
                enumerable: !0,
                get: function() {
                    return l.namehash
                }
            });
            var h = t(36723);
            Object.defineProperty(r, "defaultPath", {
                enumerable: !0,
                get: function() {
                    return h.defaultPath
                }
            }), Object.defineProperty(r, "entropyToMnemonic", {
                enumerable: !0,
                get: function() {
                    return h.entropyToMnemonic
                }
            }), Object.defineProperty(r, "getAccountPath", {
                enumerable: !0,
                get: function() {
                    return h.getAccountPath
                }
            }), Object.defineProperty(r, "HDNode", {
                enumerable: !0,
                get: function() {
                    return h.HDNode
                }
            }), Object.defineProperty(r, "isValidMnemonic", {
                enumerable: !0,
                get: function() {
                    return h.isValidMnemonic
                }
            }), Object.defineProperty(r, "mnemonicToEntropy", {
                enumerable: !0,
                get: function() {
                    return h.mnemonicToEntropy
                }
            }), Object.defineProperty(r, "mnemonicToSeed", {
                enumerable: !0,
                get: function() {
                    return h.mnemonicToSeed
                }
            });
            var d = t(69449);
            Object.defineProperty(r, "getJsonWalletAddress", {
                enumerable: !0,
                get: function() {
                    return d.getJsonWalletAddress
                }
            });
            var p = t(93910);
            Object.defineProperty(r, "keccak256", {
                enumerable: !0,
                get: function() {
                    return p.keccak256
                }
            });
            var v = t(71394);
            Object.defineProperty(r, "Logger", {
                enumerable: !0,
                get: function() {
                    return v.Logger
                }
            });
            var g = t(33031);
            Object.defineProperty(r, "computeHmac", {
                enumerable: !0,
                get: function() {
                    return g.computeHmac
                }
            }), Object.defineProperty(r, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return g.ripemd160
                }
            }), Object.defineProperty(r, "sha256", {
                enumerable: !0,
                get: function() {
                    return g.sha256
                }
            }), Object.defineProperty(r, "sha512", {
                enumerable: !0,
                get: function() {
                    return g.sha512
                }
            });
            var m = t(73608);
            Object.defineProperty(r, "solidityKeccak256", {
                enumerable: !0,
                get: function() {
                    return m.keccak256
                }
            }), Object.defineProperty(r, "solidityPack", {
                enumerable: !0,
                get: function() {
                    return m.pack
                }
            }), Object.defineProperty(r, "soliditySha256", {
                enumerable: !0,
                get: function() {
                    return m.sha256
                }
            });
            var y = t(9156);
            Object.defineProperty(r, "randomBytes", {
                enumerable: !0,
                get: function() {
                    return y.randomBytes
                }
            }), Object.defineProperty(r, "shuffled", {
                enumerable: !0,
                get: function() {
                    return y.shuffled
                }
            });
            var b = t(52137);
            Object.defineProperty(r, "checkProperties", {
                enumerable: !0,
                get: function() {
                    return b.checkProperties
                }
            }), Object.defineProperty(r, "deepCopy", {
                enumerable: !0,
                get: function() {
                    return b.deepCopy
                }
            }), Object.defineProperty(r, "defineReadOnly", {
                enumerable: !0,
                get: function() {
                    return b.defineReadOnly
                }
            }), Object.defineProperty(r, "getStatic", {
                enumerable: !0,
                get: function() {
                    return b.getStatic
                }
            }), Object.defineProperty(r, "resolveProperties", {
                enumerable: !0,
                get: function() {
                    return b.resolveProperties
                }
            }), Object.defineProperty(r, "shallowCopy", {
                enumerable: !0,
                get: function() {
                    return b.shallowCopy
                }
            });
            var E = o(t(79704));
            r.RLP = E;
            var w = t(14184);
            Object.defineProperty(r, "computePublicKey", {
                enumerable: !0,
                get: function() {
                    return w.computePublicKey
                }
            }), Object.defineProperty(r, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return w.recoverPublicKey
                }
            }), Object.defineProperty(r, "SigningKey", {
                enumerable: !0,
                get: function() {
                    return w.SigningKey
                }
            });
            var A = t(99513);
            Object.defineProperty(r, "formatBytes32String", {
                enumerable: !0,
                get: function() {
                    return A.formatBytes32String
                }
            }), Object.defineProperty(r, "nameprep", {
                enumerable: !0,
                get: function() {
                    return A.nameprep
                }
            }), Object.defineProperty(r, "parseBytes32String", {
                enumerable: !0,
                get: function() {
                    return A.parseBytes32String
                }
            }), Object.defineProperty(r, "_toEscapedUtf8String", {
                enumerable: !0,
                get: function() {
                    return A._toEscapedUtf8String
                }
            }), Object.defineProperty(r, "toUtf8Bytes", {
                enumerable: !0,
                get: function() {
                    return A.toUtf8Bytes
                }
            }), Object.defineProperty(r, "toUtf8CodePoints", {
                enumerable: !0,
                get: function() {
                    return A.toUtf8CodePoints
                }
            }), Object.defineProperty(r, "toUtf8String", {
                enumerable: !0,
                get: function() {
                    return A.toUtf8String
                }
            }), Object.defineProperty(r, "Utf8ErrorFuncs", {
                enumerable: !0,
                get: function() {
                    return A.Utf8ErrorFuncs
                }
            });
            var k = t(54741);
            Object.defineProperty(r, "accessListify", {
                enumerable: !0,
                get: function() {
                    return k.accessListify
                }
            }), Object.defineProperty(r, "computeAddress", {
                enumerable: !0,
                get: function() {
                    return k.computeAddress
                }
            }), Object.defineProperty(r, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return k.parse
                }
            }), Object.defineProperty(r, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return k.recoverAddress
                }
            }), Object.defineProperty(r, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return k.serialize
                }
            }), Object.defineProperty(r, "TransactionTypes", {
                enumerable: !0,
                get: function() {
                    return k.TransactionTypes
                }
            });
            var N = t(83138);
            Object.defineProperty(r, "commify", {
                enumerable: !0,
                get: function() {
                    return N.commify
                }
            }), Object.defineProperty(r, "formatEther", {
                enumerable: !0,
                get: function() {
                    return N.formatEther
                }
            }), Object.defineProperty(r, "parseEther", {
                enumerable: !0,
                get: function() {
                    return N.parseEther
                }
            }), Object.defineProperty(r, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return N.formatUnits
                }
            }), Object.defineProperty(r, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return N.parseUnits
                }
            });
            var R = t(84632);
            Object.defineProperty(r, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return R.verifyMessage
                }
            }), Object.defineProperty(r, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return R.verifyTypedData
                }
            });
            var x = t(8356);
            Object.defineProperty(r, "_fetchData", {
                enumerable: !0,
                get: function() {
                    return x._fetchData
                }
            }), Object.defineProperty(r, "fetchJson", {
                enumerable: !0,
                get: function() {
                    return x.fetchJson
                }
            }), Object.defineProperty(r, "poll", {
                enumerable: !0,
                get: function() {
                    return x.poll
                }
            });
            var I = t(33031);
            Object.defineProperty(r, "SupportedAlgorithm", {
                enumerable: !0,
                get: function() {
                    return I.SupportedAlgorithm
                }
            });
            var P = t(99513);
            Object.defineProperty(r, "UnicodeNormalizationForm", {
                enumerable: !0,
                get: function() {
                    return P.UnicodeNormalizationForm
                }
            }), Object.defineProperty(r, "Utf8ErrorReason", {
                enumerable: !0,
                get: function() {
                    return P.Utf8ErrorReason
                }
            })
        },
        38743: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                getAddress: function() {
                    return ee
                },
                getContractAddress: function() {
                    return ne
                },
                getCreate2Address: function() {
                    return ie
                },
                getIcapAddress: function() {
                    return te
                },
                isAddress: function() {
                    return re
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f;
            var v = new p("bytes/5.7.0");

            function g(e) {
                return !!e.toHexString
            }

            function m(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return m(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function y(e) {
                return k(e) && !(e.length % 2) || E(e)
            }

            function b(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function E(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!b(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!b(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function w(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), m(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e) && (e = e.toHexString()), k(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : v.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return m(new Uint8Array(i))
                }
                return E(e) ? m(new Uint8Array(e)) : v.throwArgumentError("invalid arrayify value", "value", e)
            }

            function A(e) {
                var r = e.map((function(e) {
                        return w(e)
                    })),
                    t = r.reduce((function(e, r) {
                        return e + r.length
                    }), 0),
                    n = new Uint8Array(t);
                return r.reduce((function(e, r) {
                    return n.set(r, e), e + r.length
                }), 0), m(n)
            }

            function k(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var N = "0123456789abcdef";

            function R(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = N[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e)) return e.toHexString();
                if (k(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : v.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (E(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += N[(240 & o) >> 4] + N[15 & o]
                    }
                    return n
                }
                return v.throwArgumentError("invalid hexlify value", "value", e)
            }

            function x(e) {
                if ("string" !== typeof e) e = R(e);
                else if (!k(e) || e.length % 2) return null;
                return (e.length - 2) / 2
            }

            function I(e, r, t) {
                return "string" !== typeof e ? e = R(e) : (!k(e) || e.length % 2) && v.throwArgumentError("invalid hexData", "value", e), r = 2 + 2 * r, null != t ? "0x" + e.substring(r, 2 + 2 * t) : "0x" + e.substring(r)
            }
            var P = t(27239),
                S = t.n(P)().BN,
                _ = new p("bignumber/5.7.0"),
                T = {},
                O = 9007199254740991;
            var C = !1,
                U = function() {
                    function e(r, t) {
                        (0, n.Z)(this, e), r !== T && _.throwError("cannot call constructor directly; use BigNumber.from", p.errors.UNSUPPORTED_OPERATION, {
                            operation: "new (BigNumber)"
                        }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                    }
                    return (0, i.Z)(e, [{
                        key: "fromTwos",
                        value: function(e) {
                            return F(D(this).fromTwos(e))
                        }
                    }, {
                        key: "toTwos",
                        value: function(e) {
                            return F(D(this).toTwos(e))
                        }
                    }, {
                        key: "abs",
                        value: function() {
                            return "-" === this._hex[0] ? e.from(this._hex.substring(1)) : this
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            return F(D(this).add(D(e)))
                        }
                    }, {
                        key: "sub",
                        value: function(e) {
                            return F(D(this).sub(D(e)))
                        }
                    }, {
                        key: "div",
                        value: function(r) {
                            return e.from(r).isZero() && M("division-by-zero", "div"), F(D(this).div(D(r)))
                        }
                    }, {
                        key: "mul",
                        value: function(e) {
                            return F(D(this).mul(D(e)))
                        }
                    }, {
                        key: "mod",
                        value: function(e) {
                            var r = D(e);
                            return r.isNeg() && M("division-by-zero", "mod"), F(D(this).umod(r))
                        }
                    }, {
                        key: "pow",
                        value: function(e) {
                            var r = D(e);
                            return r.isNeg() && M("negative-power", "pow"), F(D(this).pow(r))
                        }
                    }, {
                        key: "and",
                        value: function(e) {
                            var r = D(e);
                            return (this.isNegative() || r.isNeg()) && M("unbound-bitwise-result", "and"), F(D(this).and(r))
                        }
                    }, {
                        key: "or",
                        value: function(e) {
                            var r = D(e);
                            return (this.isNegative() || r.isNeg()) && M("unbound-bitwise-result", "or"), F(D(this).or(r))
                        }
                    }, {
                        key: "xor",
                        value: function(e) {
                            var r = D(e);
                            return (this.isNegative() || r.isNeg()) && M("unbound-bitwise-result", "xor"), F(D(this).xor(r))
                        }
                    }, {
                        key: "mask",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && M("negative-width", "mask"), F(D(this).maskn(e))
                        }
                    }, {
                        key: "shl",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && M("negative-width", "shl"), F(D(this).shln(e))
                        }
                    }, {
                        key: "shr",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && M("negative-width", "shr"), F(D(this).shrn(e))
                        }
                    }, {
                        key: "eq",
                        value: function(e) {
                            return D(this).eq(D(e))
                        }
                    }, {
                        key: "lt",
                        value: function(e) {
                            return D(this).lt(D(e))
                        }
                    }, {
                        key: "lte",
                        value: function(e) {
                            return D(this).lte(D(e))
                        }
                    }, {
                        key: "gt",
                        value: function(e) {
                            return D(this).gt(D(e))
                        }
                    }, {
                        key: "gte",
                        value: function(e) {
                            return D(this).gte(D(e))
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._hex[0]
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return D(this).isZero()
                        }
                    }, {
                        key: "toNumber",
                        value: function() {
                            try {
                                return D(this).toNumber()
                            } catch (e) {
                                M("overflow", "toNumber", this.toString())
                            }
                            return null
                        }
                    }, {
                        key: "toBigInt",
                        value: function() {
                            try {
                                return BigInt(this.toString())
                            } catch (e) {}
                            return _.throwError("this platform does not support BigInt", p.errors.UNSUPPORTED_OPERATION, {
                                value: this.toString()
                            })
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return arguments.length > 0 && (10 === arguments[0] ? C || (C = !0, _.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? _.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", p.errors.UNEXPECTED_ARGUMENT, {}) : _.throwError("BigNumber.toString does not accept parameters", p.errors.UNEXPECTED_ARGUMENT, {})), D(this).toString(10)
                        }
                    }, {
                        key: "toHexString",
                        value: function() {
                            return this._hex
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            return {
                                type: "BigNumber",
                                hex: this.toHexString()
                            }
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            if ("string" === typeof r) return r.match(/^-?0x[0-9a-f]+$/i) ? new e(T, L(r)) : r.match(/^-?[0-9]+$/) ? new e(T, L(new S(r))) : _.throwArgumentError("invalid BigNumber string", "value", r);
                            if ("number" === typeof r) return r % 1 && M("underflow", "BigNumber.from", r), (r >= O || r <= -O) && M("overflow", "BigNumber.from", r), e.from(String(r));
                            var t = r;
                            if ("bigint" === typeof t) return e.from(t.toString());
                            if (E(t)) return e.from(R(t));
                            if (t)
                                if (t.toHexString) {
                                    var n = t.toHexString();
                                    if ("string" === typeof n) return e.from(n)
                                } else {
                                    var i = t._hex;
                                    if (null == i && "BigNumber" === t.type && (i = t.hex), "string" === typeof i && (k(i) || "-" === i[0] && k(i.substring(1)))) return e.from(i)
                                }
                            return _.throwArgumentError("invalid BigNumber value", "value", r)
                        }
                    }, {
                        key: "isBigNumber",
                        value: function(e) {
                            return !(!e || !e._isBigNumber)
                        }
                    }]), e
                }();

            function L(e) {
                if ("string" !== typeof e) return L(e.toString(16));
                if ("-" === e[0]) return "-" === (e = e.substring(1))[0] && _.throwArgumentError("invalid hex", "value", e), "0x00" === (e = L(e)) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function F(e) {
                return U.from(L(e))
            }

            function D(e) {
                var r = U.from(e).toHexString();
                return "-" === r[0] ? new S("-" + r.substring(3), 16) : new S(r.substring(2), 16)
            }

            function M(e, r, t) {
                var n = {
                    fault: e,
                    operation: r
                };
                return null != t && (n.value = t), _.throwError(e, p.errors.NUMERIC_FAULT, n)
            }
            var B = t(3425),
                G = t.n(B);

            function Z(e) {
                return "0x" + G().keccak_256(w(e))
            }
            var j = new p("rlp/5.7.0");

            function K(e) {
                for (var r = []; e;) r.unshift(255 & e), e >>= 8;
                return r
            }

            function z(e) {
                if (Array.isArray(e)) {
                    var r = [];
                    if (e.forEach((function(e) {
                            r = r.concat(z(e))
                        })), r.length <= 55) return r.unshift(192 + r.length), r;
                    var t = K(r.length);
                    return t.unshift(247 + t.length), t.concat(r)
                }
                y(e) || j.throwArgumentError("RLP object must be BytesLike", "object", e);
                var n = Array.prototype.slice.call(w(e));
                if (1 === n.length && n[0] <= 127) return n;
                if (n.length <= 55) return n.unshift(128 + n.length), n;
                var i = K(n.length);
                return i.unshift(183 + i.length), i.concat(n)
            }

            function q(e) {
                return R(z(e))
            }
            var H = new p("address/5.6.1");

            function W(e) {
                k(e, 20) || H.throwArgumentError("invalid address", "address", e);
                for (var r = (e = e.toLowerCase()).substring(2).split(""), t = new Uint8Array(40), n = 0; n < 40; n++) t[n] = r[n].charCodeAt(0);
                for (var i = w(Z(t)), o = 0; o < 40; o += 2) i[o >> 1] >> 4 >= 8 && (r[o] = r[o].toUpperCase()), (15 & i[o >> 1]) >= 8 && (r[o + 1] = r[o + 1].toUpperCase());
                return "0x" + r.join("")
            }
            for (var V = {}, J = 0; J < 10; J++) V[String(J)] = String(J);
            for (var X = 0; X < 26; X++) V[String.fromCharCode(65 + X)] = String(10 + X);
            var Q, Y = Math.floor((Q = 9007199254740991, Math.log10 ? Math.log10(Q) : Math.log(Q) / Math.LN10));

            function $(e) {
                for (var r = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map((function(e) {
                        return V[e]
                    })).join(""); r.length >= Y;) {
                    var t = r.substring(0, Y);
                    r = parseInt(t, 10) % 97 + r.substring(t.length)
                }
                for (var n = String(98 - parseInt(r, 10) % 97); n.length < 2;) n = "0" + n;
                return n
            }

            function ee(e) {
                var r, t = null;
                if ("string" !== typeof e && H.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), t = W(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && H.throwArgumentError("bad address checksum", "address", e);
                else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (e.substring(2, 4) !== $(e) && H.throwArgumentError("bad icap checksum", "address", e), r = e.substring(4), t = new S(r, 36).toString(16); t.length < 40;) t = "0" + t;
                    t = W("0x" + t)
                } else H.throwArgumentError("invalid address", "address", e);
                return t
            }

            function re(e) {
                try {
                    return ee(e), !0
                } catch (r) {}
                return !1
            }

            function te(e) {
                for (var r, t = (r = ee(e).substring(2), new S(r, 16).toString(36)).toUpperCase(); t.length < 30;) t = "0" + t;
                return "XE" + $("XE00" + t) + t
            }

            function ne(e) {
                var r = null;
                try {
                    r = ee(e.from)
                } catch (t) {
                    H.throwArgumentError("missing from address", "transaction", e)
                }
                return ee(I(Z(q([r, function(e) {
                    var r = w(e);
                    if (0 === r.length) return r;
                    for (var t = 0; t < r.length && 0 === r[t];) t++;
                    return t && (r = r.slice(t)), r
                }(w(U.from(e.nonce).toHexString()))])), 12))
            }

            function ie(e, r, t) {
                return 32 !== x(r) && H.throwArgumentError("salt must be 32 bytes", "salt", r), 32 !== x(t) && H.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", t), ee(I(Z(A(["0xff", ee(e), r, t])), 12))
            }
        },
        35506: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                decode: function() {
                    return A
                },
                encode: function() {
                    return k
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f;
            var v = new p("bytes/5.7.0");

            function g(e) {
                return !!e.toHexString
            }

            function m(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return m(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function y(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function b(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!y(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!y(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function E(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), m(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e) && (e = e.toHexString()), w(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : v.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return m(new Uint8Array(i))
                }
                return b(e) ? m(new Uint8Array(e)) : v.throwArgumentError("invalid arrayify value", "value", e)
            }

            function w(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }

            function A(e) {
                e = atob(e);
                for (var r = [], t = 0; t < e.length; t++) r.push(e.charCodeAt(t));
                return E(r)
            }

            function k(e) {
                e = E(e);
                for (var r = "", t = 0; t < e.length; t++) r += String.fromCharCode(e[t]);
                return btoa(r)
            }
        },
        6043: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                Base32: function() {
                    return N
                },
                Base58: function() {
                    return R
                },
                BaseX: function() {
                    return k
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f;
            var v = new p("bytes/5.7.0");

            function g(e) {
                return !!e.toHexString
            }

            function m(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return m(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function y(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function b(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!y(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!y(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function E(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), m(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e) && (e = e.toHexString()), w(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : v.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return m(new Uint8Array(i))
                }
                return b(e) ? m(new Uint8Array(e)) : v.throwArgumentError("invalid arrayify value", "value", e)
            }

            function w(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            new p("properties/5.7.0");

            function A(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            var k = function() {
                    function e(r) {
                        (0, n.Z)(this, e), A(this, "alphabet", r), A(this, "base", r.length), A(this, "_alphabetMap", {}), A(this, "_leader", r.charAt(0));
                        for (var t = 0; t < r.length; t++) this._alphabetMap[r.charAt(t)] = t
                    }
                    return (0, i.Z)(e, [{
                        key: "encode",
                        value: function(e) {
                            var r = E(e);
                            if (0 === r.length) return "";
                            for (var t = [0], n = 0; n < r.length; ++n) {
                                for (var i = r[n], o = 0; o < t.length; ++o) i += t[o] << 8, t[o] = i % this.base, i = i / this.base | 0;
                                for (; i > 0;) t.push(i % this.base), i = i / this.base | 0
                            }
                            for (var a = "", s = 0; 0 === r[s] && s < r.length - 1; ++s) a += this._leader;
                            for (var u = t.length - 1; u >= 0; --u) a += this.alphabet[t[u]];
                            return a
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            if ("string" !== typeof e) throw new TypeError("Expected String");
                            var r = [];
                            if (0 === e.length) return new Uint8Array(r);
                            r.push(0);
                            for (var t = 0; t < e.length; t++) {
                                var n = this._alphabetMap[e[t]];
                                if (void 0 === n) throw new Error("Non-base" + this.base + " character");
                                for (var i = n, o = 0; o < r.length; ++o) i += r[o] * this.base, r[o] = 255 & i, i >>= 8;
                                for (; i > 0;) r.push(255 & i), i >>= 8
                            }
                            for (var a = 0; e[a] === this._leader && a < e.length - 1; ++a) r.push(0);
                            return E(new Uint8Array(r.reverse()))
                        }
                    }]), e
                }(),
                N = new k("abcdefghijklmnopqrstuvwxyz234567"),
                R = new k("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")
        },
        16528: function(e, r, t) {
            "use strict";
            t.d(r, {
                i: function() {
                    return n
                }
            });
            var n = "bignumber/5.6.2"
        },
        56986: function(e, r, t) {
            "use strict";
            t.d(r, {
                O$: function() {
                    return g
                },
                Zm: function() {
                    return p
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(27239),
                a = t.n(o),
                s = t(21331),
                u = t(80425),
                c = t(16528),
                f = a().BN,
                l = new u.Yd(c.i),
                h = {},
                d = 9007199254740991;

            function p(e) {
                return null != e && (g.isBigNumber(e) || "number" === typeof e && e % 1 === 0 || "string" === typeof e && !!e.match(/^-?[0-9]+$/) || (0, s.A7)(e) || "bigint" === typeof e || (0, s._t)(e))
            }
            var v = !1,
                g = function() {
                    function e(r, t) {
                        (0, n.Z)(this, e), r !== h && l.throwError("cannot call constructor directly; use BigNumber.from", u.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "new (BigNumber)"
                        }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                    }
                    return (0, i.Z)(e, [{
                        key: "fromTwos",
                        value: function(e) {
                            return y(b(this).fromTwos(e))
                        }
                    }, {
                        key: "toTwos",
                        value: function(e) {
                            return y(b(this).toTwos(e))
                        }
                    }, {
                        key: "abs",
                        value: function() {
                            return "-" === this._hex[0] ? e.from(this._hex.substring(1)) : this
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            return y(b(this).add(b(e)))
                        }
                    }, {
                        key: "sub",
                        value: function(e) {
                            return y(b(this).sub(b(e)))
                        }
                    }, {
                        key: "div",
                        value: function(r) {
                            return e.from(r).isZero() && E("division-by-zero", "div"), y(b(this).div(b(r)))
                        }
                    }, {
                        key: "mul",
                        value: function(e) {
                            return y(b(this).mul(b(e)))
                        }
                    }, {
                        key: "mod",
                        value: function(e) {
                            var r = b(e);
                            return r.isNeg() && E("division-by-zero", "mod"), y(b(this).umod(r))
                        }
                    }, {
                        key: "pow",
                        value: function(e) {
                            var r = b(e);
                            return r.isNeg() && E("negative-power", "pow"), y(b(this).pow(r))
                        }
                    }, {
                        key: "and",
                        value: function(e) {
                            var r = b(e);
                            return (this.isNegative() || r.isNeg()) && E("unbound-bitwise-result", "and"), y(b(this).and(r))
                        }
                    }, {
                        key: "or",
                        value: function(e) {
                            var r = b(e);
                            return (this.isNegative() || r.isNeg()) && E("unbound-bitwise-result", "or"), y(b(this).or(r))
                        }
                    }, {
                        key: "xor",
                        value: function(e) {
                            var r = b(e);
                            return (this.isNegative() || r.isNeg()) && E("unbound-bitwise-result", "xor"), y(b(this).xor(r))
                        }
                    }, {
                        key: "mask",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && E("negative-width", "mask"), y(b(this).maskn(e))
                        }
                    }, {
                        key: "shl",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && E("negative-width", "shl"), y(b(this).shln(e))
                        }
                    }, {
                        key: "shr",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && E("negative-width", "shr"), y(b(this).shrn(e))
                        }
                    }, {
                        key: "eq",
                        value: function(e) {
                            return b(this).eq(b(e))
                        }
                    }, {
                        key: "lt",
                        value: function(e) {
                            return b(this).lt(b(e))
                        }
                    }, {
                        key: "lte",
                        value: function(e) {
                            return b(this).lte(b(e))
                        }
                    }, {
                        key: "gt",
                        value: function(e) {
                            return b(this).gt(b(e))
                        }
                    }, {
                        key: "gte",
                        value: function(e) {
                            return b(this).gte(b(e))
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._hex[0]
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return b(this).isZero()
                        }
                    }, {
                        key: "toNumber",
                        value: function() {
                            try {
                                return b(this).toNumber()
                            } catch (e) {
                                E("overflow", "toNumber", this.toString())
                            }
                            return null
                        }
                    }, {
                        key: "toBigInt",
                        value: function() {
                            try {
                                return BigInt(this.toString())
                            } catch (e) {}
                            return l.throwError("this platform does not support BigInt", u.Yd.errors.UNSUPPORTED_OPERATION, {
                                value: this.toString()
                            })
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return arguments.length > 0 && (10 === arguments[0] ? v || (v = !0, l.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? l.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", u.Yd.errors.UNEXPECTED_ARGUMENT, {}) : l.throwError("BigNumber.toString does not accept parameters", u.Yd.errors.UNEXPECTED_ARGUMENT, {})), b(this).toString(10)
                        }
                    }, {
                        key: "toHexString",
                        value: function() {
                            return this._hex
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            return {
                                type: "BigNumber",
                                hex: this.toHexString()
                            }
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            if ("string" === typeof r) return r.match(/^-?0x[0-9a-f]+$/i) ? new e(h, m(r)) : r.match(/^-?[0-9]+$/) ? new e(h, m(new f(r))) : l.throwArgumentError("invalid BigNumber string", "value", r);
                            if ("number" === typeof r) return r % 1 && E("underflow", "BigNumber.from", r), (r >= d || r <= -d) && E("overflow", "BigNumber.from", r), e.from(String(r));
                            var t = r;
                            if ("bigint" === typeof t) return e.from(t.toString());
                            if ((0, s._t)(t)) return e.from((0, s.Dv)(t));
                            if (t)
                                if (t.toHexString) {
                                    var n = t.toHexString();
                                    if ("string" === typeof n) return e.from(n)
                                } else {
                                    var i = t._hex;
                                    if (null == i && "BigNumber" === t.type && (i = t.hex), "string" === typeof i && ((0, s.A7)(i) || "-" === i[0] && (0, s.A7)(i.substring(1)))) return e.from(i)
                                }
                            return l.throwArgumentError("invalid BigNumber value", "value", r)
                        }
                    }, {
                        key: "isBigNumber",
                        value: function(e) {
                            return !(!e || !e._isBigNumber)
                        }
                    }]), e
                }();

            function m(e) {
                if ("string" !== typeof e) return m(e.toString(16));
                if ("-" === e[0]) return "-" === (e = e.substring(1))[0] && l.throwArgumentError("invalid hex", "value", e), "0x00" === (e = m(e)) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function y(e) {
                return g.from(m(e))
            }

            function b(e) {
                var r = g.from(e).toHexString();
                return "-" === r[0] ? new f("-" + r.substring(3), 16) : new f(r.substring(2), 16)
            }

            function E(e, r, t) {
                var n = {
                    fault: e,
                    operation: r
                };
                return null != t && (n.value = t), l.throwError(e, u.Yd.errors.NUMERIC_FAULT, n)
            }
        },
        21331: function(e, r, t) {
            "use strict";
            t.d(r, {
                lE: function() {
                    return u
                },
                $m: function() {
                    return h
                },
                Dv: function() {
                    return l
                },
                _t: function() {
                    return s
                },
                A7: function() {
                    return c
                }
            });
            var n = new(t(80425).Yd)("bytes/5.7.0");

            function i(e) {
                return !!e.toHexString
            }

            function o(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return o(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function a(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function s(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!a(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!a(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function u(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), o(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e) && (e = e.toHexString()), c(e)) {
                    var a = e.substring(2);
                    a.length % 2 && ("left" === r.hexPad ? a = "0" + a : "right" === r.hexPad ? a += "0" : n.throwArgumentError("hex data is odd-length", "value", e));
                    for (var u = [], f = 0; f < a.length; f += 2) u.push(parseInt(a.substring(f, f + 2), 16));
                    return o(new Uint8Array(u))
                }
                return s(e) ? o(new Uint8Array(e)) : n.throwArgumentError("invalid arrayify value", "value", e)
            }

            function c(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var f = "0123456789abcdef";

            function l(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = f[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e)) return e.toHexString();
                if (c(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : n.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (s(e)) {
                    for (var o = "0x", a = 0; a < e.length; a++) {
                        var u = e[a];
                        o += f[(240 & u) >> 4] + f[15 & u]
                    }
                    return o
                }
                return n.throwArgumentError("invalid hexlify value", "value", e)
            }

            function h(e, r) {
                for ("string" !== typeof e ? e = l(e) : c(e) || n.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && n.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }
        },
        80425: function(e, r, t) {
            "use strict";
            t.d(r, {
                Yd: function() {
                    return p
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f
        },
        60347: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                arrayify: function() {
                    return w
                },
                concat: function() {
                    return A
                },
                hexConcat: function() {
                    return _
                },
                hexDataLength: function() {
                    return P
                },
                hexDataSlice: function() {
                    return S
                },
                hexStripZeros: function() {
                    return O
                },
                hexValue: function() {
                    return T
                },
                hexZeroPad: function() {
                    return C
                },
                hexlify: function() {
                    return I
                },
                isBytes: function() {
                    return E
                },
                isBytesLike: function() {
                    return y
                },
                isHexString: function() {
                    return R
                },
                joinSignature: function() {
                    return L
                },
                splitSignature: function() {
                    return U
                },
                stripZeros: function() {
                    return k
                },
                zeroPad: function() {
                    return N
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f;
            var v = new p("bytes/5.6.1");

            function g(e) {
                return !!e.toHexString
            }

            function m(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return m(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function y(e) {
                return R(e) && !(e.length % 2) || E(e)
            }

            function b(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function E(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!b(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!b(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function w(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), m(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e) && (e = e.toHexString()), R(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : v.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return m(new Uint8Array(i))
                }
                return E(e) ? m(new Uint8Array(e)) : v.throwArgumentError("invalid arrayify value", "value", e)
            }

            function A(e) {
                var r = e.map((function(e) {
                        return w(e)
                    })),
                    t = r.reduce((function(e, r) {
                        return e + r.length
                    }), 0),
                    n = new Uint8Array(t);
                return r.reduce((function(e, r) {
                    return n.set(r, e), e + r.length
                }), 0), m(n)
            }

            function k(e) {
                var r = w(e);
                if (0 === r.length) return r;
                for (var t = 0; t < r.length && 0 === r[t];) t++;
                return t && (r = r.slice(t)), r
            }

            function N(e, r) {
                (e = w(e)).length > r && v.throwArgumentError("value out of range", "value", arguments[0]);
                var t = new Uint8Array(r);
                return t.set(e, r - e.length), m(t)
            }

            function R(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var x = "0123456789abcdef";

            function I(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = x[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e)) return e.toHexString();
                if (R(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : v.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (E(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += x[(240 & o) >> 4] + x[15 & o]
                    }
                    return n
                }
                return v.throwArgumentError("invalid hexlify value", "value", e)
            }

            function P(e) {
                if ("string" !== typeof e) e = I(e);
                else if (!R(e) || e.length % 2) return null;
                return (e.length - 2) / 2
            }

            function S(e, r, t) {
                return "string" !== typeof e ? e = I(e) : (!R(e) || e.length % 2) && v.throwArgumentError("invalid hexData", "value", e), r = 2 + 2 * r, null != t ? "0x" + e.substring(r, 2 + 2 * t) : "0x" + e.substring(r)
            }

            function _(e) {
                var r = "0x";
                return e.forEach((function(e) {
                    r += I(e).substring(2)
                })), r
            }

            function T(e) {
                var r = O(I(e, {
                    hexPad: "left"
                }));
                return "0x" === r ? "0x0" : r
            }

            function O(e) {
                "string" !== typeof e && (e = I(e)), R(e) || v.throwArgumentError("invalid hex string", "value", e), e = e.substring(2);
                for (var r = 0; r < e.length && "0" === e[r];) r++;
                return "0x" + e.substring(r)
            }

            function C(e, r) {
                for ("string" !== typeof e ? e = I(e) : R(e) || v.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && v.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }

            function U(e) {
                var r = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (y(e)) {
                    var t = w(e);
                    64 === t.length ? (r.v = 27 + (t[32] >> 7), t[32] &= 127, r.r = I(t.slice(0, 32)), r.s = I(t.slice(32, 64))) : 65 === t.length ? (r.r = I(t.slice(0, 32)), r.s = I(t.slice(32, 64)), r.v = t[64]) : v.throwArgumentError("invalid signature string", "signature", e), r.v < 27 && (0 === r.v || 1 === r.v ? r.v += 27 : v.throwArgumentError("signature invalid v byte", "signature", e)), r.recoveryParam = 1 - r.v % 2, r.recoveryParam && (t[32] |= 128), r._vs = I(t.slice(32, 64))
                } else {
                    if (r.r = e.r, r.s = e.s, r.v = e.v, r.recoveryParam = e.recoveryParam, r._vs = e._vs, null != r._vs) {
                        var n = N(w(r._vs), 32);
                        r._vs = I(n);
                        var i = n[0] >= 128 ? 1 : 0;
                        null == r.recoveryParam ? r.recoveryParam = i : r.recoveryParam !== i && v.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), n[0] &= 127;
                        var o = I(n);
                        null == r.s ? r.s = o : r.s !== o && v.throwArgumentError("signature v mismatch _vs", "signature", e)
                    }
                    if (null == r.recoveryParam) null == r.v ? v.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === r.v || 1 === r.v ? r.recoveryParam = r.v : r.recoveryParam = 1 - r.v % 2;
                    else if (null == r.v) r.v = 27 + r.recoveryParam;
                    else {
                        var a = 0 === r.v || 1 === r.v ? r.v : 1 - r.v % 2;
                        r.recoveryParam !== a && v.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                    }
                    null != r.r && R(r.r) ? r.r = C(r.r, 32) : v.throwArgumentError("signature missing or invalid r", "signature", e), null != r.s && R(r.s) ? r.s = C(r.s, 32) : v.throwArgumentError("signature missing or invalid s", "signature", e);
                    var s = w(r.s);
                    s[0] >= 128 && v.throwArgumentError("signature s out of range", "signature", e), r.recoveryParam && (s[0] |= 128);
                    var u = I(s);
                    r._vs && (R(r._vs) || v.throwArgumentError("signature invalid _vs", "signature", e), r._vs = C(r._vs, 32)), null == r._vs ? r._vs = u : r._vs !== u && v.throwArgumentError("signature _vs mismatch v and s", "signature", e)
                }
                return r.yParityAndS = r._vs, r.compact = r.r + r.yParityAndS.substring(2), r
            }

            function L(e) {
                return I(A([(e = U(e)).r, e.s, e.recoveryParam ? "0x1c" : "0x1b"]))
            }
        },
        2430: function(e, r, t) {
            "use strict";
            t.d(r, {
                i: function() {
                    return n
                }
            });
            var n = "hash/5.6.1"
        },
        81952: function(e, r, t) {
            "use strict";
            t.d(r, {
                id: function() {
                    return o
                }
            });
            var n = t(26034),
                i = t(84827);

            function o(e) {
                return (0, n.w)((0, i.Y0)(e))
            }
        },
        86718: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                _TypedDataEncoder: function() {
                    return a.E
                },
                dnsEncode: function() {
                    return i.Kn
                },
                hashMessage: function() {
                    return o.r
                },
                id: function() {
                    return n.id
                },
                isValidName: function() {
                    return i.r1
                },
                messagePrefix: function() {
                    return o.B
                },
                namehash: function() {
                    return i.VM
                }
            });
            var n = t(81952),
                i = t(18141),
                o = t(35850),
                a = t(13403)
        },
        35850: function(e, r, t) {
            "use strict";
            t.d(r, {
                B: function() {
                    return a
                },
                r: function() {
                    return s
                }
            });
            var n = t(39253),
                i = t(26034),
                o = t(84827),
                a = "\x19Ethereum Signed Message:\n";

            function s(e) {
                return "string" === typeof e && (e = (0, o.Y0)(e)), (0, i.w)((0, n.zo)([(0, o.Y0)(a), (0, o.Y0)(String(e.length)), e]))
            }
        },
        18141: function(e, r, t) {
            "use strict";
            t.d(r, {
                Kn: function() {
                    return N
                },
                r1: function() {
                    return A
                },
                VM: function() {
                    return k
                }
            });
            var n = t(39253),
                i = t(84827);

            function o(e, r) {
                r || (r = function(e) {
                    return [parseInt(e, 16)]
                });
                var t = 0,
                    n = {};
                return e.split(",").forEach((function(e) {
                    var i = e.split(":");
                    t += parseInt(i[0], 16), n[t] = r(i[1])
                })), n
            }

            function a(e) {
                var r = 0;
                return e.split(",").map((function(e) {
                    var t = e.split("-");
                    return 1 === t.length ? t[1] = "0" : "" === t[1] && (t[1] = "1"), {
                        l: r + parseInt(t[0], 16),
                        h: r = parseInt(t[1], 16)
                    }
                }))
            }

            function s(e, r) {
                for (var t = 0, n = 0; n < r.length; n++) {
                    var i = r[n];
                    if (e >= (t += i.l) && e <= t + i.h && (e - t) % (i.d || 1) === 0) {
                        if (i.e && -1 !== i.e.indexOf(e - t)) continue;
                        return i
                    }
                }
                return null
            }
            var u = a("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),
                c = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((function(e) {
                    return parseInt(e, 16)
                })),
                f = [{
                    h: 25,
                    s: 32,
                    l: 65
                }, {
                    h: 30,
                    s: 32,
                    e: [23],
                    l: 127
                }, {
                    h: 54,
                    s: 1,
                    e: [48],
                    l: 64,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 57,
                    d: 2
                }, {
                    h: 44,
                    s: 1,
                    l: 17,
                    d: 2
                }, {
                    h: 10,
                    s: 1,
                    e: [2, 6, 8],
                    l: 61,
                    d: 2
                }, {
                    h: 16,
                    s: 1,
                    l: 68,
                    d: 2
                }, {
                    h: 84,
                    s: 1,
                    e: [18, 24, 66],
                    l: 19,
                    d: 2
                }, {
                    h: 26,
                    s: 32,
                    e: [17],
                    l: 435
                }, {
                    h: 22,
                    s: 1,
                    l: 71,
                    d: 2
                }, {
                    h: 15,
                    s: 80,
                    l: 40
                }, {
                    h: 31,
                    s: 32,
                    l: 16
                }, {
                    h: 32,
                    s: 1,
                    l: 80,
                    d: 2
                }, {
                    h: 52,
                    s: 1,
                    l: 42,
                    d: 2
                }, {
                    h: 12,
                    s: 1,
                    l: 55,
                    d: 2
                }, {
                    h: 40,
                    s: 1,
                    e: [38],
                    l: 15,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 48,
                    d: 2
                }, {
                    h: 37,
                    s: 48,
                    l: 49
                }, {
                    h: 148,
                    s: 1,
                    l: 6351,
                    d: 2
                }, {
                    h: 88,
                    s: 1,
                    l: 160,
                    d: 2
                }, {
                    h: 15,
                    s: 16,
                    l: 704
                }, {
                    h: 25,
                    s: 26,
                    l: 854
                }, {
                    h: 25,
                    s: 32,
                    l: 55915
                }, {
                    h: 37,
                    s: 40,
                    l: 1247
                }, {
                    h: 25,
                    s: -119711,
                    l: 53248
                }, {
                    h: 25,
                    s: -119763,
                    l: 52
                }, {
                    h: 25,
                    s: -119815,
                    l: 52
                }, {
                    h: 25,
                    s: -119867,
                    e: [1, 4, 5, 7, 8, 11, 12, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -119919,
                    l: 52
                }, {
                    h: 24,
                    s: -119971,
                    e: [2, 7, 8, 17],
                    l: 52
                }, {
                    h: 24,
                    s: -120023,
                    e: [2, 7, 13, 15, 16, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -120075,
                    l: 52
                }, {
                    h: 25,
                    s: -120127,
                    l: 52
                }, {
                    h: 25,
                    s: -120179,
                    l: 52
                }, {
                    h: 25,
                    s: -120231,
                    l: 52
                }, {
                    h: 25,
                    s: -120283,
                    l: 52
                }, {
                    h: 25,
                    s: -120335,
                    l: 52
                }, {
                    h: 24,
                    s: -119543,
                    e: [17],
                    l: 56
                }, {
                    h: 24,
                    s: -119601,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119659,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119717,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119775,
                    e: [17],
                    l: 58
                }],
                l = o("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),
                h = o("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),
                d = o("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", (function(e) {
                    if (e.length % 4 !== 0) throw new Error("bad data");
                    for (var r = [], t = 0; t < e.length; t += 4) r.push(parseInt(e.substring(t, t + 4), 16));
                    return r
                })),
                p = a("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

            function v(e) {
                if (e.match(/^[a-z0-9-]*$/i) && e.length <= 59) return e.toLowerCase();
                var r, t = (0, i.XL)(e);
                r = t.map((function(e) {
                    if (c.indexOf(e) >= 0) return [];
                    if (e >= 65024 && e <= 65039) return [];
                    var r = function(e) {
                        var r = s(e, f);
                        if (r) return [e + r.s];
                        var t = l[e];
                        if (t) return t;
                        var n = h[e];
                        return n ? [e + n[0]] : d[e] || null
                    }(e);
                    return r || [e]
                })), t = r.reduce((function(e, r) {
                    return r.forEach((function(r) {
                        e.push(r)
                    })), e
                }), []), (t = (0, i.XL)((0, i.uu)(t), i.Uj.NFKC)).forEach((function(e) {
                    if (s(e, p)) throw new Error("STRINGPREP_CONTAINS_PROHIBITED")
                })), t.forEach((function(e) {
                    if (s(e, u)) throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")
                }));
                var n = (0, i.uu)(t);
                if ("-" === n.substring(0, 1) || "--" === n.substring(2, 4) || "-" === n.substring(n.length - 1)) throw new Error("invalid hyphen");
                return n
            }
            var g = t(26034),
                m = t(9730),
                y = t(2430),
                b = new m.Yd(y.i),
                E = new Uint8Array(32);
            E.fill(0);
            var w = new RegExp("^((.*)\\.)?([^.]+)$");

            function A(e) {
                try {
                    for (var r = e.split("."), t = 0; t < r.length; t++)
                        if (0 === v(r[t]).length) throw new Error("empty");
                    return !0
                } catch (n) {}
                return !1
            }

            function k(e) {
                "string" !== typeof e && b.throwArgumentError("invalid ENS name; not a string", "name", e);
                for (var r = e, t = E; r.length;) {
                    var o = r.match(w);
                    null != o && "" !== o[2] || b.throwArgumentError("invalid ENS address; missing component", "name", e);
                    var a = (0, i.Y0)(v(o[3]));
                    t = (0, g.w)((0, n.zo)([t, (0, g.w)(a)])), r = o[2] || ""
                }
                return (0, n.Dv)(t)
            }

            function N(e) {
                return (0, n.Dv)((0, n.zo)(e.split(".").map((function(e) {
                    var r = (0, i.Y0)("_" + v(e));
                    return r[0] = r.length - 1, r
                })))) + "00"
            }
        },
        13403: function(e, r, t) {
            "use strict";
            t.d(r, {
                E: function() {
                    return ee
                }
            });
            var n = t(27166),
                i = t(27853),
                o = t(84531),
                a = t(39253),
                s = t(27239),
                u = t.n(s),
                c = t(9730),
                f = u().BN,
                l = new c.Yd("bignumber/5.7.0"),
                h = {},
                d = 9007199254740991;
            var p = !1,
                v = function() {
                    function e(r, t) {
                        (0, i.Z)(this, e), r !== h && l.throwError("cannot call constructor directly; use BigNumber.from", c.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "new (BigNumber)"
                        }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                    }
                    return (0, o.Z)(e, [{
                        key: "fromTwos",
                        value: function(e) {
                            return m(y(this).fromTwos(e))
                        }
                    }, {
                        key: "toTwos",
                        value: function(e) {
                            return m(y(this).toTwos(e))
                        }
                    }, {
                        key: "abs",
                        value: function() {
                            return "-" === this._hex[0] ? e.from(this._hex.substring(1)) : this
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            return m(y(this).add(y(e)))
                        }
                    }, {
                        key: "sub",
                        value: function(e) {
                            return m(y(this).sub(y(e)))
                        }
                    }, {
                        key: "div",
                        value: function(r) {
                            return e.from(r).isZero() && b("division-by-zero", "div"), m(y(this).div(y(r)))
                        }
                    }, {
                        key: "mul",
                        value: function(e) {
                            return m(y(this).mul(y(e)))
                        }
                    }, {
                        key: "mod",
                        value: function(e) {
                            var r = y(e);
                            return r.isNeg() && b("division-by-zero", "mod"), m(y(this).umod(r))
                        }
                    }, {
                        key: "pow",
                        value: function(e) {
                            var r = y(e);
                            return r.isNeg() && b("negative-power", "pow"), m(y(this).pow(r))
                        }
                    }, {
                        key: "and",
                        value: function(e) {
                            var r = y(e);
                            return (this.isNegative() || r.isNeg()) && b("unbound-bitwise-result", "and"), m(y(this).and(r))
                        }
                    }, {
                        key: "or",
                        value: function(e) {
                            var r = y(e);
                            return (this.isNegative() || r.isNeg()) && b("unbound-bitwise-result", "or"), m(y(this).or(r))
                        }
                    }, {
                        key: "xor",
                        value: function(e) {
                            var r = y(e);
                            return (this.isNegative() || r.isNeg()) && b("unbound-bitwise-result", "xor"), m(y(this).xor(r))
                        }
                    }, {
                        key: "mask",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && b("negative-width", "mask"), m(y(this).maskn(e))
                        }
                    }, {
                        key: "shl",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && b("negative-width", "shl"), m(y(this).shln(e))
                        }
                    }, {
                        key: "shr",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && b("negative-width", "shr"), m(y(this).shrn(e))
                        }
                    }, {
                        key: "eq",
                        value: function(e) {
                            return y(this).eq(y(e))
                        }
                    }, {
                        key: "lt",
                        value: function(e) {
                            return y(this).lt(y(e))
                        }
                    }, {
                        key: "lte",
                        value: function(e) {
                            return y(this).lte(y(e))
                        }
                    }, {
                        key: "gt",
                        value: function(e) {
                            return y(this).gt(y(e))
                        }
                    }, {
                        key: "gte",
                        value: function(e) {
                            return y(this).gte(y(e))
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._hex[0]
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return y(this).isZero()
                        }
                    }, {
                        key: "toNumber",
                        value: function() {
                            try {
                                return y(this).toNumber()
                            } catch (e) {
                                b("overflow", "toNumber", this.toString())
                            }
                            return null
                        }
                    }, {
                        key: "toBigInt",
                        value: function() {
                            try {
                                return BigInt(this.toString())
                            } catch (e) {}
                            return l.throwError("this platform does not support BigInt", c.Yd.errors.UNSUPPORTED_OPERATION, {
                                value: this.toString()
                            })
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return arguments.length > 0 && (10 === arguments[0] ? p || (p = !0, l.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? l.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", c.Yd.errors.UNEXPECTED_ARGUMENT, {}) : l.throwError("BigNumber.toString does not accept parameters", c.Yd.errors.UNEXPECTED_ARGUMENT, {})), y(this).toString(10)
                        }
                    }, {
                        key: "toHexString",
                        value: function() {
                            return this._hex
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            return {
                                type: "BigNumber",
                                hex: this.toHexString()
                            }
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            if ("string" === typeof r) return r.match(/^-?0x[0-9a-f]+$/i) ? new e(h, g(r)) : r.match(/^-?[0-9]+$/) ? new e(h, g(new f(r))) : l.throwArgumentError("invalid BigNumber string", "value", r);
                            if ("number" === typeof r) return r % 1 && b("underflow", "BigNumber.from", r), (r >= d || r <= -d) && b("overflow", "BigNumber.from", r), e.from(String(r));
                            var t = r;
                            if ("bigint" === typeof t) return e.from(t.toString());
                            if ((0, a._t)(t)) return e.from((0, a.Dv)(t));
                            if (t)
                                if (t.toHexString) {
                                    var n = t.toHexString();
                                    if ("string" === typeof n) return e.from(n)
                                } else {
                                    var i = t._hex;
                                    if (null == i && "BigNumber" === t.type && (i = t.hex), "string" === typeof i && ((0, a.A7)(i) || "-" === i[0] && (0, a.A7)(i.substring(1)))) return e.from(i)
                                }
                            return l.throwArgumentError("invalid BigNumber value", "value", r)
                        }
                    }, {
                        key: "isBigNumber",
                        value: function(e) {
                            return !(!e || !e._isBigNumber)
                        }
                    }]), e
                }();

            function g(e) {
                if ("string" !== typeof e) return g(e.toString(16));
                if ("-" === e[0]) return "-" === (e = e.substring(1))[0] && l.throwArgumentError("invalid hex", "value", e), "0x00" === (e = g(e)) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function m(e) {
                return v.from(g(e))
            }

            function y(e) {
                var r = v.from(e).toHexString();
                return "-" === r[0] ? new f("-" + r.substring(3), 16) : new f(r.substring(2), 16)
            }

            function b(e, r, t) {
                var n = {
                    fault: e,
                    operation: r
                };
                return null != t && (n.value = t), l.throwError(e, c.Yd.errors.NUMERIC_FAULT, n)
            }
            var E = t(26034),
                w = new c.Yd("address/5.7.0");

            function A(e) {
                (0, a.A7)(e, 20) || w.throwArgumentError("invalid address", "address", e);
                for (var r = (e = e.toLowerCase()).substring(2).split(""), t = new Uint8Array(40), n = 0; n < 40; n++) t[n] = r[n].charCodeAt(0);
                for (var i = (0, a.lE)((0, E.w)(t)), o = 0; o < 40; o += 2) i[o >> 1] >> 4 >= 8 && (r[o] = r[o].toUpperCase()), (15 & i[o >> 1]) >= 8 && (r[o + 1] = r[o + 1].toUpperCase());
                return "0x" + r.join("")
            }
            for (var k = {}, N = 0; N < 10; N++) k[String(N)] = String(N);
            for (var R = 0; R < 26; R++) k[String.fromCharCode(65 + R)] = String(10 + R);
            var x, I = Math.floor((x = 9007199254740991, Math.log10 ? Math.log10(x) : Math.log(x) / Math.LN10));

            function P(e) {
                for (var r = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map((function(e) {
                        return k[e]
                    })).join(""); r.length >= I;) {
                    var t = r.substring(0, I);
                    r = parseInt(t, 10) % 97 + r.substring(t.length)
                }
                for (var n = String(98 - parseInt(r, 10) % 97); n.length < 2;) n = "0" + n;
                return n
            }

            function S(e) {
                var r, t = null;
                if ("string" !== typeof e && w.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), t = A(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && w.throwArgumentError("bad address checksum", "address", e);
                else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (e.substring(2, 4) !== P(e) && w.throwArgumentError("bad icap checksum", "address", e), r = e.substring(4), t = new f(r, 36).toString(16); t.length < 40;) t = "0" + t;
                    t = A("0x" + t)
                } else w.throwArgumentError("invalid address", "address", e);
                return t
            }
            var _ = new c.Yd("properties/5.7.0");

            function T(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }

            function O(e) {
                var r = {};
                for (var t in e) r[t] = e[t];
                return r
            }
            var C = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function U(e) {
                if (void 0 === e || null === e || C[typeof e]) return !0;
                if (Array.isArray(e) || "object" === typeof e) {
                    if (!Object.isFrozen(e)) return !1;
                    for (var r = Object.keys(e), t = 0; t < r.length; t++) {
                        var n = null;
                        try {
                            n = e[r[t]]
                        } catch (i) {
                            continue
                        }
                        if (!U(n)) return !1
                    }
                    return !0
                }
                return _.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function L(e) {
                if (U(e)) return e;
                if (Array.isArray(e)) return Object.freeze(e.map((function(e) {
                    return F(e)
                })));
                if ("object" === typeof e) {
                    var r = {};
                    for (var t in e) {
                        var n = e[t];
                        void 0 !== n && T(r, t, F(n))
                    }
                    return r
                }
                return _.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function F(e) {
                return L(e)
            }
            var D = t(2430),
                M = t(81952),
                B = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                G = new c.Yd(D.i),
                Z = new Uint8Array(32);
            Z.fill(0);
            var j = v.from(-1),
                K = v.from(0),
                z = v.from(1),
                q = v.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
            var H = (0, a.$m)(z.toHexString(), 32),
                W = (0, a.$m)(K.toHexString(), 32),
                V = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                J = ["name", "version", "chainId", "verifyingContract", "salt"];

            function X(e) {
                return function(r) {
                    return "string" !== typeof r && G.throwArgumentError("invalid domain value for ".concat(JSON.stringify(e)), "domain.".concat(e), r), r
                }
            }
            var Q = {
                name: X("name"),
                version: X("version"),
                chainId: function(e) {
                    try {
                        return v.from(e).toString()
                    } catch (r) {}
                    return G.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", e)
                },
                verifyingContract: function(e) {
                    try {
                        return S(e).toLowerCase()
                    } catch (r) {}
                    return G.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", e)
                },
                salt: function(e) {
                    try {
                        var r = (0, a.lE)(e);
                        if (32 !== r.length) throw new Error("bad length");
                        return (0, a.Dv)(r)
                    } catch (t) {}
                    return G.throwArgumentError('invalid domain value "salt"', "domain.salt", e)
                }
            };

            function Y(e) {
                var r = e.match(/^(u?)int(\d*)$/);
                if (r) {
                    var t = "" === r[1],
                        n = parseInt(r[2] || "256");
                    (n % 8 !== 0 || n > 256 || r[2] && r[2] !== String(n)) && G.throwArgumentError("invalid numeric width", "type", e);
                    var i = q.mask(t ? n - 1 : n),
                        o = t ? i.add(z).mul(j) : K;
                    return function(r) {
                        var t = v.from(r);
                        return (t.lt(o) || t.gt(i)) && G.throwArgumentError("value out-of-bounds for ".concat(e), "value", r), (0, a.$m)(t.toTwos(256).toHexString(), 32)
                    }
                }
                var s = e.match(/^bytes(\d+)$/);
                if (s) {
                    var u = parseInt(s[1]);
                    return (0 === u || u > 32 || s[1] !== String(u)) && G.throwArgumentError("invalid bytes width", "type", e),
                        function(r) {
                            return (0, a.lE)(r).length !== u && G.throwArgumentError("invalid length for ".concat(e), "value", r),
                                function(e) {
                                    var r = (0, a.lE)(e),
                                        t = r.length % 32;
                                    return t ? (0, a.xs)([r, Z.slice(t)]) : (0, a.Dv)(r)
                                }(r)
                        }
                }
                switch (e) {
                    case "address":
                        return function(e) {
                            return (0, a.$m)(S(e), 32)
                        };
                    case "bool":
                        return function(e) {
                            return e ? H : W
                        };
                    case "bytes":
                        return function(e) {
                            return (0, E.w)(e)
                        };
                    case "string":
                        return function(e) {
                            return (0, M.id)(e)
                        }
                }
                return null
            }

            function $(e, r) {
                return "".concat(e, "(").concat(r.map((function(e) {
                    var r = e.name;
                    return e.type + " " + r
                })).join(","), ")")
            }
            var ee = function() {
                function e(r) {
                    (0, i.Z)(this, e), T(this, "types", Object.freeze(F(r))), T(this, "_encoderCache", {}), T(this, "_types", {});
                    var t = {},
                        n = {},
                        o = {};
                    Object.keys(r).forEach((function(e) {
                        t[e] = {}, n[e] = [], o[e] = {}
                    }));
                    var a = function(e) {
                        var i = {};
                        r[e].forEach((function(o) {
                            i[o.name] && G.throwArgumentError("duplicate variable name ".concat(JSON.stringify(o.name), " in ").concat(JSON.stringify(e)), "types", r), i[o.name] = !0;
                            var a = o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                            a === e && G.throwArgumentError("circular type reference to ".concat(JSON.stringify(a)), "types", r), Y(a) || (n[a] || G.throwArgumentError("unknown type ".concat(JSON.stringify(a)), "types", r), n[a].push(e), t[e][a] = !0)
                        }))
                    };
                    for (var s in r) a(s);
                    var u = Object.keys(n).filter((function(e) {
                        return 0 === n[e].length
                    }));
                    for (var c in 0 === u.length ? G.throwArgumentError("missing primary type", "types", r) : u.length > 1 && G.throwArgumentError("ambiguous primary types or unused types: ".concat(u.map((function(e) {
                                return JSON.stringify(e)
                            })).join(", ")), "types", r), T(this, "primaryType", u[0]),
                            function e(i, a) {
                                a[i] && G.throwArgumentError("circular type reference to ".concat(JSON.stringify(i)), "types", r), a[i] = !0, Object.keys(t[i]).forEach((function(r) {
                                    n[r] && (e(r, a), Object.keys(a).forEach((function(e) {
                                        o[e][r] = !0
                                    })))
                                })), delete a[i]
                            }(this.primaryType, {}), o) {
                        var f = Object.keys(o[c]);
                        f.sort(), this._types[c] = $(c, r[c]) + f.map((function(e) {
                            return $(e, r[e])
                        })).join("")
                    }
                }
                return (0, o.Z)(e, [{
                    key: "getEncoder",
                    value: function(e) {
                        var r = this._encoderCache[e];
                        return r || (r = this._encoderCache[e] = this._getEncoder(e)), r
                    }
                }, {
                    key: "_getEncoder",
                    value: function(e) {
                        var r = this,
                            t = Y(e);
                        if (t) return t;
                        var n = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                        if (n) {
                            var i = n[1],
                                o = this.getEncoder(i),
                                s = parseInt(n[3]);
                            return function(e) {
                                s >= 0 && e.length !== s && G.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e);
                                var t = e.map(o);
                                return r._types[i] && (t = t.map(E.w)), (0, E.w)((0, a.xs)(t))
                            }
                        }
                        var u = this.types[e];
                        if (u) {
                            var c = (0, M.id)(this._types[e]);
                            return function(e) {
                                var t = u.map((function(t) {
                                    var n = t.name,
                                        i = t.type,
                                        o = r.getEncoder(i)(e[n]);
                                    return r._types[i] ? (0, E.w)(o) : o
                                }));
                                return t.unshift(c), (0, a.xs)(t)
                            }
                        }
                        return G.throwArgumentError("unknown type: ".concat(e), "type", e)
                    }
                }, {
                    key: "encodeType",
                    value: function(e) {
                        var r = this._types[e];
                        return r || G.throwArgumentError("unknown type: ".concat(JSON.stringify(e)), "name", e), r
                    }
                }, {
                    key: "encodeData",
                    value: function(e, r) {
                        return this.getEncoder(e)(r)
                    }
                }, {
                    key: "hashStruct",
                    value: function(e, r) {
                        return (0, E.w)(this.encodeData(e, r))
                    }
                }, {
                    key: "encode",
                    value: function(e) {
                        return this.encodeData(this.primaryType, e)
                    }
                }, {
                    key: "hash",
                    value: function(e) {
                        return this.hashStruct(this.primaryType, e)
                    }
                }, {
                    key: "_visit",
                    value: function(e, r, t) {
                        var n = this;
                        if (Y(e)) return t(e, r);
                        var i = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                        if (i) {
                            var o = i[1],
                                a = parseInt(i[3]);
                            return a >= 0 && r.length !== a && G.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", r), r.map((function(e) {
                                return n._visit(o, e, t)
                            }))
                        }
                        var s = this.types[e];
                        return s ? s.reduce((function(e, i) {
                            var o = i.name,
                                a = i.type;
                            return e[o] = n._visit(a, r[o], t), e
                        }), {}) : G.throwArgumentError("unknown type: ".concat(e), "type", e)
                    }
                }, {
                    key: "visit",
                    value: function(e, r) {
                        return this._visit(this.primaryType, e, r)
                    }
                }], [{
                    key: "from",
                    value: function(r) {
                        return new e(r)
                    }
                }, {
                    key: "getPrimaryType",
                    value: function(r) {
                        return e.from(r).primaryType
                    }
                }, {
                    key: "hashStruct",
                    value: function(r, t, n) {
                        return e.from(t).hashStruct(r, n)
                    }
                }, {
                    key: "hashDomain",
                    value: function(r) {
                        var t = [];
                        for (var n in r) {
                            var i = V[n];
                            i || G.throwArgumentError("invalid typed-data domain key: ".concat(JSON.stringify(n)), "domain", r), t.push({
                                name: n,
                                type: i
                            })
                        }
                        return t.sort((function(e, r) {
                            return J.indexOf(e.name) - J.indexOf(r.name)
                        })), e.hashStruct("EIP712Domain", {
                            EIP712Domain: t
                        }, r)
                    }
                }, {
                    key: "encode",
                    value: function(r, t, n) {
                        return (0, a.xs)(["0x1901", e.hashDomain(r), e.from(t).hash(n)])
                    }
                }, {
                    key: "hash",
                    value: function(r, t, n) {
                        return (0, E.w)(e.encode(r, t, n))
                    }
                }, {
                    key: "resolveNames",
                    value: function(r, t, i, o) {
                        return B(this, void 0, void 0, (0, n.Z)().mark((function s() {
                            var u, c, f;
                            return (0, n.Z)().wrap((function(s) {
                                for (;;) switch (s.prev = s.next) {
                                    case 0:
                                        r = O(r), u = {}, r.verifyingContract && !(0, a.A7)(r.verifyingContract, 20) && (u[r.verifyingContract] = "0x"), (c = e.from(t)).visit(i, (function(e, r) {
                                            return "address" !== e || (0, a.A7)(r, 20) || (u[r] = "0x"), r
                                        })), s.t0 = (0, n.Z)().keys(u);
                                    case 6:
                                        if ((s.t1 = s.t0()).done) {
                                            s.next = 13;
                                            break
                                        }
                                        return f = s.t1.value, s.next = 10, o(f);
                                    case 10:
                                        u[f] = s.sent, s.next = 6;
                                        break;
                                    case 13:
                                        return r.verifyingContract && u[r.verifyingContract] && (r.verifyingContract = u[r.verifyingContract]), i = c.visit(i, (function(e, r) {
                                            return "address" === e && u[r] ? u[r] : r
                                        })), s.abrupt("return", {
                                            domain: r,
                                            value: i
                                        });
                                    case 16:
                                    case "end":
                                        return s.stop()
                                }
                            }), s)
                        })))
                    }
                }, {
                    key: "getPayload",
                    value: function(r, t, n) {
                        e.hashDomain(r);
                        var i = {},
                            o = [];
                        J.forEach((function(e) {
                            var t = r[e];
                            null != t && (i[e] = Q[e](t), o.push({
                                name: e,
                                type: V[e]
                            }))
                        }));
                        var s = e.from(t),
                            u = O(t);
                        return u.EIP712Domain ? G.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", t) : u.EIP712Domain = o, s.encode(n), {
                            types: u,
                            domain: i,
                            primaryType: s.primaryType,
                            message: s.visit(n, (function(e, r) {
                                if (e.match(/^bytes(\d*)/)) return (0, a.Dv)((0, a.lE)(r));
                                if (e.match(/^u?int/)) return v.from(r).toString();
                                switch (e) {
                                    case "address":
                                        return r.toLowerCase();
                                    case "bool":
                                        return !!r;
                                    case "string":
                                        return "string" !== typeof r && G.throwArgumentError("invalid string", "value", r), r
                                }
                                return G.throwArgumentError("unsupported type", "type", e)
                            }))
                        }
                    }
                }]), e
            }()
        },
        39253: function(e, r, t) {
            "use strict";
            t.d(r, {
                lE: function() {
                    return u
                },
                zo: function() {
                    return c
                },
                xs: function() {
                    return d
                },
                $m: function() {
                    return p
                },
                Dv: function() {
                    return h
                },
                _t: function() {
                    return s
                },
                A7: function() {
                    return f
                }
            });
            var n = new(t(9730).Yd)("bytes/5.7.0");

            function i(e) {
                return !!e.toHexString
            }

            function o(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return o(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function a(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function s(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!a(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!a(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function u(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), o(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e) && (e = e.toHexString()), f(e)) {
                    var a = e.substring(2);
                    a.length % 2 && ("left" === r.hexPad ? a = "0" + a : "right" === r.hexPad ? a += "0" : n.throwArgumentError("hex data is odd-length", "value", e));
                    for (var u = [], c = 0; c < a.length; c += 2) u.push(parseInt(a.substring(c, c + 2), 16));
                    return o(new Uint8Array(u))
                }
                return s(e) ? o(new Uint8Array(e)) : n.throwArgumentError("invalid arrayify value", "value", e)
            }

            function c(e) {
                var r = e.map((function(e) {
                        return u(e)
                    })),
                    t = r.reduce((function(e, r) {
                        return e + r.length
                    }), 0),
                    n = new Uint8Array(t);
                return r.reduce((function(e, r) {
                    return n.set(r, e), e + r.length
                }), 0), o(n)
            }

            function f(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var l = "0123456789abcdef";

            function h(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = l[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e)) return e.toHexString();
                if (f(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : n.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (s(e)) {
                    for (var o = "0x", a = 0; a < e.length; a++) {
                        var u = e[a];
                        o += l[(240 & u) >> 4] + l[15 & u]
                    }
                    return o
                }
                return n.throwArgumentError("invalid hexlify value", "value", e)
            }

            function d(e) {
                var r = "0x";
                return e.forEach((function(e) {
                    r += h(e).substring(2)
                })), r
            }

            function p(e, r) {
                for ("string" !== typeof e ? e = h(e) : f(e) || n.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && n.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }
        },
        26034: function(e, r, t) {
            "use strict";
            t.d(r, {
                w: function() {
                    return a
                }
            });
            var n = t(3425),
                i = t.n(n),
                o = t(39253);

            function a(e) {
                return "0x" + i().keccak_256((0, o.lE)(e))
            }
        },
        9730: function(e, r, t) {
            "use strict";
            t.d(r, {
                Yd: function() {
                    return p
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f
        },
        84827: function(e, r, t) {
            "use strict";
            t.d(r, {
                Uj: function() {
                    return n
                },
                uu: function() {
                    return l
                },
                Y0: function() {
                    return f
                },
                XL: function() {
                    return h
                }
            });
            var n, i, o = t(39253),
                a = new(t(9730).Yd)("strings/5.7.0");

            function s(e, r, t, n, o) {
                if (e === i.BAD_PREFIX || e === i.UNEXPECTED_CONTINUE) {
                    for (var a = 0, s = r + 1; s < t.length && t[s] >> 6 === 2; s++) a++;
                    return a
                }
                return e === i.OVERRUN ? t.length - r - 1 : 0
            }! function(e) {
                e.current = "", e.NFC = "NFC", e.NFD = "NFD", e.NFKC = "NFKC", e.NFKD = "NFKD"
            }(n || (n = {})),
            function(e) {
                e.UNEXPECTED_CONTINUE = "unexpected continuation byte", e.BAD_PREFIX = "bad codepoint prefix", e.OVERRUN = "string overrun", e.MISSING_CONTINUE = "missing continuation byte", e.OUT_OF_RANGE = "out of UTF-8 range", e.UTF16_SURROGATE = "UTF-16 surrogate", e.OVERLONG = "overlong representation"
            }(i || (i = {}));
            var u = Object.freeze({
                error: function(e, r, t, n, i) {
                    return a.throwArgumentError("invalid codepoint at offset ".concat(r, "; ").concat(e), "bytes", t)
                },
                ignore: s,
                replace: function(e, r, t, n, o) {
                    return e === i.OVERLONG ? (n.push(o), 0) : (n.push(65533), s(e, r, t))
                }
            });

            function c(e, r) {
                null == r && (r = u.error), e = (0, o.lE)(e);
                for (var t = [], n = 0; n < e.length;) {
                    var a = e[n++];
                    if (a >> 7 !== 0) {
                        var s = null,
                            c = null;
                        if (192 === (224 & a)) s = 1, c = 127;
                        else if (224 === (240 & a)) s = 2, c = 2047;
                        else {
                            if (240 !== (248 & a)) {
                                n += r(128 === (192 & a) ? i.UNEXPECTED_CONTINUE : i.BAD_PREFIX, n - 1, e, t);
                                continue
                            }
                            s = 3, c = 65535
                        }
                        if (n - 1 + s >= e.length) n += r(i.OVERRUN, n - 1, e, t);
                        else {
                            for (var f = a & (1 << 8 - s - 1) - 1, l = 0; l < s; l++) {
                                var h = e[n];
                                if (128 != (192 & h)) {
                                    n += r(i.MISSING_CONTINUE, n, e, t), f = null;
                                    break
                                }
                                f = f << 6 | 63 & h, n++
                            }
                            null !== f && (f > 1114111 ? n += r(i.OUT_OF_RANGE, n - 1 - s, e, t, f) : f >= 55296 && f <= 57343 ? n += r(i.UTF16_SURROGATE, n - 1 - s, e, t, f) : f <= c ? n += r(i.OVERLONG, n - 1 - s, e, t, f) : t.push(f))
                        }
                    } else t.push(a)
                }
                return t
            }

            function f(e) {
                var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current;
                r != n.current && (a.checkNormalize(), e = e.normalize(r));
                for (var t = [], i = 0; i < e.length; i++) {
                    var s = e.charCodeAt(i);
                    if (s < 128) t.push(s);
                    else if (s < 2048) t.push(s >> 6 | 192), t.push(63 & s | 128);
                    else if (55296 == (64512 & s)) {
                        i++;
                        var u = e.charCodeAt(i);
                        if (i >= e.length || 56320 !== (64512 & u)) throw new Error("invalid utf-8 string");
                        var c = 65536 + ((1023 & s) << 10) + (1023 & u);
                        t.push(c >> 18 | 240), t.push(c >> 12 & 63 | 128), t.push(c >> 6 & 63 | 128), t.push(63 & c | 128)
                    } else t.push(s >> 12 | 224), t.push(s >> 6 & 63 | 128), t.push(63 & s | 128)
                }
                return (0, o.lE)(t)
            }

            function l(e) {
                return e.map((function(e) {
                    return e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode(55296 + (e >> 10 & 1023), 56320 + (1023 & e)))
                })).join("")
            }

            function h(e) {
                return c(f(e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current))
            }
        },
        93910: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                keccak256: function() {
                    return N
                }
            });
            var n = t(3425),
                i = t.n(n),
                o = t(27853),
                a = t(84531),
                s = !1,
                u = !1,
                c = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                f = c.default,
                l = null;
            var h, d, p = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(h || (h = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(d || (d = {}));
            var v = "0123456789abcdef",
                g = function() {
                    function e(r) {
                        (0, o.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, a.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == c[t] && this.throwArgumentError("invalid log level name", "logLevel", e), f > c[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (u) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += v[r[o] >> 4], t += v[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case d.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var s = r;
                                    switch (s) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + s;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case d.CALL_EXCEPTION:
                                case d.INSUFFICIENT_FUNDS:
                                case d.MISSING_NEW:
                                case d.NONCE_EXPIRED:
                                case d.REPLACEMENT_UNDERPRICED:
                                case d.TRANSACTION_REPLACED:
                                case d.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), p && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: p
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return l || (l = new e("logger/5.7.0")), l
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), s) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            u = !!r, s = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = c[r.toLowerCase()];
                            null != t ? f = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            g.errors = d, g.levels = h;
            var m = new g("bytes/5.7.0");

            function y(e) {
                return !!e.toHexString
            }

            function b(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return b(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function E(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function w(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!E(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!E(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function A(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    m.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), b(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), y(e) && (e = e.toHexString()), k(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : m.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return b(new Uint8Array(i))
                }
                return w(e) ? b(new Uint8Array(e)) : m.throwArgumentError("invalid arrayify value", "value", e)
            }

            function k(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }

            function N(e) {
                return "0x" + i().keccak_256(A(e))
            }
        },
        71394: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                ErrorCode: function() {
                    return l
                },
                LogLevel: function() {
                    return f
                },
                Logger: function() {
                    return p
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.6.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f
        },
        52137: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                Description: function() {
                    return I
                },
                checkProperties: function() {
                    return w
                },
                deepCopy: function() {
                    return x
                },
                defineReadOnly: function() {
                    return y
                },
                getStatic: function() {
                    return b
                },
                resolveProperties: function() {
                    return E
                },
                shallowCopy: function() {
                    return A
                }
            });
            var n = t(84531),
                i = t(27853),
                o = t(27166),
                a = !1,
                s = !1,
                u = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                c = u.default,
                f = null;
            var l, h, d = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(l || (l = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(h || (h = {}));
            var p = "0123456789abcdef",
                v = function() {
                    function e(r) {
                        (0, i.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, n.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == u[t] && this.throwArgumentError("invalid log level name", "logLevel", e), c > u[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (s) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += p[r[o] >> 4], t += p[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case h.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case h.CALL_EXCEPTION:
                                case h.INSUFFICIENT_FUNDS:
                                case h.MISSING_NEW:
                                case h.NONCE_EXPIRED:
                                case h.REPLACEMENT_UNDERPRICED:
                                case h.TRANSACTION_REPLACED:
                                case h.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), d && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: d
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return f || (f = new e("logger/5.7.0")), f
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), a) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            s = !!r, a = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = u[r.toLowerCase()];
                            null != t ? c = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            v.errors = h, v.levels = l;
            var g = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                m = new v("properties/5.6.0");

            function y(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }

            function b(e, r) {
                for (var t = 0; t < 32; t++) {
                    if (e[r]) return e[r];
                    if (!e.prototype || "object" !== typeof e.prototype) break;
                    e = Object.getPrototypeOf(e.prototype).constructor
                }
                return null
            }

            function E(e) {
                return g(this, void 0, void 0, (0, o.Z)().mark((function r() {
                    var t, n;
                    return (0, o.Z)().wrap((function(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return t = Object.keys(e).map((function(r) {
                                    var t = e[r];
                                    return Promise.resolve(t).then((function(e) {
                                        return {
                                            key: r,
                                            value: e
                                        }
                                    }))
                                })), r.next = 3, Promise.all(t);
                            case 3:
                                return n = r.sent, r.abrupt("return", n.reduce((function(e, r) {
                                    return e[r.key] = r.value, e
                                }), {}));
                            case 5:
                            case "end":
                                return r.stop()
                        }
                    }), r)
                })))
            }

            function w(e, r) {
                e && "object" === typeof e || m.throwArgumentError("invalid object", "object", e), Object.keys(e).forEach((function(t) {
                    r[t] || m.throwArgumentError("invalid object key - " + t, "transaction:" + t, e)
                }))
            }

            function A(e) {
                var r = {};
                for (var t in e) r[t] = e[t];
                return r
            }
            var k = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function N(e) {
                if (void 0 === e || null === e || k[typeof e]) return !0;
                if (Array.isArray(e) || "object" === typeof e) {
                    if (!Object.isFrozen(e)) return !1;
                    for (var r = Object.keys(e), t = 0; t < r.length; t++) {
                        var n = null;
                        try {
                            n = e[r[t]]
                        } catch (i) {
                            continue
                        }
                        if (!N(n)) return !1
                    }
                    return !0
                }
                return m.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function R(e) {
                if (N(e)) return e;
                if (Array.isArray(e)) return Object.freeze(e.map((function(e) {
                    return x(e)
                })));
                if ("object" === typeof e) {
                    var r = {};
                    for (var t in e) {
                        var n = e[t];
                        void 0 !== n && y(r, t, x(n))
                    }
                    return r
                }
                return m.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function x(e) {
                return R(e)
            }
            var I = (0, n.Z)((function e(r) {
                for (var t in (0, i.Z)(this, e), r) this[t] = x(r[t])
            }))
        },
        30417: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                AlchemyProvider: function() {
                    return pi
                },
                AlchemyWebSocketProvider: function() {
                    return di
                },
                AnkrProvider: function() {
                    return yi
                },
                BaseProvider: function() {
                    return gn
                },
                CloudflareProvider: function() {
                    return wi
                },
                EtherscanProvider: function() {
                    return _i
                },
                FallbackProvider: function() {
                    return Hi
                },
                Formatter: function() {
                    return Zt
                },
                InfuraProvider: function() {
                    return Qi
                },
                InfuraWebSocketProvider: function() {
                    return Xi
                },
                IpcProvider: function() {
                    return Wi
                },
                JsonRpcBatchProvider: function() {
                    return Yi
                },
                JsonRpcProvider: function() {
                    return ei
                },
                JsonRpcSigner: function() {
                    return Qn
                },
                NodesmithProvider: function() {
                    return eo
                },
                PocketProvider: function() {
                    return no
                },
                Provider: function() {
                    return ue
                },
                Resolver: function() {
                    return dn
                },
                StaticJsonRpcProvider: function() {
                    return ci
                },
                UrlJsonRpcProvider: function() {
                    return fi
                },
                Web3Provider: function() {
                    return so
                },
                WebSocketProvider: function() {
                    return ai
                },
                getDefaultProvider: function() {
                    return co
                },
                getNetwork: function() {
                    return ge
                },
                isCommunityResourcable: function() {
                    return jt
                },
                isCommunityResource: function() {
                    return Kt
                },
                showThrottleMessage: function() {
                    return qt
                }
            });
            var n = t(27166),
                i = t(27853),
                o = t(84531),
                a = t(81020),
                s = t(18992),
                u = t(27239),
                c = t.n(u),
                f = !1,
                l = !1,
                h = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                d = h.default,
                p = null;
            var v, g, m = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(v || (v = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(g || (g = {}));
            var y = "0123456789abcdef",
                b = function() {
                    function e(r) {
                        (0, i.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, o.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == h[t] && this.throwArgumentError("invalid log level name", "logLevel", e), d > h[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (l) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += y[r[o] >> 4], t += y[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (u) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case g.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var s = r;
                                    switch (s) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + s;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case g.CALL_EXCEPTION:
                                case g.INSUFFICIENT_FUNDS:
                                case g.MISSING_NEW:
                                case g.NONCE_EXPIRED:
                                case g.REPLACEMENT_UNDERPRICED:
                                case g.TRANSACTION_REPLACED:
                                case g.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var u = new Error(r);
                            return u.reason = o, u.code = t, Object.keys(n).forEach((function(e) {
                                u[e] = n[e]
                            })), u
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), m && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: m
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return p || (p = new e("logger/5.7.0")), p
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), f) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            l = !!r, f = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = h[r.toLowerCase()];
                            null != t ? d = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            b.errors = g, b.levels = v;
            var E = new b("bytes/5.7.0");

            function w(e) {
                return !!e.toHexString
            }

            function A(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return A(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function k(e) {
                return S(e) && !(e.length % 2) || R(e)
            }

            function N(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function R(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!N(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!N(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function x(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    E.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), A(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), w(e) && (e = e.toHexString()), S(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : E.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return A(new Uint8Array(i))
                }
                return R(e) ? A(new Uint8Array(e)) : E.throwArgumentError("invalid arrayify value", "value", e)
            }

            function I(e) {
                var r = e.map((function(e) {
                        return x(e)
                    })),
                    t = r.reduce((function(e, r) {
                        return e + r.length
                    }), 0),
                    n = new Uint8Array(t);
                return r.reduce((function(e, r) {
                    return n.set(r, e), e + r.length
                }), 0), A(n)
            }

            function P(e) {
                var r = x(e);
                if (0 === r.length) return r;
                for (var t = 0; t < r.length && 0 === r[t];) t++;
                return t && (r = r.slice(t)), r
            }

            function S(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var _ = "0123456789abcdef";

            function T(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    E.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = _[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), w(e)) return e.toHexString();
                if (S(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : E.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (R(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += _[(240 & o) >> 4] + _[15 & o]
                    }
                    return n
                }
                return E.throwArgumentError("invalid hexlify value", "value", e)
            }

            function O(e) {
                if ("string" !== typeof e) e = T(e);
                else if (!S(e) || e.length % 2) return null;
                return (e.length - 2) / 2
            }

            function C(e, r, t) {
                return "string" !== typeof e ? e = T(e) : (!S(e) || e.length % 2) && E.throwArgumentError("invalid hexData", "value", e), r = 2 + 2 * r, null != t ? "0x" + e.substring(r, 2 + 2 * t) : "0x" + e.substring(r)
            }

            function U(e) {
                var r = "0x";
                return e.forEach((function(e) {
                    r += T(e).substring(2)
                })), r
            }

            function L(e) {
                var r = function(e) {
                    "string" !== typeof e && (e = T(e));
                    S(e) || E.throwArgumentError("invalid hex string", "value", e);
                    e = e.substring(2);
                    var r = 0;
                    for (; r < e.length && "0" === e[r];) r++;
                    return "0x" + e.substring(r)
                }(T(e, {
                    hexPad: "left"
                }));
                return "0x" === r ? "0x0" : r
            }

            function F(e, r) {
                for ("string" !== typeof e ? e = T(e) : S(e) || E.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && E.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }

            function D(e) {
                var r = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (k(e)) {
                    var t = x(e);
                    64 === t.length ? (r.v = 27 + (t[32] >> 7), t[32] &= 127, r.r = T(t.slice(0, 32)), r.s = T(t.slice(32, 64))) : 65 === t.length ? (r.r = T(t.slice(0, 32)), r.s = T(t.slice(32, 64)), r.v = t[64]) : E.throwArgumentError("invalid signature string", "signature", e), r.v < 27 && (0 === r.v || 1 === r.v ? r.v += 27 : E.throwArgumentError("signature invalid v byte", "signature", e)), r.recoveryParam = 1 - r.v % 2, r.recoveryParam && (t[32] |= 128), r._vs = T(t.slice(32, 64))
                } else {
                    if (r.r = e.r, r.s = e.s, r.v = e.v, r.recoveryParam = e.recoveryParam, r._vs = e._vs, null != r._vs) {
                        var n = function(e, r) {
                            (e = x(e)).length > r && E.throwArgumentError("value out of range", "value", arguments[0]);
                            var t = new Uint8Array(r);
                            return t.set(e, r - e.length), A(t)
                        }(x(r._vs), 32);
                        r._vs = T(n);
                        var i = n[0] >= 128 ? 1 : 0;
                        null == r.recoveryParam ? r.recoveryParam = i : r.recoveryParam !== i && E.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), n[0] &= 127;
                        var o = T(n);
                        null == r.s ? r.s = o : r.s !== o && E.throwArgumentError("signature v mismatch _vs", "signature", e)
                    }
                    if (null == r.recoveryParam) null == r.v ? E.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === r.v || 1 === r.v ? r.recoveryParam = r.v : r.recoveryParam = 1 - r.v % 2;
                    else if (null == r.v) r.v = 27 + r.recoveryParam;
                    else {
                        var a = 0 === r.v || 1 === r.v ? r.v : 1 - r.v % 2;
                        r.recoveryParam !== a && E.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                    }
                    null != r.r && S(r.r) ? r.r = F(r.r, 32) : E.throwArgumentError("signature missing or invalid r", "signature", e), null != r.s && S(r.s) ? r.s = F(r.s, 32) : E.throwArgumentError("signature missing or invalid s", "signature", e);
                    var s = x(r.s);
                    s[0] >= 128 && E.throwArgumentError("signature s out of range", "signature", e), r.recoveryParam && (s[0] |= 128);
                    var u = T(s);
                    r._vs && (S(r._vs) || E.throwArgumentError("signature invalid _vs", "signature", e), r._vs = F(r._vs, 32)), null == r._vs ? r._vs = u : r._vs !== u && E.throwArgumentError("signature _vs mismatch v and s", "signature", e)
                }
                return r.yParityAndS = r._vs, r.compact = r.r + r.yParityAndS.substring(2), r
            }
            var M = c().BN,
                B = new b("bignumber/5.7.0"),
                G = {},
                Z = 9007199254740991;
            var j = !1,
                K = function() {
                    function e(r, t) {
                        (0, i.Z)(this, e), r !== G && B.throwError("cannot call constructor directly; use BigNumber.from", b.errors.UNSUPPORTED_OPERATION, {
                            operation: "new (BigNumber)"
                        }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                    }
                    return (0, o.Z)(e, [{
                        key: "fromTwos",
                        value: function(e) {
                            return q(H(this).fromTwos(e))
                        }
                    }, {
                        key: "toTwos",
                        value: function(e) {
                            return q(H(this).toTwos(e))
                        }
                    }, {
                        key: "abs",
                        value: function() {
                            return "-" === this._hex[0] ? e.from(this._hex.substring(1)) : this
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            return q(H(this).add(H(e)))
                        }
                    }, {
                        key: "sub",
                        value: function(e) {
                            return q(H(this).sub(H(e)))
                        }
                    }, {
                        key: "div",
                        value: function(r) {
                            return e.from(r).isZero() && W("division-by-zero", "div"), q(H(this).div(H(r)))
                        }
                    }, {
                        key: "mul",
                        value: function(e) {
                            return q(H(this).mul(H(e)))
                        }
                    }, {
                        key: "mod",
                        value: function(e) {
                            var r = H(e);
                            return r.isNeg() && W("division-by-zero", "mod"), q(H(this).umod(r))
                        }
                    }, {
                        key: "pow",
                        value: function(e) {
                            var r = H(e);
                            return r.isNeg() && W("negative-power", "pow"), q(H(this).pow(r))
                        }
                    }, {
                        key: "and",
                        value: function(e) {
                            var r = H(e);
                            return (this.isNegative() || r.isNeg()) && W("unbound-bitwise-result", "and"), q(H(this).and(r))
                        }
                    }, {
                        key: "or",
                        value: function(e) {
                            var r = H(e);
                            return (this.isNegative() || r.isNeg()) && W("unbound-bitwise-result", "or"), q(H(this).or(r))
                        }
                    }, {
                        key: "xor",
                        value: function(e) {
                            var r = H(e);
                            return (this.isNegative() || r.isNeg()) && W("unbound-bitwise-result", "xor"), q(H(this).xor(r))
                        }
                    }, {
                        key: "mask",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && W("negative-width", "mask"), q(H(this).maskn(e))
                        }
                    }, {
                        key: "shl",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && W("negative-width", "shl"), q(H(this).shln(e))
                        }
                    }, {
                        key: "shr",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && W("negative-width", "shr"), q(H(this).shrn(e))
                        }
                    }, {
                        key: "eq",
                        value: function(e) {
                            return H(this).eq(H(e))
                        }
                    }, {
                        key: "lt",
                        value: function(e) {
                            return H(this).lt(H(e))
                        }
                    }, {
                        key: "lte",
                        value: function(e) {
                            return H(this).lte(H(e))
                        }
                    }, {
                        key: "gt",
                        value: function(e) {
                            return H(this).gt(H(e))
                        }
                    }, {
                        key: "gte",
                        value: function(e) {
                            return H(this).gte(H(e))
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._hex[0]
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return H(this).isZero()
                        }
                    }, {
                        key: "toNumber",
                        value: function() {
                            try {
                                return H(this).toNumber()
                            } catch (e) {
                                W("overflow", "toNumber", this.toString())
                            }
                            return null
                        }
                    }, {
                        key: "toBigInt",
                        value: function() {
                            try {
                                return BigInt(this.toString())
                            } catch (e) {}
                            return B.throwError("this platform does not support BigInt", b.errors.UNSUPPORTED_OPERATION, {
                                value: this.toString()
                            })
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return arguments.length > 0 && (10 === arguments[0] ? j || (j = !0, B.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? B.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", b.errors.UNEXPECTED_ARGUMENT, {}) : B.throwError("BigNumber.toString does not accept parameters", b.errors.UNEXPECTED_ARGUMENT, {})), H(this).toString(10)
                        }
                    }, {
                        key: "toHexString",
                        value: function() {
                            return this._hex
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            return {
                                type: "BigNumber",
                                hex: this.toHexString()
                            }
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            if ("string" === typeof r) return r.match(/^-?0x[0-9a-f]+$/i) ? new e(G, z(r)) : r.match(/^-?[0-9]+$/) ? new e(G, z(new M(r))) : B.throwArgumentError("invalid BigNumber string", "value", r);
                            if ("number" === typeof r) return r % 1 && W("underflow", "BigNumber.from", r), (r >= Z || r <= -Z) && W("overflow", "BigNumber.from", r), e.from(String(r));
                            var t = r;
                            if ("bigint" === typeof t) return e.from(t.toString());
                            if (R(t)) return e.from(T(t));
                            if (t)
                                if (t.toHexString) {
                                    var n = t.toHexString();
                                    if ("string" === typeof n) return e.from(n)
                                } else {
                                    var i = t._hex;
                                    if (null == i && "BigNumber" === t.type && (i = t.hex), "string" === typeof i && (S(i) || "-" === i[0] && S(i.substring(1)))) return e.from(i)
                                }
                            return B.throwArgumentError("invalid BigNumber value", "value", r)
                        }
                    }, {
                        key: "isBigNumber",
                        value: function(e) {
                            return !(!e || !e._isBigNumber)
                        }
                    }]), e
                }();

            function z(e) {
                if ("string" !== typeof e) return z(e.toString(16));
                if ("-" === e[0]) return "-" === (e = e.substring(1))[0] && B.throwArgumentError("invalid hex", "value", e), "0x00" === (e = z(e)) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function q(e) {
                return K.from(z(e))
            }

            function H(e) {
                var r = K.from(e).toHexString();
                return "-" === r[0] ? new M("-" + r.substring(3), 16) : new M(r.substring(2), 16)
            }

            function W(e, r, t) {
                var n = {
                    fault: e,
                    operation: r
                };
                return null != t && (n.value = t), B.throwError(e, b.errors.NUMERIC_FAULT, n)
            }
            var V = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                J = new b("properties/5.7.0");

            function X(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }

            function Q(e, r) {
                for (var t = 0; t < 32; t++) {
                    if (e[r]) return e[r];
                    if (!e.prototype || "object" !== typeof e.prototype) break;
                    e = Object.getPrototypeOf(e.prototype).constructor
                }
                return null
            }

            function Y(e) {
                return V(this, void 0, void 0, (0, n.Z)().mark((function r() {
                    var t, i;
                    return (0, n.Z)().wrap((function(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return t = Object.keys(e).map((function(r) {
                                    var t = e[r];
                                    return Promise.resolve(t).then((function(e) {
                                        return {
                                            key: r,
                                            value: e
                                        }
                                    }))
                                })), r.next = 3, Promise.all(t);
                            case 3:
                                return i = r.sent, r.abrupt("return", i.reduce((function(e, r) {
                                    return e[r.key] = r.value, e
                                }), {}));
                            case 5:
                            case "end":
                                return r.stop()
                        }
                    }), r)
                })))
            }

            function $(e) {
                var r = {};
                for (var t in e) r[t] = e[t];
                return r
            }
            var ee = {
                bigint: !0,
                boolean: !0,
                function: !0,
                number: !0,
                string: !0
            };

            function re(e) {
                if (void 0 === e || null === e || ee[typeof e]) return !0;
                if (Array.isArray(e) || "object" === typeof e) {
                    if (!Object.isFrozen(e)) return !1;
                    for (var r = Object.keys(e), t = 0; t < r.length; t++) {
                        var n = null;
                        try {
                            n = e[r[t]]
                        } catch (i) {
                            continue
                        }
                        if (!re(n)) return !1
                    }
                    return !0
                }
                return J.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function te(e) {
                if (re(e)) return e;
                if (Array.isArray(e)) return Object.freeze(e.map((function(e) {
                    return ne(e)
                })));
                if ("object" === typeof e) {
                    var r = {};
                    for (var t in e) {
                        var n = e[t];
                        void 0 !== n && X(r, t, ne(n))
                    }
                    return r
                }
                return J.throwArgumentError("Cannot deepCopy ".concat(typeof e), "object", e)
            }

            function ne(e) {
                return te(e)
            }
            var ie = (0, o.Z)((function e(r) {
                    for (var t in (0, i.Z)(this, e), r) this[t] = ne(r[t])
                })),
                oe = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                ae = new b("abstract-provider/5.7.0"),
                se = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, null, [{
                        key: "isForkEvent",
                        value: function(e) {
                            return !(!e || !e._isForkEvent)
                        }
                    }]), t
                }(ie),
                ue = function() {
                    function e() {
                        (0, i.Z)(this, e), ae.checkAbstract(this instanceof e ? this.constructor : void 0, e), X(this, "_isProvider", !0)
                    }
                    return (0, o.Z)(e, [{
                        key: "getFeeData",
                        value: function() {
                            return oe(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, t, i, o, a, s;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Y({
                                                block: this.getBlock("latest"),
                                                gasPrice: this.getGasPrice().catch((function(e) {
                                                    return null
                                                }))
                                            });
                                        case 2:
                                            return r = e.sent, t = r.block, i = r.gasPrice, o = null, a = null, s = null, t && t.baseFeePerGas && (o = t.baseFeePerGas, s = K.from("1500000000"), a = t.baseFeePerGas.mul(2).add(s)), e.abrupt("return", {
                                                lastBaseFeePerGas: o,
                                                maxFeePerGas: a,
                                                maxPriorityFeePerGas: s,
                                                gasPrice: i
                                            });
                                        case 8:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "addListener",
                        value: function(e, r) {
                            return this.on(e, r)
                        }
                    }, {
                        key: "removeListener",
                        value: function(e, r) {
                            return this.off(e, r)
                        }
                    }], [{
                        key: "isProvider",
                        value: function(e) {
                            return !(!e || !e._isProvider)
                        }
                    }]), e
                }(),
                ce = new b("networks/5.7.1");

            function fe(e) {
                var r = function(r, t) {
                    null == t && (t = {});
                    var n = [];
                    if (r.InfuraProvider && "-" !== t.infura) try {
                        n.push(new r.InfuraProvider(e, t.infura))
                    } catch (s) {}
                    if (r.EtherscanProvider && "-" !== t.etherscan) try {
                        n.push(new r.EtherscanProvider(e, t.etherscan))
                    } catch (s) {}
                    if (r.AlchemyProvider && "-" !== t.alchemy) try {
                        n.push(new r.AlchemyProvider(e, t.alchemy))
                    } catch (s) {}
                    if (r.PocketProvider && "-" !== t.pocket) {
                        try {
                            var i = new r.PocketProvider(e, t.pocket);
                            i.network && -1 === ["goerli", "ropsten", "rinkeby", "sepolia"].indexOf(i.network.name) && n.push(i)
                        } catch (s) {}
                    }
                    if (r.CloudflareProvider && "-" !== t.cloudflare) try {
                        n.push(new r.CloudflareProvider(e))
                    } catch (s) {}
                    if (r.AnkrProvider && "-" !== t.ankr) try {
                        var o = new r.AnkrProvider(e, t.ankr);
                        o.network && -1 === ["ropsten"].indexOf(o.network.name) && n.push(o)
                    } catch (s) {}
                    if (0 === n.length) return null;
                    if (r.FallbackProvider) {
                        var a = 1;
                        return null != t.quorum ? a = t.quorum : "homestead" === e && (a = 2), new r.FallbackProvider(n, a)
                    }
                    return n[0]
                };
                return r.renetwork = function(e) {
                    return fe(e)
                }, r
            }

            function le(e, r) {
                var t = function(t, n) {
                    return t.JsonRpcProvider ? new t.JsonRpcProvider(e, r) : null
                };
                return t.renetwork = function(r) {
                    return le(e, r)
                }, t
            }
            var he = {
                    chainId: 1,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "homestead",
                    _defaultProvider: fe("homestead")
                },
                de = {
                    chainId: 3,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "ropsten",
                    _defaultProvider: fe("ropsten")
                },
                pe = {
                    chainId: 63,
                    name: "classicMordor",
                    _defaultProvider: le("https://www.ethercluster.com/mordor", "classicMordor")
                },
                ve = {
                    unspecified: {
                        chainId: 0,
                        name: "unspecified"
                    },
                    homestead: he,
                    mainnet: he,
                    morden: {
                        chainId: 2,
                        name: "morden"
                    },
                    ropsten: de,
                    testnet: de,
                    rinkeby: {
                        chainId: 4,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "rinkeby",
                        _defaultProvider: fe("rinkeby")
                    },
                    kovan: {
                        chainId: 42,
                        name: "kovan",
                        _defaultProvider: fe("kovan")
                    },
                    goerli: {
                        chainId: 5,
                        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                        name: "goerli",
                        _defaultProvider: fe("goerli")
                    },
                    kintsugi: {
                        chainId: 1337702,
                        name: "kintsugi"
                    },
                    sepolia: {
                        chainId: 11155111,
                        name: "sepolia",
                        _defaultProvider: fe("sepolia")
                    },
                    classic: {
                        chainId: 61,
                        name: "classic",
                        _defaultProvider: le("https://www.ethercluster.com/etc", "classic")
                    },
                    classicMorden: {
                        chainId: 62,
                        name: "classicMorden"
                    },
                    classicMordor: pe,
                    classicTestnet: pe,
                    classicKotti: {
                        chainId: 6,
                        name: "classicKotti",
                        _defaultProvider: le("https://www.ethercluster.com/kotti", "classicKotti")
                    },
                    xdai: {
                        chainId: 100,
                        name: "xdai"
                    },
                    matic: {
                        chainId: 137,
                        name: "matic",
                        _defaultProvider: fe("matic")
                    },
                    maticmum: {
                        chainId: 80001,
                        name: "maticmum"
                    },
                    optimism: {
                        chainId: 10,
                        name: "optimism",
                        _defaultProvider: fe("optimism")
                    },
                    "optimism-kovan": {
                        chainId: 69,
                        name: "optimism-kovan"
                    },
                    "optimism-goerli": {
                        chainId: 420,
                        name: "optimism-goerli"
                    },
                    arbitrum: {
                        chainId: 42161,
                        name: "arbitrum"
                    },
                    "arbitrum-rinkeby": {
                        chainId: 421611,
                        name: "arbitrum-rinkeby"
                    },
                    "arbitrum-goerli": {
                        chainId: 421613,
                        name: "arbitrum-goerli"
                    },
                    bnb: {
                        chainId: 56,
                        name: "bnb"
                    },
                    bnbt: {
                        chainId: 97,
                        name: "bnbt"
                    }
                };

            function ge(e) {
                if (null == e) return null;
                if ("number" === typeof e) {
                    for (var r in ve) {
                        var t = ve[r];
                        if (t.chainId === e) return {
                            name: t.name,
                            chainId: t.chainId,
                            ensAddress: t.ensAddress || null,
                            _defaultProvider: t._defaultProvider || null
                        }
                    }
                    return {
                        chainId: e,
                        name: "unknown"
                    }
                }
                if ("string" === typeof e) {
                    var n = ve[e];
                    return null == n ? null : {
                        name: n.name,
                        chainId: n.chainId,
                        ensAddress: n.ensAddress,
                        _defaultProvider: n._defaultProvider || null
                    }
                }
                var i = ve[e.name];
                if (!i) return "number" !== typeof e.chainId && ce.throwArgumentError("invalid network chainId", "network", e), e;
                0 !== e.chainId && e.chainId !== i.chainId && ce.throwArgumentError("network chainId mismatch", "network", e);
                var o, a = e._defaultProvider || null;
                return null == a && i._defaultProvider && (a = (o = i._defaultProvider) && "function" === typeof o.renetwork ? i._defaultProvider.renetwork(e) : i._defaultProvider), {
                    name: e.name,
                    chainId: i.chainId,
                    ensAddress: e.ensAddress || i.ensAddress || null,
                    _defaultProvider: a
                }
            }
            var me = t(6148);

            function ye(e) {
                e = atob(e);
                for (var r = [], t = 0; t < e.length; t++) r.push(e.charCodeAt(t));
                return x(r)
            }

            function be(e) {
                e = x(e);
                for (var r = "", t = 0; t < e.length; t++) r += String.fromCharCode(e[t]);
                return btoa(r)
            }
            var Ee, we, Ae = function() {
                    function e(r) {
                        (0, i.Z)(this, e), X(this, "alphabet", r), X(this, "base", r.length), X(this, "_alphabetMap", {}), X(this, "_leader", r.charAt(0));
                        for (var t = 0; t < r.length; t++) this._alphabetMap[r.charAt(t)] = t
                    }
                    return (0, o.Z)(e, [{
                        key: "encode",
                        value: function(e) {
                            var r = x(e);
                            if (0 === r.length) return "";
                            for (var t = [0], n = 0; n < r.length; ++n) {
                                for (var i = r[n], o = 0; o < t.length; ++o) i += t[o] << 8, t[o] = i % this.base, i = i / this.base | 0;
                                for (; i > 0;) t.push(i % this.base), i = i / this.base | 0
                            }
                            for (var a = "", s = 0; 0 === r[s] && s < r.length - 1; ++s) a += this._leader;
                            for (var u = t.length - 1; u >= 0; --u) a += this.alphabet[t[u]];
                            return a
                        }
                    }, {
                        key: "decode",
                        value: function(e) {
                            if ("string" !== typeof e) throw new TypeError("Expected String");
                            var r = [];
                            if (0 === e.length) return new Uint8Array(r);
                            r.push(0);
                            for (var t = 0; t < e.length; t++) {
                                var n = this._alphabetMap[e[t]];
                                if (void 0 === n) throw new Error("Non-base" + this.base + " character");
                                for (var i = n, o = 0; o < r.length; ++o) i += r[o] * this.base, r[o] = 255 & i, i >>= 8;
                                for (; i > 0;) r.push(255 & i), i >>= 8
                            }
                            for (var a = 0; e[a] === this._leader && a < e.length - 1; ++a) r.push(0);
                            return x(new Uint8Array(r.reverse()))
                        }
                    }]), e
                }(),
                ke = (new Ae("abcdefghijklmnopqrstuvwxyz234567"), new Ae("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")),
                Ne = new b("strings/5.7.0");

            function Re(e, r, t, n, i) {
                if (e === we.BAD_PREFIX || e === we.UNEXPECTED_CONTINUE) {
                    for (var o = 0, a = r + 1; a < t.length && t[a] >> 6 === 2; a++) o++;
                    return o
                }
                return e === we.OVERRUN ? t.length - r - 1 : 0
            }! function(e) {
                e.current = "", e.NFC = "NFC", e.NFD = "NFD", e.NFKC = "NFKC", e.NFKD = "NFKD"
            }(Ee || (Ee = {})),
            function(e) {
                e.UNEXPECTED_CONTINUE = "unexpected continuation byte", e.BAD_PREFIX = "bad codepoint prefix", e.OVERRUN = "string overrun", e.MISSING_CONTINUE = "missing continuation byte", e.OUT_OF_RANGE = "out of UTF-8 range", e.UTF16_SURROGATE = "UTF-16 surrogate", e.OVERLONG = "overlong representation"
            }(we || (we = {}));
            var xe = Object.freeze({
                error: function(e, r, t, n, i) {
                    return Ne.throwArgumentError("invalid codepoint at offset ".concat(r, "; ").concat(e), "bytes", t)
                },
                ignore: Re,
                replace: function(e, r, t, n, i) {
                    return e === we.OVERLONG ? (n.push(i), 0) : (n.push(65533), Re(e, r, t))
                }
            });

            function Ie(e, r) {
                null == r && (r = xe.error), e = x(e);
                for (var t = [], n = 0; n < e.length;) {
                    var i = e[n++];
                    if (i >> 7 !== 0) {
                        var o = null,
                            a = null;
                        if (192 === (224 & i)) o = 1, a = 127;
                        else if (224 === (240 & i)) o = 2, a = 2047;
                        else {
                            if (240 !== (248 & i)) {
                                n += r(128 === (192 & i) ? we.UNEXPECTED_CONTINUE : we.BAD_PREFIX, n - 1, e, t);
                                continue
                            }
                            o = 3, a = 65535
                        }
                        if (n - 1 + o >= e.length) n += r(we.OVERRUN, n - 1, e, t);
                        else {
                            for (var s = i & (1 << 8 - o - 1) - 1, u = 0; u < o; u++) {
                                var c = e[n];
                                if (128 != (192 & c)) {
                                    n += r(we.MISSING_CONTINUE, n, e, t), s = null;
                                    break
                                }
                                s = s << 6 | 63 & c, n++
                            }
                            null !== s && (s > 1114111 ? n += r(we.OUT_OF_RANGE, n - 1 - o, e, t, s) : s >= 55296 && s <= 57343 ? n += r(we.UTF16_SURROGATE, n - 1 - o, e, t, s) : s <= a ? n += r(we.OVERLONG, n - 1 - o, e, t, s) : t.push(s))
                        }
                    } else t.push(i)
                }
                return t
            }

            function Pe(e) {
                var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Ee.current;
                r != Ee.current && (Ne.checkNormalize(), e = e.normalize(r));
                for (var t = [], n = 0; n < e.length; n++) {
                    var i = e.charCodeAt(n);
                    if (i < 128) t.push(i);
                    else if (i < 2048) t.push(i >> 6 | 192), t.push(63 & i | 128);
                    else if (55296 == (64512 & i)) {
                        n++;
                        var o = e.charCodeAt(n);
                        if (n >= e.length || 56320 !== (64512 & o)) throw new Error("invalid utf-8 string");
                        var a = 65536 + ((1023 & i) << 10) + (1023 & o);
                        t.push(a >> 18 | 240), t.push(a >> 12 & 63 | 128), t.push(a >> 6 & 63 | 128), t.push(63 & a | 128)
                    } else t.push(i >> 12 | 224), t.push(i >> 6 & 63 | 128), t.push(63 & i | 128)
                }
                return x(t)
            }

            function Se(e, r) {
                return Ie(e, r).map((function(e) {
                    return e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode(55296 + (e >> 10 & 1023), 56320 + (1023 & e)))
                })).join("")
            }
            var _e = t(3425),
                Te = t.n(_e);

            function Oe(e) {
                return "0x" + Te().keccak_256(x(e))
            }
            var Ce = "hash/5.7.0",
                Ue = t(31303),
                Le = t(89472);

            function Fe(e, r) {
                null == r && (r = 1);
                var t = [],
                    n = t.forEach;
                return function e(r, i) {
                    n.call(r, (function(r) {
                        i > 0 && Array.isArray(r) ? e(r, i - 1) : t.push(r)
                    }))
                }(e, r), t
            }

            function De(e) {
                return function(e) {
                    var r = 0;
                    return function() {
                        return e[r++]
                    }
                }(function(e) {
                    var r = 0;

                    function t() {
                        return e[r++] << 8 | e[r++]
                    }
                    for (var n = t(), i = 1, o = [0, 1], a = 1; a < n; a++) o.push(i += t());
                    var s = t(),
                        u = r;
                    r += s;
                    var c = 0,
                        f = 0;

                    function l() {
                        return 0 == c && (f = f << 8 | e[r++], c = 8), f >> --c & 1
                    }
                    for (var h = Math.pow(2, 31), d = h >>> 1, p = d >> 1, v = h - 1, g = 0, m = 0; m < 31; m++) g = g << 1 | l();
                    for (var y = [], b = 0, E = h;;) {
                        for (var w = Math.floor(((g - b + 1) * i - 1) / E), A = 0, k = n; k - A > 1;) {
                            var N = A + k >>> 1;
                            w < o[N] ? k = N : A = N
                        }
                        if (0 == A) break;
                        y.push(A);
                        for (var R = b + Math.floor(E * o[A] / i), x = b + Math.floor(E * o[A + 1] / i) - 1; 0 == ((R ^ x) & d);) g = g << 1 & v | l(), R = R << 1 & v, x = x << 1 & v | 1;
                        for (; R & ~x & p;) g = g & d | g << 1 & v >>> 1 | l(), R = R << 1 ^ d, x = (x ^ d) << 1 | d | 1;
                        b = R, E = 1 + x - R
                    }
                    var I = n - 4;
                    return y.map((function(r) {
                        switch (r - I) {
                            case 3:
                                return I + 65792 + (e[u++] << 16 | e[u++] << 8 | e[u++]);
                            case 2:
                                return I + 256 + (e[u++] << 8 | e[u++]);
                            case 1:
                                return I + e[u++];
                            default:
                                return r - 1
                        }
                    }))
                }(e))
            }

            function Me(e) {
                return 1 & e ? ~e >> 1 : e >> 1
            }

            function Be(e, r) {
                for (var t = Array(e), n = 0, i = -1; n < e; n++) t[n] = i += 1 + r();
                return t
            }

            function Ge(e, r) {
                for (var t = Array(e), n = 0, i = 0; n < e; n++) t[n] = i += Me(r());
                return t
            }

            function Ze(e, r) {
                for (var t = Be(e(), e), n = e(), i = Be(n, e), o = function(e, r) {
                        for (var t = Array(e), n = 0; n < e; n++) t[n] = 1 + r();
                        return t
                    }(n, e), a = 0; a < n; a++)
                    for (var s = 0; s < o[a]; s++) t.push(i[a] + s);
                return r ? t.map((function(e) {
                    return r[e]
                })) : t
            }

            function je(e, r, t) {
                for (var n = Array(e).fill(void 0).map((function() {
                        return []
                    })), i = 0; i < r; i++) Ge(e, t).forEach((function(e, r) {
                    return n[r].push(e)
                }));
                return n
            }

            function Ke(e, r) {
                var t = 1 + r(),
                    n = r(),
                    i = function(e) {
                        for (var r = [];;) {
                            var t = e();
                            if (0 == t) break;
                            r.push(t)
                        }
                        return r
                    }(r);
                return Fe(je(i.length, 1 + e, r).map((function(e, r) {
                    var o = e[0],
                        a = e.slice(1);
                    return Array(i[r]).fill(void 0).map((function(e, r) {
                        var i = r * n;
                        return [o + r * t, a.map((function(e) {
                            return e + i
                        }))]
                    }))
                })))
            }

            function ze(e, r) {
                return je(1 + r(), 1 + e, r).map((function(e) {
                    return [e[0], e.slice(1)]
                }))
            }
            var qe = De(ye("")),
                He = new Set(Ze(qe)),
                We = new Set(Ze(qe)),
                Ve = function(e) {
                    for (var r = [];;) {
                        var t = e();
                        if (0 == t) break;
                        r.push(Ke(t, e))
                    }
                    for (;;) {
                        var n = e() - 1;
                        if (n < 0) break;
                        r.push(ze(n, e))
                    }
                    return function(e) {
                        for (var r = {}, t = 0; t < e.length; t++) {
                            var n = e[t];
                            r[n[0]] = n[1]
                        }
                        return r
                    }(Fe(r))
                }(qe),
                Je = function(e) {
                    var r = Ze(e).sort((function(e, r) {
                        return e - r
                    }));
                    return function t() {
                        var n = [];
                        for (;;) {
                            var i = Ze(e, r);
                            if (0 == i.length) break;
                            n.push({
                                set: new Set(i),
                                node: t()
                            })
                        }
                        n.sort((function(e, r) {
                            return r.set.size - e.set.size
                        }));
                        var o = e();
                        return {
                            branches: n,
                            valid: o % 3,
                            fe0f: !!(1 & (o = o / 3 | 0)),
                            save: 1 == (o >>= 1),
                            check: 2 == o
                        }
                    }()
                }(qe),
                Xe = 45,
                Qe = 95;

            function Ye(e) {
                return function(e) {
                    return Ie(Pe(e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Ee.current))
                }(e)
            }

            function $e(e) {
                return e.filter((function(e) {
                    return 65039 != e
                }))
            }

            function er(e) {
                var r, t = (0, Le.Z)(e.split("."));
                try {
                    for (t.s(); !(r = t.n()).done;) {
                        var n = r.value,
                            i = Ye(n);
                        try {
                            for (var o = i.lastIndexOf(Qe) - 1; o >= 0; o--)
                                if (i[o] !== Qe) throw new Error("underscore only allowed at start");
                            if (i.length >= 4 && i.every((function(e) {
                                    return e < 128
                                })) && i[2] === Xe && i[3] === Xe) throw new Error("invalid label extension")
                        } catch (a) {
                            throw new Error('Invalid label "'.concat(n, '": ').concat(a.message))
                        }
                    }
                } catch (a) {
                    t.e(a)
                } finally {
                    t.f()
                }
                return e
            }

            function rr(e) {
                return er(function(e, r) {
                    var t = Ye(e).reverse(),
                        n = [];
                    for (; t.length;) {
                        var i = tr(t);
                        if (i) n.push.apply(n, (0, Ue.Z)(r(i)));
                        else {
                            var o = t.pop();
                            if (He.has(o)) n.push(o);
                            else if (!We.has(o)) {
                                var a = Ve[o];
                                if (!a) throw new Error("Disallowed codepoint: 0x".concat(o.toString(16).toUpperCase()));
                                n.push.apply(n, (0, Ue.Z)(a))
                            }
                        }
                    }
                    return er((s = String.fromCodePoint.apply(String, n), s.normalize("NFC")));
                    var s
                }(e, $e))
            }

            function tr(e, r) {
                var t, n, i, o = Je,
                    a = [],
                    s = e.length;
                r && (r.length = 0);
                for (var u = function() {
                        var u = e[--s];
                        if (!(o = null === (t = o.branches.find((function(e) {
                                return e.set.has(u)
                            }))) || void 0 === t ? void 0 : t.node)) return "break";
                        if (o.save) i = u;
                        else if (o.check && u === i) return "break";
                        a.push(u), o.fe0f && (a.push(65039), s > 0 && 65039 == e[s - 1] && s--), o.valid && (n = a.slice(), 2 == o.valid && n.splice(1, 1), r && r.push.apply(r, (0, Ue.Z)(e.slice(s).reverse())), e.length = s)
                    }; s;) {
                    if ("break" === u()) break
                }
                return n
            }
            var nr = new b(Ce),
                ir = new Uint8Array(32);

            function or(e) {
                if (0 === e.length) throw new Error("invalid ENS name; empty component");
                return e
            }

            function ar(e) {
                var r = Pe(rr(e)),
                    t = [];
                if (0 === e.length) return t;
                for (var n = 0, i = 0; i < r.length; i++) {
                    46 === r[i] && (t.push(or(r.slice(n, i))), n = i + 1)
                }
                if (n >= r.length) throw new Error("invalid ENS name; empty component");
                return t.push(or(r.slice(n))), t
            }

            function sr(e) {
                "string" !== typeof e && nr.throwArgumentError("invalid ENS name; not a string", "name", e);
                for (var r = ir, t = ar(e); t.length;) r = Oe(I([r, Oe(t.pop())]));
                return T(r)
            }
            ir.fill(0);
            var ur = t(12111),
                cr = t.n(ur);
            new b("sha2/5.7.0");

            function fr(e) {
                return "0x" + cr().sha256().update(x(e)).digest("hex")
            }
            var lr = function(e, r, t, n) {
                return new(t || (t = Promise))((function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (r) {
                            o(r)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (r) {
                            o(r)
                        }
                    }

                    function u(e) {
                        var r;
                        e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                            e(r)
                        }))).then(a, s)
                    }
                    u((n = n.apply(e, r || [])).next())
                }))
            };

            function hr(e, r) {
                return lr(this, void 0, void 0, (0, n.Z)().mark((function t() {
                    var i, o, a, s, u;
                    return (0, n.Z)().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return null == r && (r = {}), i = {
                                    method: r.method || "GET",
                                    headers: r.headers || {},
                                    body: r.body || void 0
                                }, !0 !== r.skipFetchSetup && (i.mode = "cors", i.cache = "no-cache", i.credentials = "same-origin", i.redirect = "follow", i.referrer = "client"), null != r.fetchOptions && ((o = r.fetchOptions).mode && (i.mode = o.mode), o.cache && (i.cache = o.cache), o.credentials && (i.credentials = o.credentials), o.redirect && (i.redirect = o.redirect), o.referrer && (i.referrer = o.referrer)), t.next = 7, fetch(e, i);
                            case 7:
                                return a = t.sent, t.next = 10, a.arrayBuffer();
                            case 10:
                                return s = t.sent, u = {}, a.headers.forEach ? a.headers.forEach((function(e, r) {
                                    u[r.toLowerCase()] = e
                                })) : a.headers.keys().forEach((function(e) {
                                    u[e.toLowerCase()] = a.headers.get(e)
                                })), t.abrupt("return", {
                                    headers: u,
                                    statusCode: a.status,
                                    statusMessage: a.statusText,
                                    body: x(new Uint8Array(s))
                                });
                            case 14:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))
            }
            var dr = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                pr = new b("web/5.7.1");

            function vr(e) {
                return new Promise((function(r) {
                    setTimeout(r, e)
                }))
            }

            function gr(e, r) {
                if (null == e) return null;
                if ("string" === typeof e) return e;
                if (k(e)) {
                    if (r && ("text" === r.split("/")[0] || "application/json" === r.split(";")[0].trim())) try {
                        return Se(e)
                    } catch (t) {}
                    return T(e)
                }
                return e
            }

            function mr(e, r, t) {
                var i = null;
                if (null != r) {
                    i = Pe(r);
                    var o = "string" === typeof e ? {
                        url: e
                    } : $(e);
                    if (o.headers) 0 !== Object.keys(o.headers).filter((function(e) {
                        return "content-type" === e.toLowerCase()
                    })).length || (o.headers = $(o.headers), o.headers["content-type"] = "application/json");
                    else o.headers = {
                        "content-type": "application/json"
                    };
                    e = o
                }
                return function(e, r, t) {
                    var i = "object" === typeof e && null != e.throttleLimit ? e.throttleLimit : 12;
                    pr.assertArgument(i > 0 && i % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", i);
                    var o = "object" === typeof e ? e.throttleCallback : null,
                        a = "object" === typeof e && "number" === typeof e.throttleSlotInterval ? e.throttleSlotInterval : 100;
                    pr.assertArgument(a > 0 && a % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", a);
                    var s = "object" === typeof e && !!e.errorPassThrough,
                        u = {},
                        c = null,
                        f = {
                            method: "GET"
                        },
                        l = !1,
                        h = 12e4;
                    if ("string" === typeof e) c = e;
                    else if ("object" === typeof e) {
                        if (null != e && null != e.url || pr.throwArgumentError("missing URL", "connection.url", e), c = e.url, "number" === typeof e.timeout && e.timeout > 0 && (h = e.timeout), e.headers)
                            for (var d in e.headers) u[d.toLowerCase()] = {
                                key: d,
                                value: String(e.headers[d])
                            }, ["if-none-match", "if-modified-since"].indexOf(d.toLowerCase()) >= 0 && (l = !0);
                        if (f.allowGzip = !!e.allowGzip, null != e.user && null != e.password) {
                            "https:" !== c.substring(0, 6) && !0 !== e.allowInsecureAuthentication && pr.throwError("basic authentication requires a secure https url", b.errors.INVALID_ARGUMENT, {
                                argument: "url",
                                url: c,
                                user: e.user,
                                password: "[REDACTED]"
                            });
                            var p = e.user + ":" + e.password;
                            u.authorization = {
                                key: "Authorization",
                                value: "Basic " + be(Pe(p))
                            }
                        }
                        null != e.skipFetchSetup && (f.skipFetchSetup = !!e.skipFetchSetup), null != e.fetchOptions && (f.fetchOptions = $(e.fetchOptions))
                    }
                    var v, g = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"),
                        m = c ? c.match(g) : null;
                    if (m) try {
                        var y = {
                                statusCode: 200,
                                statusMessage: "OK",
                                headers: {
                                    "content-type": m[1] || "text/plain"
                                },
                                body: m[2] ? ye(m[3]) : (v = m[3], Pe(v.replace(/%([0-9a-f][0-9a-f])/gi, (function(e, r) {
                                    return String.fromCharCode(parseInt(r, 16))
                                }))))
                            },
                            E = y.body;
                        return t && (E = t(y.body, y)), Promise.resolve(E)
                    } catch (N) {
                        pr.throwError("processing response error", b.errors.SERVER_ERROR, {
                            body: gr(m[1], m[2]),
                            error: N,
                            requestBody: null,
                            requestMethod: "GET",
                            url: c
                        })
                    }
                    r && (f.method = "POST", f.body = r, null == u["content-type"] && (u["content-type"] = {
                        key: "Content-Type",
                        value: "application/octet-stream"
                    }), null == u["content-length"] && (u["content-length"] = {
                        key: "Content-Length",
                        value: String(r.length)
                    }));
                    var w = {};
                    Object.keys(u).forEach((function(e) {
                        var r = u[e];
                        w[r.key] = r.value
                    })), f.headers = w;
                    var A = function() {
                            var e = null;
                            return {
                                promise: new Promise((function(r, t) {
                                    h && (e = setTimeout((function() {
                                        null != e && (e = null, t(pr.makeError("timeout", b.errors.TIMEOUT, {
                                            requestBody: gr(f.body, w["content-type"]),
                                            requestMethod: f.method,
                                            timeout: h,
                                            url: c
                                        })))
                                    }), h))
                                })),
                                cancel: function() {
                                    null != e && (clearTimeout(e), e = null)
                                }
                            }
                        }(),
                        k = function() {
                            return dr(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, u, h, d, p, v, g, m, y, E;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            r = 0;
                                        case 1:
                                            if (!(r < i)) {
                                                e.next = 65;
                                                break
                                            }
                                            return u = null, e.prev = 3, e.next = 6, hr(c, f);
                                        case 6:
                                            if (u = e.sent, !(r < i)) {
                                                e.next = 28;
                                                break
                                            }
                                            if (301 !== u.statusCode && 302 !== u.statusCode) {
                                                e.next = 15;
                                                break
                                            }
                                            if (h = u.headers.location || "", "GET" !== f.method || !h.match(/^https:/)) {
                                                e.next = 13;
                                                break
                                            }
                                            return c = u.headers.location, e.abrupt("continue", 62);
                                        case 13:
                                            e.next = 28;
                                            break;
                                        case 15:
                                            if (429 !== u.statusCode) {
                                                e.next = 28;
                                                break
                                            }
                                            if (d = !0, !o) {
                                                e.next = 21;
                                                break
                                            }
                                            return e.next = 20, o(r, c);
                                        case 20:
                                            d = e.sent;
                                        case 21:
                                            if (!d) {
                                                e.next = 28;
                                                break
                                            }
                                            return p = 0, v = u.headers["retry-after"], p = "string" === typeof v && v.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(v) : a * parseInt(String(Math.random() * Math.pow(2, r))), e.next = 27, vr(p);
                                        case 27:
                                            return e.abrupt("continue", 62);
                                        case 28:
                                            e.next = 34;
                                            break;
                                        case 30:
                                            e.prev = 30, e.t0 = e.catch(3), null == (u = e.t0.response) && (A.cancel(), pr.throwError("missing response", b.errors.SERVER_ERROR, {
                                                requestBody: gr(f.body, w["content-type"]),
                                                requestMethod: f.method,
                                                serverError: e.t0,
                                                url: c
                                            }));
                                        case 34:
                                            if (g = u.body, l && 304 === u.statusCode ? g = null : !s && (u.statusCode < 200 || u.statusCode >= 300) && (A.cancel(), pr.throwError("bad response", b.errors.SERVER_ERROR, {
                                                    status: u.statusCode,
                                                    headers: u.headers,
                                                    body: gr(g, u.headers ? u.headers["content-type"] : null),
                                                    requestBody: gr(f.body, w["content-type"]),
                                                    requestMethod: f.method,
                                                    url: c
                                                })), !t) {
                                                e.next = 60;
                                                break
                                            }
                                            return e.prev = 37, e.next = 40, t(g, u);
                                        case 40:
                                            return m = e.sent, A.cancel(), e.abrupt("return", m);
                                        case 45:
                                            if (e.prev = 45, e.t1 = e.catch(37), !(e.t1.throttleRetry && r < i)) {
                                                e.next = 58;
                                                break
                                            }
                                            if (y = !0, !o) {
                                                e.next = 53;
                                                break
                                            }
                                            return e.next = 52, o(r, c);
                                        case 52:
                                            y = e.sent;
                                        case 53:
                                            if (!y) {
                                                e.next = 58;
                                                break
                                            }
                                            return E = a * parseInt(String(Math.random() * Math.pow(2, r))), e.next = 57, vr(E);
                                        case 57:
                                            return e.abrupt("continue", 62);
                                        case 58:
                                            A.cancel(), pr.throwError("processing response error", b.errors.SERVER_ERROR, {
                                                body: gr(g, u.headers ? u.headers["content-type"] : null),
                                                error: e.t1,
                                                requestBody: gr(f.body, w["content-type"]),
                                                requestMethod: f.method,
                                                url: c
                                            });
                                        case 60:
                                            return A.cancel(), e.abrupt("return", g);
                                        case 62:
                                            r++, e.next = 1;
                                            break;
                                        case 65:
                                            return e.abrupt("return", pr.throwError("failed response", b.errors.SERVER_ERROR, {
                                                requestBody: gr(f.body, w["content-type"]),
                                                requestMethod: f.method,
                                                url: c
                                            }));
                                        case 66:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, null, [
                                    [3, 30],
                                    [37, 45]
                                ])
                            })))
                        }();
                    return Promise.race([A.promise, k])
                }(e, i, (function(e, r) {
                    var n = null;
                    if (null != e) try {
                        n = JSON.parse(Se(e))
                    } catch (i) {
                        pr.throwError("invalid JSON", b.errors.SERVER_ERROR, {
                            body: e,
                            error: i
                        })
                    }
                    return t && (n = t(n, r)), n
                }))
            }

            function yr(e, r) {
                return r || (r = {}), null == (r = $(r)).floor && (r.floor = 0), null == r.ceiling && (r.ceiling = 1e4), null == r.interval && (r.interval = 250), new Promise((function(t, n) {
                    var i = null,
                        o = !1,
                        a = function() {
                            return !o && (o = !0, i && clearTimeout(i), !0)
                        };
                    r.timeout && (i = setTimeout((function() {
                        a() && n(new Error("timeout"))
                    }), r.timeout));
                    var s = r.retryLimit,
                        u = 0;
                    ! function i() {
                        return e().then((function(e) {
                            if (void 0 !== e) a() && t(e);
                            else if (r.oncePoll) r.oncePoll.once("poll", i);
                            else if (r.onceBlock) r.onceBlock.once("block", i);
                            else if (!o) {
                                if (++u > s) return void(a() && n(new Error("retry limit reached")));
                                var c = r.interval * parseInt(String(Math.random() * Math.pow(2, u)));
                                c < r.floor && (c = r.floor), c > r.ceiling && (c = r.ceiling), setTimeout(i, c)
                            }
                            return null
                        }), (function(e) {
                            a() && n(e)
                        }))
                    }()
                }))
            }
            var br = t(98334),
                Er = t.n(br),
                wr = "providers/5.6.8",
                Ar = new b("rlp/5.7.0");

            function kr(e) {
                for (var r = []; e;) r.unshift(255 & e), e >>= 8;
                return r
            }

            function Nr(e, r, t) {
                for (var n = 0, i = 0; i < t; i++) n = 256 * n + e[r + i];
                return n
            }

            function Rr(e) {
                if (Array.isArray(e)) {
                    var r = [];
                    if (e.forEach((function(e) {
                            r = r.concat(Rr(e))
                        })), r.length <= 55) return r.unshift(192 + r.length), r;
                    var t = kr(r.length);
                    return t.unshift(247 + t.length), t.concat(r)
                }
                k(e) || Ar.throwArgumentError("RLP object must be BytesLike", "object", e);
                var n = Array.prototype.slice.call(x(e));
                if (1 === n.length && n[0] <= 127) return n;
                if (n.length <= 55) return n.unshift(128 + n.length), n;
                var i = kr(n.length);
                return i.unshift(183 + i.length), i.concat(n)
            }

            function xr(e) {
                return T(Rr(e))
            }

            function Ir(e, r, t, n) {
                for (var i = []; t < r + 1 + n;) {
                    var o = Pr(e, t);
                    i.push(o.result), (t += o.consumed) > r + 1 + n && Ar.throwError("child data too short", b.errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + n,
                    result: i
                }
            }

            function Pr(e, r) {
                if (0 === e.length && Ar.throwError("data too short", b.errors.BUFFER_OVERRUN, {}), e[r] >= 248) {
                    var t = e[r] - 247;
                    r + 1 + t > e.length && Ar.throwError("data short segment too short", b.errors.BUFFER_OVERRUN, {});
                    var n = Nr(e, r + 1, t);
                    return r + 1 + t + n > e.length && Ar.throwError("data long segment too short", b.errors.BUFFER_OVERRUN, {}), Ir(e, r, r + 1 + t, t + n)
                }
                if (e[r] >= 192) {
                    var i = e[r] - 192;
                    return r + 1 + i > e.length && Ar.throwError("data array too short", b.errors.BUFFER_OVERRUN, {}), Ir(e, r, r + 1, i)
                }
                if (e[r] >= 184) {
                    var o = e[r] - 183;
                    r + 1 + o > e.length && Ar.throwError("data array too short", b.errors.BUFFER_OVERRUN, {});
                    var a = Nr(e, r + 1, o);
                    return r + 1 + o + a > e.length && Ar.throwError("data array too short", b.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + o + a,
                        result: T(e.slice(r + 1 + o, r + 1 + o + a))
                    }
                }
                if (e[r] >= 128) {
                    var s = e[r] - 128;
                    return r + 1 + s > e.length && Ar.throwError("data too short", b.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + s,
                        result: T(e.slice(r + 1, r + 1 + s))
                    }
                }
                return {
                    consumed: 1,
                    result: T(e[r])
                }
            }

            function Sr(e) {
                var r = x(e),
                    t = Pr(r, 0);
                return t.consumed !== r.length && Ar.throwArgumentError("invalid rlp data", "data", e), t.result
            }
            var _r = new b("address/5.7.0");

            function Tr(e) {
                S(e, 20) || _r.throwArgumentError("invalid address", "address", e);
                for (var r = (e = e.toLowerCase()).substring(2).split(""), t = new Uint8Array(40), n = 0; n < 40; n++) t[n] = r[n].charCodeAt(0);
                for (var i = x(Oe(t)), o = 0; o < 40; o += 2) i[o >> 1] >> 4 >= 8 && (r[o] = r[o].toUpperCase()), (15 & i[o >> 1]) >= 8 && (r[o + 1] = r[o + 1].toUpperCase());
                return "0x" + r.join("")
            }
            for (var Or = {}, Cr = 0; Cr < 10; Cr++) Or[String(Cr)] = String(Cr);
            for (var Ur = 0; Ur < 26; Ur++) Or[String.fromCharCode(65 + Ur)] = String(10 + Ur);
            var Lr, Fr = Math.floor((Lr = 9007199254740991, Math.log10 ? Math.log10(Lr) : Math.log(Lr) / Math.LN10));

            function Dr(e) {
                for (var r = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map((function(e) {
                        return Or[e]
                    })).join(""); r.length >= Fr;) {
                    var t = r.substring(0, Fr);
                    r = parseInt(t, 10) % 97 + r.substring(t.length)
                }
                for (var n = String(98 - parseInt(r, 10) % 97); n.length < 2;) n = "0" + n;
                return n
            }

            function Mr(e) {
                var r, t = null;
                if ("string" !== typeof e && _r.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), t = Tr(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && _r.throwArgumentError("bad address checksum", "address", e);
                else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (e.substring(2, 4) !== Dr(e) && _r.throwArgumentError("bad icap checksum", "address", e), r = e.substring(4), t = new M(r, 36).toString(16); t.length < 40;) t = "0" + t;
                    t = Tr("0x" + t)
                } else _r.throwArgumentError("invalid address", "address", e);
                return t
            }
            var Br = K.from(0);
            "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof t.g ? t.g : "undefined" !== typeof self && self;

            function Gr(e, r, t) {
                return t = {
                    path: r,
                    exports: {},
                    require: function(e, r) {
                        return function() {
                            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                        }((void 0 === r || null === r) && t.path)
                    }
                }, e(t, t.exports), t.exports
            }
            var Zr = jr;

            function jr(e, r) {
                if (!e) throw new Error(r || "Assertion failed")
            }
            jr.equal = function(e, r, t) {
                if (e != r) throw new Error(t || "Assertion failed: " + e + " != " + r)
            };
            var Kr = Gr((function(e, r) {
                    var t = r;

                    function n(e) {
                        return 1 === e.length ? "0" + e : e
                    }

                    function i(e) {
                        for (var r = "", t = 0; t < e.length; t++) r += n(e[t].toString(16));
                        return r
                    }
                    t.toArray = function(e, r) {
                        if (Array.isArray(e)) return e.slice();
                        if (!e) return [];
                        var t = [];
                        if ("string" !== typeof e) {
                            for (var n = 0; n < e.length; n++) t[n] = 0 | e[n];
                            return t
                        }
                        if ("hex" === r) {
                            (e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 !== 0 && (e = "0" + e);
                            for (n = 0; n < e.length; n += 2) t.push(parseInt(e[n] + e[n + 1], 16))
                        } else
                            for (n = 0; n < e.length; n++) {
                                var i = e.charCodeAt(n),
                                    o = i >> 8,
                                    a = 255 & i;
                                o ? t.push(o, a) : t.push(a)
                            }
                        return t
                    }, t.zero2 = n, t.toHex = i, t.encode = function(e, r) {
                        return "hex" === r ? i(e) : e
                    }
                })),
                zr = Gr((function(e, r) {
                    var t = r;
                    t.assert = Zr, t.toArray = Kr.toArray, t.zero2 = Kr.zero2, t.toHex = Kr.toHex, t.encode = Kr.encode, t.getNAF = function(e, r, t) {
                        var n = new Array(Math.max(e.bitLength(), t) + 1);
                        n.fill(0);
                        for (var i = 1 << r + 1, o = e.clone(), a = 0; a < n.length; a++) {
                            var s, u = o.andln(i - 1);
                            o.isOdd() ? (s = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(s)) : s = 0, n[a] = s, o.iushrn(1)
                        }
                        return n
                    }, t.getJSF = function(e, r) {
                        var t = [
                            [],
                            []
                        ];
                        e = e.clone(), r = r.clone();
                        for (var n, i = 0, o = 0; e.cmpn(-i) > 0 || r.cmpn(-o) > 0;) {
                            var a, s, u = e.andln(3) + i & 3,
                                c = r.andln(3) + o & 3;
                            3 === u && (u = -1), 3 === c && (c = -1), a = 0 === (1 & u) ? 0 : 3 !== (n = e.andln(7) + i & 7) && 5 !== n || 2 !== c ? u : -u, t[0].push(a), s = 0 === (1 & c) ? 0 : 3 !== (n = r.andln(7) + o & 7) && 5 !== n || 2 !== u ? c : -c, t[1].push(s), 2 * i === a + 1 && (i = 1 - i), 2 * o === s + 1 && (o = 1 - o), e.iushrn(1), r.iushrn(1)
                        }
                        return t
                    }, t.cachedProperty = function(e, r, t) {
                        var n = "_" + r;
                        e.prototype[r] = function() {
                            return void 0 !== this[n] ? this[n] : this[n] = t.call(this)
                        }
                    }, t.parseBytes = function(e) {
                        return "string" === typeof e ? t.toArray(e, "hex") : e
                    }, t.intFromLE = function(e) {
                        return new(c())(e, "hex", "le")
                    }
                })),
                qr = zr.getNAF,
                Hr = zr.getJSF,
                Wr = zr.assert;

            function Vr(e, r) {
                this.type = e, this.p = new(c())(r.p, 16), this.red = r.prime ? c().red(r.prime) : c().mont(this.p), this.zero = new(c())(0).toRed(this.red), this.one = new(c())(1).toRed(this.red), this.two = new(c())(2).toRed(this.red), this.n = r.n && new(c())(r.n, 16), this.g = r.g && this.pointFromJSON(r.g, r.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                var t = this.n && this.p.div(this.n);
                !t || t.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
            }
            var Jr = Vr;

            function Xr(e, r) {
                this.curve = e, this.type = r, this.precomputed = null
            }
            Vr.prototype.point = function() {
                throw new Error("Not implemented")
            }, Vr.prototype.validate = function() {
                throw new Error("Not implemented")
            }, Vr.prototype._fixedNafMul = function(e, r) {
                Wr(e.precomputed);
                var t = e._getDoubles(),
                    n = qr(r, 1, this._bitLength),
                    i = (1 << t.step + 1) - (t.step % 2 === 0 ? 2 : 1);
                i /= 3;
                var o, a, s = [];
                for (o = 0; o < n.length; o += t.step) {
                    a = 0;
                    for (var u = o + t.step - 1; u >= o; u--) a = (a << 1) + n[u];
                    s.push(a)
                }
                for (var c = this.jpoint(null, null, null), f = this.jpoint(null, null, null), l = i; l > 0; l--) {
                    for (o = 0; o < s.length; o++)(a = s[o]) === l ? f = f.mixedAdd(t.points[o]) : a === -l && (f = f.mixedAdd(t.points[o].neg()));
                    c = c.add(f)
                }
                return c.toP()
            }, Vr.prototype._wnafMul = function(e, r) {
                var t = 4,
                    n = e._getNAFPoints(t);
                t = n.wnd;
                for (var i = n.points, o = qr(r, t, this._bitLength), a = this.jpoint(null, null, null), s = o.length - 1; s >= 0; s--) {
                    for (var u = 0; s >= 0 && 0 === o[s]; s--) u++;
                    if (s >= 0 && u++, a = a.dblp(u), s < 0) break;
                    var c = o[s];
                    Wr(0 !== c), a = "affine" === e.type ? c > 0 ? a.mixedAdd(i[c - 1 >> 1]) : a.mixedAdd(i[-c - 1 >> 1].neg()) : c > 0 ? a.add(i[c - 1 >> 1]) : a.add(i[-c - 1 >> 1].neg())
                }
                return "affine" === e.type ? a.toP() : a
            }, Vr.prototype._wnafMulAdd = function(e, r, t, n, i) {
                var o, a, s, u = this._wnafT1,
                    c = this._wnafT2,
                    f = this._wnafT3,
                    l = 0;
                for (o = 0; o < n; o++) {
                    var h = (s = r[o])._getNAFPoints(e);
                    u[o] = h.wnd, c[o] = h.points
                }
                for (o = n - 1; o >= 1; o -= 2) {
                    var d = o - 1,
                        p = o;
                    if (1 === u[d] && 1 === u[p]) {
                        var v = [r[d], null, null, r[p]];
                        0 === r[d].y.cmp(r[p].y) ? (v[1] = r[d].add(r[p]), v[2] = r[d].toJ().mixedAdd(r[p].neg())) : 0 === r[d].y.cmp(r[p].y.redNeg()) ? (v[1] = r[d].toJ().mixedAdd(r[p]), v[2] = r[d].add(r[p].neg())) : (v[1] = r[d].toJ().mixedAdd(r[p]), v[2] = r[d].toJ().mixedAdd(r[p].neg()));
                        var g = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            m = Hr(t[d], t[p]);
                        for (l = Math.max(m[0].length, l), f[d] = new Array(l), f[p] = new Array(l), a = 0; a < l; a++) {
                            var y = 0 | m[0][a],
                                b = 0 | m[1][a];
                            f[d][a] = g[3 * (y + 1) + (b + 1)], f[p][a] = 0, c[d] = v
                        }
                    } else f[d] = qr(t[d], u[d], this._bitLength), f[p] = qr(t[p], u[p], this._bitLength), l = Math.max(f[d].length, l), l = Math.max(f[p].length, l)
                }
                var E = this.jpoint(null, null, null),
                    w = this._wnafT4;
                for (o = l; o >= 0; o--) {
                    for (var A = 0; o >= 0;) {
                        var k = !0;
                        for (a = 0; a < n; a++) w[a] = 0 | f[a][o], 0 !== w[a] && (k = !1);
                        if (!k) break;
                        A++, o--
                    }
                    if (o >= 0 && A++, E = E.dblp(A), o < 0) break;
                    for (a = 0; a < n; a++) {
                        var N = w[a];
                        0 !== N && (N > 0 ? s = c[a][N - 1 >> 1] : N < 0 && (s = c[a][-N - 1 >> 1].neg()), E = "affine" === s.type ? E.mixedAdd(s) : E.add(s))
                    }
                }
                for (o = 0; o < n; o++) c[o] = null;
                return i ? E : E.toP()
            }, Vr.BasePoint = Xr, Xr.prototype.eq = function() {
                throw new Error("Not implemented")
            }, Xr.prototype.validate = function() {
                return this.curve.validate(this)
            }, Vr.prototype.decodePoint = function(e, r) {
                e = zr.toArray(e, r);
                var t = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 === 2 * t) return 6 === e[0] ? Wr(e[e.length - 1] % 2 === 0) : 7 === e[0] && Wr(e[e.length - 1] % 2 === 1), this.point(e.slice(1, 1 + t), e.slice(1 + t, 1 + 2 * t));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === t) return this.pointFromX(e.slice(1, 1 + t), 3 === e[0]);
                throw new Error("Unknown point format")
            }, Xr.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }, Xr.prototype._encode = function(e) {
                var r = this.curve.p.byteLength(),
                    t = this.getX().toArray("be", r);
                return e ? [this.getY().isEven() ? 2 : 3].concat(t) : [4].concat(t, this.getY().toArray("be", r))
            }, Xr.prototype.encode = function(e, r) {
                return zr.encode(this._encode(r), e)
            }, Xr.prototype.precompute = function(e) {
                if (this.precomputed) return this;
                var r = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, e), r.beta = this._getBeta(), this.precomputed = r, this
            }, Xr.prototype._hasDoubles = function(e) {
                if (!this.precomputed) return !1;
                var r = this.precomputed.doubles;
                return !!r && r.points.length >= Math.ceil((e.bitLength() + 1) / r.step)
            }, Xr.prototype._getDoubles = function(e, r) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var t = [this], n = this, i = 0; i < r; i += e) {
                    for (var o = 0; o < e; o++) n = n.dbl();
                    t.push(n)
                }
                return {
                    step: e,
                    points: t
                }
            }, Xr.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var r = [this], t = (1 << e) - 1, n = 1 === t ? null : this.dbl(), i = 1; i < t; i++) r[i] = r[i - 1].add(n);
                return {
                    wnd: e,
                    points: r
                }
            }, Xr.prototype._getBeta = function() {
                return null
            }, Xr.prototype.dblp = function(e) {
                for (var r = this, t = 0; t < e; t++) r = r.dbl();
                return r
            };
            var Qr = Gr((function(e) {
                    "function" === typeof Object.create ? e.exports = function(e, r) {
                        r && (e.super_ = r, e.prototype = Object.create(r.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : e.exports = function(e, r) {
                        if (r) {
                            e.super_ = r;
                            var t = function() {};
                            t.prototype = r.prototype, e.prototype = new t, e.prototype.constructor = e
                        }
                    }
                })),
                Yr = zr.assert;

            function $r(e) {
                Jr.call(this, "short", e), this.a = new(c())(e.a, 16).toRed(this.red), this.b = new(c())(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
            }
            Qr($r, Jr);
            var et = $r;

            function rt(e, r, t, n) {
                Jr.BasePoint.call(this, e, "affine"), null === r && null === t ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new(c())(r, 16), this.y = new(c())(t, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
            }

            function tt(e, r, t, n) {
                Jr.BasePoint.call(this, e, "jacobian"), null === r && null === t && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new(c())(0)) : (this.x = new(c())(r, 16), this.y = new(c())(t, 16), this.z = new(c())(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
            }
            $r.prototype._getEndomorphism = function(e) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var r, t;
                    if (e.beta) r = new(c())(e.beta, 16).toRed(this.red);
                    else {
                        var n = this._getEndoRoots(this.p);
                        r = (r = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red)
                    }
                    if (e.lambda) t = new(c())(e.lambda, 16);
                    else {
                        var i = this._getEndoRoots(this.n);
                        0 === this.g.mul(i[0]).x.cmp(this.g.x.redMul(r)) ? t = i[0] : (t = i[1], Yr(0 === this.g.mul(t).x.cmp(this.g.x.redMul(r))))
                    }
                    return {
                        beta: r,
                        lambda: t,
                        basis: e.basis ? e.basis.map((function(e) {
                            return {
                                a: new(c())(e.a, 16),
                                b: new(c())(e.b, 16)
                            }
                        })) : this._getEndoBasis(t)
                    }
                }
            }, $r.prototype._getEndoRoots = function(e) {
                var r = e === this.p ? this.red : c().mont(e),
                    t = new(c())(2).toRed(r).redInvm(),
                    n = t.redNeg(),
                    i = new(c())(3).toRed(r).redNeg().redSqrt().redMul(t);
                return [n.redAdd(i).fromRed(), n.redSub(i).fromRed()]
            }, $r.prototype._getEndoBasis = function(e) {
                for (var r, t, n, i, o, a, s, u, f, l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h = e, d = this.n.clone(), p = new(c())(1), v = new(c())(0), g = new(c())(0), m = new(c())(1), y = 0; 0 !== h.cmpn(0);) {
                    var b = d.div(h);
                    u = d.sub(b.mul(h)), f = g.sub(b.mul(p));
                    var E = m.sub(b.mul(v));
                    if (!n && u.cmp(l) < 0) r = s.neg(), t = p, n = u.neg(), i = f;
                    else if (n && 2 === ++y) break;
                    s = u, d = h, h = u, g = p, p = f, m = v, v = E
                }
                o = u.neg(), a = f;
                var w = n.sqr().add(i.sqr());
                return o.sqr().add(a.sqr()).cmp(w) >= 0 && (o = r, a = t), n.negative && (n = n.neg(), i = i.neg()), o.negative && (o = o.neg(), a = a.neg()), [{
                    a: n,
                    b: i
                }, {
                    a: o,
                    b: a
                }]
            }, $r.prototype._endoSplit = function(e) {
                var r = this.endo.basis,
                    t = r[0],
                    n = r[1],
                    i = n.b.mul(e).divRound(this.n),
                    o = t.b.neg().mul(e).divRound(this.n),
                    a = i.mul(t.a),
                    s = o.mul(n.a),
                    u = i.mul(t.b),
                    c = o.mul(n.b);
                return {
                    k1: e.sub(a).sub(s),
                    k2: u.add(c).neg()
                }
            }, $r.prototype.pointFromX = function(e, r) {
                (e = new(c())(e, 16)).red || (e = e.toRed(this.red));
                var t = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),
                    n = t.redSqrt();
                if (0 !== n.redSqr().redSub(t).cmp(this.zero)) throw new Error("invalid point");
                var i = n.fromRed().isOdd();
                return (r && !i || !r && i) && (n = n.redNeg()), this.point(e, n)
            }, $r.prototype.validate = function(e) {
                if (e.inf) return !0;
                var r = e.x,
                    t = e.y,
                    n = this.a.redMul(r),
                    i = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);
                return 0 === t.redSqr().redISub(i).cmpn(0)
            }, $r.prototype._endoWnafMulAdd = function(e, r, t) {
                for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < e.length; o++) {
                    var a = this._endoSplit(r[o]),
                        s = e[o],
                        u = s._getBeta();
                    a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2
                }
                for (var c = this._wnafMulAdd(1, n, i, 2 * o, t), f = 0; f < 2 * o; f++) n[f] = null, i[f] = null;
                return c
            }, Qr(rt, Jr.BasePoint), $r.prototype.point = function(e, r, t) {
                return new rt(this, e, r, t)
            }, $r.prototype.pointFromJSON = function(e, r) {
                return rt.fromJSON(this, e, r)
            }, rt.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var e = this.precomputed;
                    if (e && e.beta) return e.beta;
                    var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (e) {
                        var t = this.curve,
                            n = function(e) {
                                return t.point(e.x.redMul(t.endo.beta), e.y)
                            };
                        e.beta = r, r.precomputed = {
                            beta: null,
                            naf: e.naf && {
                                wnd: e.naf.wnd,
                                points: e.naf.points.map(n)
                            },
                            doubles: e.doubles && {
                                step: e.doubles.step,
                                points: e.doubles.points.map(n)
                            }
                        }
                    }
                    return r
                }
            }, rt.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }, rt.fromJSON = function(e, r, t) {
                "string" === typeof r && (r = JSON.parse(r));
                var n = e.point(r[0], r[1], t);
                if (!r[2]) return n;

                function i(r) {
                    return e.point(r[0], r[1], t)
                }
                var o = r[2];
                return n.precomputed = {
                    beta: null,
                    doubles: o.doubles && {
                        step: o.doubles.step,
                        points: [n].concat(o.doubles.points.map(i))
                    },
                    naf: o.naf && {
                        wnd: o.naf.wnd,
                        points: [n].concat(o.naf.points.map(i))
                    }
                }, n
            }, rt.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }, rt.prototype.isInfinity = function() {
                return this.inf
            }, rt.prototype.add = function(e) {
                if (this.inf) return e;
                if (e.inf) return this;
                if (this.eq(e)) return this.dbl();
                if (this.neg().eq(e)) return this.curve.point(null, null);
                if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                var r = this.y.redSub(e.y);
                0 !== r.cmpn(0) && (r = r.redMul(this.x.redSub(e.x).redInvm()));
                var t = r.redSqr().redISub(this.x).redISub(e.x),
                    n = r.redMul(this.x.redSub(t)).redISub(this.y);
                return this.curve.point(t, n)
            }, rt.prototype.dbl = function() {
                if (this.inf) return this;
                var e = this.y.redAdd(this.y);
                if (0 === e.cmpn(0)) return this.curve.point(null, null);
                var r = this.curve.a,
                    t = this.x.redSqr(),
                    n = e.redInvm(),
                    i = t.redAdd(t).redIAdd(t).redIAdd(r).redMul(n),
                    o = i.redSqr().redISub(this.x.redAdd(this.x)),
                    a = i.redMul(this.x.redSub(o)).redISub(this.y);
                return this.curve.point(o, a)
            }, rt.prototype.getX = function() {
                return this.x.fromRed()
            }, rt.prototype.getY = function() {
                return this.y.fromRed()
            }, rt.prototype.mul = function(e) {
                return e = new(c())(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
            }, rt.prototype.mulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
            }, rt.prototype.jmulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
            }, rt.prototype.eq = function(e) {
                return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
            }, rt.prototype.neg = function(e) {
                if (this.inf) return this;
                var r = this.curve.point(this.x, this.y.redNeg());
                if (e && this.precomputed) {
                    var t = this.precomputed,
                        n = function(e) {
                            return e.neg()
                        };
                    r.precomputed = {
                        naf: t.naf && {
                            wnd: t.naf.wnd,
                            points: t.naf.points.map(n)
                        },
                        doubles: t.doubles && {
                            step: t.doubles.step,
                            points: t.doubles.points.map(n)
                        }
                    }
                }
                return r
            }, rt.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }, Qr(tt, Jr.BasePoint), $r.prototype.jpoint = function(e, r, t) {
                return new tt(this, e, r, t)
            }, tt.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var e = this.z.redInvm(),
                    r = e.redSqr(),
                    t = this.x.redMul(r),
                    n = this.y.redMul(r).redMul(e);
                return this.curve.point(t, n)
            }, tt.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }, tt.prototype.add = function(e) {
                if (this.isInfinity()) return e;
                if (e.isInfinity()) return this;
                var r = e.z.redSqr(),
                    t = this.z.redSqr(),
                    n = this.x.redMul(r),
                    i = e.x.redMul(t),
                    o = this.y.redMul(r.redMul(e.z)),
                    a = e.y.redMul(t.redMul(this.z)),
                    s = n.redSub(i),
                    u = o.redSub(a);
                if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = s.redSqr(),
                    f = c.redMul(s),
                    l = n.redMul(c),
                    h = u.redSqr().redIAdd(f).redISub(l).redISub(l),
                    d = u.redMul(l.redISub(h)).redISub(o.redMul(f)),
                    p = this.z.redMul(e.z).redMul(s);
                return this.curve.jpoint(h, d, p)
            }, tt.prototype.mixedAdd = function(e) {
                if (this.isInfinity()) return e.toJ();
                if (e.isInfinity()) return this;
                var r = this.z.redSqr(),
                    t = this.x,
                    n = e.x.redMul(r),
                    i = this.y,
                    o = e.y.redMul(r).redMul(this.z),
                    a = t.redSub(n),
                    s = i.redSub(o);
                if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = a.redSqr(),
                    c = u.redMul(a),
                    f = t.redMul(u),
                    l = s.redSqr().redIAdd(c).redISub(f).redISub(f),
                    h = s.redMul(f.redISub(l)).redISub(i.redMul(c)),
                    d = this.z.redMul(a);
                return this.curve.jpoint(l, h, d)
            }, tt.prototype.dblp = function(e) {
                if (0 === e) return this;
                if (this.isInfinity()) return this;
                if (!e) return this.dbl();
                var r;
                if (this.curve.zeroA || this.curve.threeA) {
                    var t = this;
                    for (r = 0; r < e; r++) t = t.dbl();
                    return t
                }
                var n = this.curve.a,
                    i = this.curve.tinv,
                    o = this.x,
                    a = this.y,
                    s = this.z,
                    u = s.redSqr().redSqr(),
                    c = a.redAdd(a);
                for (r = 0; r < e; r++) {
                    var f = o.redSqr(),
                        l = c.redSqr(),
                        h = l.redSqr(),
                        d = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)),
                        p = o.redMul(l),
                        v = d.redSqr().redISub(p.redAdd(p)),
                        g = p.redISub(v),
                        m = d.redMul(g);
                    m = m.redIAdd(m).redISub(h);
                    var y = c.redMul(s);
                    r + 1 < e && (u = u.redMul(h)), o = v, s = y, c = m
                }
                return this.curve.jpoint(o, c.redMul(i), s)
            }, tt.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }, tt.prototype._zeroDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n),
                        u = s.redSqr().redISub(a).redISub(a),
                        c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), e = u, r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.x.redSqr(),
                        l = this.y.redSqr(),
                        h = l.redSqr(),
                        d = this.x.redAdd(l).redSqr().redISub(f).redISub(h);
                    d = d.redIAdd(d);
                    var p = f.redAdd(f).redIAdd(f),
                        v = p.redSqr(),
                        g = h.redIAdd(h);
                    g = (g = g.redIAdd(g)).redIAdd(g), e = v.redISub(d).redISub(d), r = p.redMul(d.redISub(e)).redISub(g), t = (t = this.y.redMul(this.z)).redIAdd(t)
                }
                return this.curve.jpoint(e, r, t)
            }, tt.prototype._threeDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                        u = s.redSqr().redISub(a).redISub(a);
                    e = u;
                    var c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.z.redSqr(),
                        l = this.y.redSqr(),
                        h = this.x.redMul(l),
                        d = this.x.redSub(f).redMul(this.x.redAdd(f));
                    d = d.redAdd(d).redIAdd(d);
                    var p = h.redIAdd(h),
                        v = (p = p.redIAdd(p)).redAdd(p);
                    e = d.redSqr().redISub(v), t = this.y.redAdd(this.z).redSqr().redISub(l).redISub(f);
                    var g = l.redSqr();
                    g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), r = d.redMul(p.redISub(e)).redISub(g)
                }
                return this.curve.jpoint(e, r, t)
            }, tt.prototype._dbl = function() {
                var e = this.curve.a,
                    r = this.x,
                    t = this.y,
                    n = this.z,
                    i = n.redSqr().redSqr(),
                    o = r.redSqr(),
                    a = t.redSqr(),
                    s = o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),
                    u = r.redAdd(r),
                    c = (u = u.redIAdd(u)).redMul(a),
                    f = s.redSqr().redISub(c.redAdd(c)),
                    l = c.redISub(f),
                    h = a.redSqr();
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = s.redMul(l).redISub(h),
                    p = t.redAdd(t).redMul(n);
                return this.curve.jpoint(f, d, p)
            }, tt.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var e = this.x.redSqr(),
                    r = this.y.redSqr(),
                    t = this.z.redSqr(),
                    n = r.redSqr(),
                    i = e.redAdd(e).redIAdd(e),
                    o = i.redSqr(),
                    a = this.x.redAdd(r).redSqr().redISub(e).redISub(n),
                    s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),
                    u = n.redIAdd(n);
                u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
                    f = r.redMul(c);
                f = (f = f.redIAdd(f)).redIAdd(f);
                var l = this.x.redMul(s).redISub(f);
                l = (l = l.redIAdd(l)).redIAdd(l);
                var h = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = this.z.redAdd(a).redSqr().redISub(t).redISub(s);
                return this.curve.jpoint(l, h, d)
            }, tt.prototype.mul = function(e, r) {
                return e = new(c())(e, r), this.curve._wnafMul(this, e)
            }, tt.prototype.eq = function(e) {
                if ("affine" === e.type) return this.eq(e.toJ());
                if (this === e) return !0;
                var r = this.z.redSqr(),
                    t = e.z.redSqr();
                if (0 !== this.x.redMul(t).redISub(e.x.redMul(r)).cmpn(0)) return !1;
                var n = r.redMul(this.z),
                    i = t.redMul(e.z);
                return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)
            }, tt.prototype.eqXToP = function(e) {
                var r = this.z.redSqr(),
                    t = e.toRed(this.curve.red).redMul(r);
                if (0 === this.x.cmp(t)) return !0;
                for (var n = e.clone(), i = this.curve.redN.redMul(r);;) {
                    if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                    if (t.redIAdd(i), 0 === this.x.cmp(t)) return !0
                }
            }, tt.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }, tt.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            };
            var nt = Gr((function(e, r) {
                    var t = r;
                    t.base = Jr, t.short = et, t.mont = null, t.edwards = null
                })),
                it = Gr((function(e, r) {
                    var t, n = r,
                        i = zr.assert;

                    function o(e) {
                        "short" === e.type ? this.curve = new nt.short(e) : "edwards" === e.type ? this.curve = new nt.edwards(e) : this.curve = new nt.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                    }

                    function a(e, r) {
                        Object.defineProperty(n, e, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var t = new o(r);
                                return Object.defineProperty(n, e, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: t
                                }), t
                            }
                        })
                    }
                    n.PresetCurve = o, a("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: cr().sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }), a("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: cr().sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }), a("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: cr().sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }), a("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: cr().sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }), a("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: cr().sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }), a("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: cr().sha256,
                        gRed: !1,
                        g: ["9"]
                    }), a("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: cr().sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                    try {
                        t = null.crash()
                    } catch (s) {
                        t = void 0
                    }
                    a("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: cr().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [{
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        }, {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", t]
                    })
                }));

            function ot(e) {
                if (!(this instanceof ot)) return new ot(e);
                this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var r = Kr.toArray(e.entropy, e.entropyEnc || "hex"),
                    t = Kr.toArray(e.nonce, e.nonceEnc || "hex"),
                    n = Kr.toArray(e.pers, e.persEnc || "hex");
                Zr(r.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(r, t, n)
            }
            var at = ot;
            ot.prototype._init = function(e, r, t) {
                var n = e.concat(r).concat(t);
                this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
            }, ot.prototype._hmac = function() {
                return new(cr().hmac)(this.hash, this.K)
            }, ot.prototype._update = function(e) {
                var r = this._hmac().update(this.V).update([0]);
                e && (r = r.update(e)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest())
            }, ot.prototype.reseed = function(e, r, t, n) {
                "string" !== typeof r && (n = t, t = r, r = null), e = Kr.toArray(e, r), t = Kr.toArray(t, n), Zr(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(t || [])), this._reseed = 1
            }, ot.prototype.generate = function(e, r, t, n) {
                if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                "string" !== typeof r && (n = t, t = r, r = null), t && (t = Kr.toArray(t, n || "hex"), this._update(t));
                for (var i = []; i.length < e;) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                var o = i.slice(0, e);
                return this._update(t), this._reseed++, Kr.encode(o, r)
            };
            var st = zr.assert;

            function ut(e, r) {
                this.ec = e, this.priv = null, this.pub = null, r.priv && this._importPrivate(r.priv, r.privEnc), r.pub && this._importPublic(r.pub, r.pubEnc)
            }
            var ct = ut;
            ut.fromPublic = function(e, r, t) {
                return r instanceof ut ? r : new ut(e, {
                    pub: r,
                    pubEnc: t
                })
            }, ut.fromPrivate = function(e, r, t) {
                return r instanceof ut ? r : new ut(e, {
                    priv: r,
                    privEnc: t
                })
            }, ut.prototype.validate = function() {
                var e = this.getPublic();
                return e.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }, ut.prototype.getPublic = function(e, r) {
                return "string" === typeof e && (r = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, e) : this.pub
            }, ut.prototype.getPrivate = function(e) {
                return "hex" === e ? this.priv.toString(16, 2) : this.priv
            }, ut.prototype._importPrivate = function(e, r) {
                this.priv = new(c())(e, r || 16), this.priv = this.priv.umod(this.ec.curve.n)
            }, ut.prototype._importPublic = function(e, r) {
                if (e.x || e.y) return "mont" === this.ec.curve.type ? st(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || st(e.x && e.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(e.x, e.y));
                this.pub = this.ec.curve.decodePoint(e, r)
            }, ut.prototype.derive = function(e) {
                return e.validate() || st(e.validate(), "public point not validated"), e.mul(this.priv).getX()
            }, ut.prototype.sign = function(e, r, t) {
                return this.ec.sign(e, this, r, t)
            }, ut.prototype.verify = function(e, r) {
                return this.ec.verify(e, r, this)
            }, ut.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            };
            var ft = zr.assert;

            function lt(e, r) {
                if (e instanceof lt) return e;
                this._importDER(e, r) || (ft(e.r && e.s, "Signature without r or s"), this.r = new(c())(e.r, 16), this.s = new(c())(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }
            var ht = lt;

            function dt() {
                this.place = 0
            }

            function pt(e, r) {
                var t = e[r.place++];
                if (!(128 & t)) return t;
                var n = 15 & t;
                if (0 === n || n > 4) return !1;
                for (var i = 0, o = 0, a = r.place; o < n; o++, a++) i <<= 8, i |= e[a], i >>>= 0;
                return !(i <= 127) && (r.place = a, i)
            }

            function vt(e) {
                for (var r = 0, t = e.length - 1; !e[r] && !(128 & e[r + 1]) && r < t;) r++;
                return 0 === r ? e : e.slice(r)
            }

            function gt(e, r) {
                if (r < 128) e.push(r);
                else {
                    var t = 1 + (Math.log(r) / Math.LN2 >>> 3);
                    for (e.push(128 | t); --t;) e.push(r >>> (t << 3) & 255);
                    e.push(r)
                }
            }
            lt.prototype._importDER = function(e, r) {
                e = zr.toArray(e, r);
                var t = new dt;
                if (48 !== e[t.place++]) return !1;
                var n = pt(e, t);
                if (!1 === n) return !1;
                if (n + t.place !== e.length) return !1;
                if (2 !== e[t.place++]) return !1;
                var i = pt(e, t);
                if (!1 === i) return !1;
                var o = e.slice(t.place, i + t.place);
                if (t.place += i, 2 !== e[t.place++]) return !1;
                var a = pt(e, t);
                if (!1 === a) return !1;
                if (e.length !== a + t.place) return !1;
                var s = e.slice(t.place, a + t.place);
                if (0 === o[0]) {
                    if (!(128 & o[1])) return !1;
                    o = o.slice(1)
                }
                if (0 === s[0]) {
                    if (!(128 & s[1])) return !1;
                    s = s.slice(1)
                }
                return this.r = new(c())(o), this.s = new(c())(s), this.recoveryParam = null, !0
            }, lt.prototype.toDER = function(e) {
                var r = this.r.toArray(),
                    t = this.s.toArray();
                for (128 & r[0] && (r = [0].concat(r)), 128 & t[0] && (t = [0].concat(t)), r = vt(r), t = vt(t); !t[0] && !(128 & t[1]);) t = t.slice(1);
                var n = [2];
                gt(n, r.length), (n = n.concat(r)).push(2), gt(n, t.length);
                var i = n.concat(t),
                    o = [48];
                return gt(o, i.length), o = o.concat(i), zr.encode(o, e)
            };
            var mt = function() {
                    throw new Error("unsupported")
                },
                yt = zr.assert;

            function bt(e) {
                if (!(this instanceof bt)) return new bt(e);
                "string" === typeof e && (yt(Object.prototype.hasOwnProperty.call(it, e), "Unknown curve " + e), e = it[e]), e instanceof it.PresetCurve && (e = {
                    curve: e
                }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash
            }
            var Et = bt;
            bt.prototype.keyPair = function(e) {
                return new ct(this, e)
            }, bt.prototype.keyFromPrivate = function(e, r) {
                return ct.fromPrivate(this, e, r)
            }, bt.prototype.keyFromPublic = function(e, r) {
                return ct.fromPublic(this, e, r)
            }, bt.prototype.genKeyPair = function(e) {
                e || (e = {});
                for (var r = new at({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || mt(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), t = this.n.byteLength(), n = this.n.sub(new(c())(2));;) {
                    var i = new(c())(r.generate(t));
                    if (!(i.cmp(n) > 0)) return i.iaddn(1), this.keyFromPrivate(i)
                }
            }, bt.prototype._truncateToN = function(e, r) {
                var t = 8 * e.byteLength() - this.n.bitLength();
                return t > 0 && (e = e.ushrn(t)), !r && e.cmp(this.n) >= 0 ? e.sub(this.n) : e
            }, bt.prototype.sign = function(e, r, t, n) {
                "object" === typeof t && (n = t, t = null), n || (n = {}), r = this.keyFromPrivate(r, t), e = this._truncateToN(new(c())(e, 16));
                for (var i = this.n.byteLength(), o = r.getPrivate().toArray("be", i), a = e.toArray("be", i), s = new at({
                        hash: this.hash,
                        entropy: o,
                        nonce: a,
                        pers: n.pers,
                        persEnc: n.persEnc || "utf8"
                    }), u = this.n.sub(new(c())(1)), f = 0;; f++) {
                    var l = n.k ? n.k(f) : new(c())(s.generate(this.n.byteLength()));
                    if (!((l = this._truncateToN(l, !0)).cmpn(1) <= 0 || l.cmp(u) >= 0)) {
                        var h = this.g.mul(l);
                        if (!h.isInfinity()) {
                            var d = h.getX(),
                                p = d.umod(this.n);
                            if (0 !== p.cmpn(0)) {
                                var v = l.invm(this.n).mul(p.mul(r.getPrivate()).iadd(e));
                                if (0 !== (v = v.umod(this.n)).cmpn(0)) {
                                    var g = (h.getY().isOdd() ? 1 : 0) | (0 !== d.cmp(p) ? 2 : 0);
                                    return n.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), g ^= 1), new ht({
                                        r: p,
                                        s: v,
                                        recoveryParam: g
                                    })
                                }
                            }
                        }
                    }
                }
            }, bt.prototype.verify = function(e, r, t, n) {
                e = this._truncateToN(new(c())(e, 16)), t = this.keyFromPublic(t, n);
                var i = (r = new ht(r, "hex")).r,
                    o = r.s;
                if (i.cmpn(1) < 0 || i.cmp(this.n) >= 0) return !1;
                if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                var a, s = o.invm(this.n),
                    u = s.mul(e).umod(this.n),
                    f = s.mul(i).umod(this.n);
                return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(u, t.getPublic(), f)).isInfinity() && a.eqXToP(i) : !(a = this.g.mulAdd(u, t.getPublic(), f)).isInfinity() && 0 === a.getX().umod(this.n).cmp(i)
            }, bt.prototype.recoverPubKey = function(e, r, t, n) {
                yt((3 & t) === t, "The recovery param is more than two bits"), r = new ht(r, n);
                var i = this.n,
                    o = new(c())(e),
                    a = r.r,
                    s = r.s,
                    u = 1 & t,
                    f = t >> 1;
                if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && f) throw new Error("Unable to find sencond key candinate");
                a = f ? this.curve.pointFromX(a.add(this.curve.n), u) : this.curve.pointFromX(a, u);
                var l = r.r.invm(i),
                    h = i.sub(o).mul(l).umod(i),
                    d = s.mul(l).umod(i);
                return this.g.mulAdd(h, a, d)
            }, bt.prototype.getKeyRecoveryParam = function(e, r, t, n) {
                if (null !== (r = new ht(r, n)).recoveryParam) return r.recoveryParam;
                for (var i = 0; i < 4; i++) {
                    var o;
                    try {
                        o = this.recoverPubKey(e, r, i)
                    } catch (e) {
                        continue
                    }
                    if (o.eq(t)) return i
                }
                throw new Error("Unable to find valid recovery factor")
            };
            var wt = Gr((function(e, r) {
                    var t = r;
                    t.version = "6.5.4", t.utils = zr, t.rand = function() {
                        throw new Error("unsupported")
                    }, t.curve = nt, t.curves = it, t.ec = Et, t.eddsa = null
                })).ec,
                At = new b("signing-key/5.7.0"),
                kt = null;

            function Nt() {
                return kt || (kt = new wt("secp256k1")), kt
            }
            var Rt = function() {
                function e(r) {
                    (0, i.Z)(this, e), X(this, "curve", "secp256k1"), X(this, "privateKey", T(r)), 32 !== O(this.privateKey) && At.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                    var t = Nt().keyFromPrivate(x(this.privateKey));
                    X(this, "publicKey", "0x" + t.getPublic(!1, "hex")), X(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), X(this, "_isSigningKey", !0)
                }
                return (0, o.Z)(e, [{
                    key: "_addPoint",
                    value: function(e) {
                        var r = Nt().keyFromPublic(x(this.publicKey)),
                            t = Nt().keyFromPublic(x(e));
                        return "0x" + r.pub.add(t.pub).encodeCompressed("hex")
                    }
                }, {
                    key: "signDigest",
                    value: function(e) {
                        var r = Nt().keyFromPrivate(x(this.privateKey)),
                            t = x(e);
                        32 !== t.length && At.throwArgumentError("bad digest length", "digest", e);
                        var n = r.sign(t, {
                            canonical: !0
                        });
                        return D({
                            recoveryParam: n.recoveryParam,
                            r: F("0x" + n.r.toString(16), 32),
                            s: F("0x" + n.s.toString(16), 32)
                        })
                    }
                }, {
                    key: "computeSharedSecret",
                    value: function(e) {
                        var r = Nt().keyFromPrivate(x(this.privateKey)),
                            t = Nt().keyFromPublic(x(xt(e)));
                        return F("0x" + r.derive(t.getPublic()).toString(16), 32)
                    }
                }], [{
                    key: "isSigningKey",
                    value: function(e) {
                        return !(!e || !e._isSigningKey)
                    }
                }]), e
            }();

            function xt(e, r) {
                var t = x(e);
                if (32 === t.length) {
                    var n = new Rt(t);
                    return r ? "0x" + Nt().keyFromPrivate(t).getPublic(!0, "hex") : n.publicKey
                }
                return 33 === t.length ? r ? T(t) : "0x" + Nt().keyFromPublic(t).getPublic(!1, "hex") : 65 === t.length ? r ? "0x" + Nt().keyFromPublic(t).getPublic(!0, "hex") : T(t) : At.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
            var It, Pt = new b("transactions/5.7.0");

            function St(e) {
                return "0x" === e ? null : Mr(e)
            }

            function _t(e) {
                return "0x" === e ? Br : K.from(e)
            }! function(e) {
                e[e.legacy = 0] = "legacy", e[e.eip2930 = 1] = "eip2930", e[e.eip1559 = 2] = "eip1559"
            }(It || (It = {}));

            function Tt(e, r) {
                return function(e) {
                    return Mr(C(Oe(C(xt(e), 1)), 12))
                }(function(e, r) {
                    var t = D(r),
                        n = {
                            r: x(t.r),
                            s: x(t.s)
                        };
                    return "0x" + Nt().recoverPubKey(x(e), n, t.recoveryParam).encode("hex", !1)
                }(x(e), r))
            }

            function Ot(e, r) {
                var t = P(K.from(e).toHexString());
                return t.length > 32 && Pt.throwArgumentError("invalid length for " + r, "transaction:" + r, e), t
            }

            function Ct(e, r) {
                return {
                    address: Mr(e),
                    storageKeys: (r || []).map((function(r, t) {
                        return 32 !== O(r) && Pt.throwArgumentError("invalid access list storageKey", "accessList[".concat(e, ":").concat(t, "]"), r), r.toLowerCase()
                    }))
                }
            }

            function Ut(e) {
                if (Array.isArray(e)) return e.map((function(e, r) {
                    return Array.isArray(e) ? (e.length > 2 && Pt.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[".concat(r, "]"), e), Ct(e[0], e[1])) : Ct(e.address, e.storageKeys)
                }));
                var r = Object.keys(e).map((function(r) {
                    var t = e[r].reduce((function(e, r) {
                        return e[r] = !0, e
                    }), {});
                    return Ct(r, Object.keys(t).sort())
                }));
                return r.sort((function(e, r) {
                    return e.address.localeCompare(r.address)
                })), r
            }

            function Lt(e) {
                return Ut(e).map((function(e) {
                    return [e.address, e.storageKeys]
                }))
            }

            function Ft(e, r) {
                if (null != e.gasPrice) {
                    var t = K.from(e.gasPrice),
                        n = K.from(e.maxFeePerGas || 0);
                    t.eq(n) || Pt.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: t,
                        maxFeePerGas: n
                    })
                }
                var i = [Ot(e.chainId || 0, "chainId"), Ot(e.nonce || 0, "nonce"), Ot(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), Ot(e.maxFeePerGas || 0, "maxFeePerGas"), Ot(e.gasLimit || 0, "gasLimit"), null != e.to ? Mr(e.to) : "0x", Ot(e.value || 0, "value"), e.data || "0x", Lt(e.accessList || [])];
                if (r) {
                    var o = D(r);
                    i.push(Ot(o.recoveryParam, "recoveryParam")), i.push(P(o.r)), i.push(P(o.s))
                }
                return U(["0x02", xr(i)])
            }

            function Dt(e, r) {
                var t = [Ot(e.chainId || 0, "chainId"), Ot(e.nonce || 0, "nonce"), Ot(e.gasPrice || 0, "gasPrice"), Ot(e.gasLimit || 0, "gasLimit"), null != e.to ? Mr(e.to) : "0x", Ot(e.value || 0, "value"), e.data || "0x", Lt(e.accessList || [])];
                if (r) {
                    var n = D(r);
                    t.push(Ot(n.recoveryParam, "recoveryParam")), t.push(P(n.r)), t.push(P(n.s))
                }
                return U(["0x01", xr(t)])
            }

            function Mt(e, r, t) {
                try {
                    var n = _t(r[0]).toNumber();
                    if (0 !== n && 1 !== n) throw new Error("bad recid");
                    e.v = n
                } catch (o) {
                    Pt.throwArgumentError("invalid v for transaction type: 1", "v", r[0])
                }
                e.r = F(r[1], 32), e.s = F(r[2], 32);
                try {
                    var i = Oe(t(e));
                    e.from = Tt(i, {
                        r: e.r,
                        s: e.s,
                        recoveryParam: e.v
                    })
                } catch (o) {}
            }

            function Bt(e) {
                var r = x(e);
                if (r[0] > 127) return function(e) {
                    var r = Sr(e);
                    9 !== r.length && 6 !== r.length && Pt.throwArgumentError("invalid raw transaction", "rawTransaction", e);
                    var t = {
                        nonce: _t(r[0]).toNumber(),
                        gasPrice: _t(r[1]),
                        gasLimit: _t(r[2]),
                        to: St(r[3]),
                        value: _t(r[4]),
                        data: r[5],
                        chainId: 0
                    };
                    if (6 === r.length) return t;
                    try {
                        t.v = K.from(r[6]).toNumber()
                    } catch (a) {
                        return t
                    }
                    if (t.r = F(r[7], 32), t.s = F(r[8], 32), K.from(t.r).isZero() && K.from(t.s).isZero()) t.chainId = t.v, t.v = 0;
                    else {
                        t.chainId = Math.floor((t.v - 35) / 2), t.chainId < 0 && (t.chainId = 0);
                        var n = t.v - 27,
                            i = r.slice(0, 6);
                        0 !== t.chainId && (i.push(T(t.chainId)), i.push("0x"), i.push("0x"), n -= 2 * t.chainId + 8);
                        var o = Oe(xr(i));
                        try {
                            t.from = Tt(o, {
                                r: T(t.r),
                                s: T(t.s),
                                recoveryParam: n
                            })
                        } catch (a) {}
                        t.hash = Oe(e)
                    }
                    return t.type = null, t
                }(r);
                switch (r[0]) {
                    case 1:
                        return function(e) {
                            var r = Sr(e.slice(1));
                            8 !== r.length && 11 !== r.length && Pt.throwArgumentError("invalid component count for transaction type: 1", "payload", T(e));
                            var t = {
                                type: 1,
                                chainId: _t(r[0]).toNumber(),
                                nonce: _t(r[1]).toNumber(),
                                gasPrice: _t(r[2]),
                                gasLimit: _t(r[3]),
                                to: St(r[4]),
                                value: _t(r[5]),
                                data: r[6],
                                accessList: Ut(r[7])
                            };
                            return 8 === r.length || (t.hash = Oe(e), Mt(t, r.slice(8), Dt)), t
                        }(r);
                    case 2:
                        return function(e) {
                            var r = Sr(e.slice(1));
                            9 !== r.length && 12 !== r.length && Pt.throwArgumentError("invalid component count for transaction type: 2", "payload", T(e));
                            var t = _t(r[2]),
                                n = _t(r[3]),
                                i = {
                                    type: 2,
                                    chainId: _t(r[0]).toNumber(),
                                    nonce: _t(r[1]).toNumber(),
                                    maxPriorityFeePerGas: t,
                                    maxFeePerGas: n,
                                    gasPrice: null,
                                    gasLimit: _t(r[4]),
                                    to: St(r[5]),
                                    value: _t(r[6]),
                                    data: r[7],
                                    accessList: Ut(r[8])
                                };
                            return 9 === r.length || (i.hash = Oe(e), Mt(i, r.slice(9), Ft)), i
                        }(r)
                }
                return Pt.throwError("unsupported transaction type: ".concat(r[0]), b.errors.UNSUPPORTED_OPERATION, {
                    operation: "parseTransaction",
                    transactionType: r[0]
                })
            }
            var Gt = new b(wr),
                Zt = function() {
                    function e() {
                        (0, i.Z)(this, e), this.formats = this.getDefaultFormats()
                    }
                    return (0, o.Z)(e, [{
                        key: "getDefaultFormats",
                        value: function() {
                            var r = this,
                                t = {},
                                n = this.address.bind(this),
                                i = this.bigNumber.bind(this),
                                o = this.blockTag.bind(this),
                                a = this.data.bind(this),
                                s = this.hash.bind(this),
                                u = this.hex.bind(this),
                                c = this.number.bind(this),
                                f = this.type.bind(this);
                            return t.transaction = {
                                hash: s,
                                type: f,
                                accessList: e.allowNull(this.accessList.bind(this), null),
                                blockHash: e.allowNull(s, null),
                                blockNumber: e.allowNull(c, null),
                                transactionIndex: e.allowNull(c, null),
                                confirmations: e.allowNull(c, null),
                                from: n,
                                gasPrice: e.allowNull(i),
                                maxPriorityFeePerGas: e.allowNull(i),
                                maxFeePerGas: e.allowNull(i),
                                gasLimit: i,
                                to: e.allowNull(n, null),
                                value: i,
                                nonce: c,
                                data: a,
                                r: e.allowNull(this.uint256),
                                s: e.allowNull(this.uint256),
                                v: e.allowNull(c),
                                creates: e.allowNull(n, null),
                                raw: e.allowNull(a)
                            }, t.transactionRequest = {
                                from: e.allowNull(n),
                                nonce: e.allowNull(c),
                                gasLimit: e.allowNull(i),
                                gasPrice: e.allowNull(i),
                                maxPriorityFeePerGas: e.allowNull(i),
                                maxFeePerGas: e.allowNull(i),
                                to: e.allowNull(n),
                                value: e.allowNull(i),
                                data: e.allowNull((function(e) {
                                    return r.data(e, !0)
                                })),
                                type: e.allowNull(c),
                                accessList: e.allowNull(this.accessList.bind(this), null)
                            }, t.receiptLog = {
                                transactionIndex: c,
                                blockNumber: c,
                                transactionHash: s,
                                address: n,
                                topics: e.arrayOf(s),
                                data: a,
                                logIndex: c,
                                blockHash: s
                            }, t.receipt = {
                                to: e.allowNull(this.address, null),
                                from: e.allowNull(this.address, null),
                                contractAddress: e.allowNull(n, null),
                                transactionIndex: c,
                                root: e.allowNull(u),
                                gasUsed: i,
                                logsBloom: e.allowNull(a),
                                blockHash: s,
                                transactionHash: s,
                                logs: e.arrayOf(this.receiptLog.bind(this)),
                                blockNumber: c,
                                confirmations: e.allowNull(c, null),
                                cumulativeGasUsed: i,
                                effectiveGasPrice: e.allowNull(i),
                                status: e.allowNull(c),
                                type: f
                            }, t.block = {
                                hash: e.allowNull(s),
                                parentHash: s,
                                number: c,
                                timestamp: c,
                                nonce: e.allowNull(u),
                                difficulty: this.difficulty.bind(this),
                                gasLimit: i,
                                gasUsed: i,
                                miner: e.allowNull(n),
                                extraData: a,
                                transactions: e.allowNull(e.arrayOf(s)),
                                baseFeePerGas: e.allowNull(i)
                            }, t.blockWithTransactions = $(t.block), t.blockWithTransactions.transactions = e.allowNull(e.arrayOf(this.transactionResponse.bind(this))), t.filter = {
                                fromBlock: e.allowNull(o, void 0),
                                toBlock: e.allowNull(o, void 0),
                                blockHash: e.allowNull(s, void 0),
                                address: e.allowNull(n, void 0),
                                topics: e.allowNull(this.topics.bind(this), void 0)
                            }, t.filterLog = {
                                blockNumber: e.allowNull(c),
                                blockHash: e.allowNull(s),
                                transactionIndex: c,
                                removed: e.allowNull(this.boolean.bind(this)),
                                address: n,
                                data: e.allowFalsish(a, "0x"),
                                topics: e.arrayOf(s),
                                transactionHash: s,
                                logIndex: c
                            }, t
                        }
                    }, {
                        key: "accessList",
                        value: function(e) {
                            return Ut(e || [])
                        }
                    }, {
                        key: "number",
                        value: function(e) {
                            return "0x" === e ? 0 : K.from(e).toNumber()
                        }
                    }, {
                        key: "type",
                        value: function(e) {
                            return "0x" === e || null == e ? 0 : K.from(e).toNumber()
                        }
                    }, {
                        key: "bigNumber",
                        value: function(e) {
                            return K.from(e)
                        }
                    }, {
                        key: "boolean",
                        value: function(e) {
                            if ("boolean" === typeof e) return e;
                            if ("string" === typeof e) {
                                if ("true" === (e = e.toLowerCase())) return !0;
                                if ("false" === e) return !1
                            }
                            throw new Error("invalid boolean - " + e)
                        }
                    }, {
                        key: "hex",
                        value: function(e, r) {
                            return "string" === typeof e && (r || "0x" === e.substring(0, 2) || (e = "0x" + e), S(e)) ? e.toLowerCase() : Gt.throwArgumentError("invalid hash", "value", e)
                        }
                    }, {
                        key: "data",
                        value: function(e, r) {
                            var t = this.hex(e, r);
                            if (t.length % 2 !== 0) throw new Error("invalid data; odd-length - " + e);
                            return t
                        }
                    }, {
                        key: "address",
                        value: function(e) {
                            return Mr(e)
                        }
                    }, {
                        key: "callAddress",
                        value: function(e) {
                            if (!S(e, 32)) return null;
                            var r = Mr(C(e, 12));
                            return "0x0000000000000000000000000000000000000000" === r ? null : r
                        }
                    }, {
                        key: "contractAddress",
                        value: function(e) {
                            return function(e) {
                                var r = null;
                                try {
                                    r = Mr(e.from)
                                } catch (t) {
                                    _r.throwArgumentError("missing from address", "transaction", e)
                                }
                                return Mr(C(Oe(xr([r, P(x(K.from(e.nonce).toHexString()))])), 12))
                            }(e)
                        }
                    }, {
                        key: "blockTag",
                        value: function(e) {
                            if (null == e) return "latest";
                            if ("earliest" === e) return "0x0";
                            if ("latest" === e || "pending" === e) return e;
                            if ("number" === typeof e || S(e)) return L(e);
                            throw new Error("invalid blockTag")
                        }
                    }, {
                        key: "hash",
                        value: function(e, r) {
                            var t = this.hex(e, r);
                            return 32 !== O(t) ? Gt.throwArgumentError("invalid hash", "value", e) : t
                        }
                    }, {
                        key: "difficulty",
                        value: function(e) {
                            if (null == e) return null;
                            var r = K.from(e);
                            try {
                                return r.toNumber()
                            } catch (t) {}
                            return null
                        }
                    }, {
                        key: "uint256",
                        value: function(e) {
                            if (!S(e)) throw new Error("invalid uint256");
                            return F(e, 32)
                        }
                    }, {
                        key: "_block",
                        value: function(r, t) {
                            null != r.author && null == r.miner && (r.miner = r.author);
                            var n = null != r._difficulty ? r._difficulty : r.difficulty,
                                i = e.check(t, r);
                            return i._difficulty = null == n ? null : K.from(n), i
                        }
                    }, {
                        key: "block",
                        value: function(e) {
                            return this._block(e, this.formats.block)
                        }
                    }, {
                        key: "blockWithTransactions",
                        value: function(e) {
                            return this._block(e, this.formats.blockWithTransactions)
                        }
                    }, {
                        key: "transactionRequest",
                        value: function(r) {
                            return e.check(this.formats.transactionRequest, r)
                        }
                    }, {
                        key: "transactionResponse",
                        value: function(r) {
                            null != r.gas && null == r.gasLimit && (r.gasLimit = r.gas), r.to && K.from(r.to).isZero() && (r.to = "0x0000000000000000000000000000000000000000"), null != r.input && null == r.data && (r.data = r.input), null == r.to && null == r.creates && (r.creates = this.contractAddress(r)), 1 !== r.type && 2 !== r.type || null != r.accessList || (r.accessList = []);
                            var t = e.check(this.formats.transaction, r);
                            if (null != r.chainId) {
                                var n = r.chainId;
                                S(n) && (n = K.from(n).toNumber()), t.chainId = n
                            } else {
                                var i = r.networkId;
                                null == i && null == t.v && (i = r.chainId), S(i) && (i = K.from(i).toNumber()), "number" !== typeof i && null != t.v && ((i = (t.v - 35) / 2) < 0 && (i = 0), i = parseInt(i)), "number" !== typeof i && (i = 0), t.chainId = i
                            }
                            return t.blockHash && "x" === t.blockHash.replace(/0/g, "") && (t.blockHash = null), t
                        }
                    }, {
                        key: "transaction",
                        value: function(e) {
                            return Bt(e)
                        }
                    }, {
                        key: "receiptLog",
                        value: function(r) {
                            return e.check(this.formats.receiptLog, r)
                        }
                    }, {
                        key: "receipt",
                        value: function(r) {
                            var t = e.check(this.formats.receipt, r);
                            if (null != t.root)
                                if (t.root.length <= 4) {
                                    var n = K.from(t.root).toNumber();
                                    0 === n || 1 === n ? (null != t.status && t.status !== n && Gt.throwArgumentError("alt-root-status/status mismatch", "value", {
                                        root: t.root,
                                        status: t.status
                                    }), t.status = n, delete t.root) : Gt.throwArgumentError("invalid alt-root-status", "value.root", t.root)
                                } else 66 !== t.root.length && Gt.throwArgumentError("invalid root hash", "value.root", t.root);
                            return null != t.status && (t.byzantium = !0), t
                        }
                    }, {
                        key: "topics",
                        value: function(e) {
                            var r = this;
                            return Array.isArray(e) ? e.map((function(e) {
                                return r.topics(e)
                            })) : null != e ? this.hash(e, !0) : null
                        }
                    }, {
                        key: "filter",
                        value: function(r) {
                            return e.check(this.formats.filter, r)
                        }
                    }, {
                        key: "filterLog",
                        value: function(r) {
                            return e.check(this.formats.filterLog, r)
                        }
                    }], [{
                        key: "check",
                        value: function(e, r) {
                            var t = {};
                            for (var n in e) try {
                                var i = e[n](r[n]);
                                void 0 !== i && (t[n] = i)
                            } catch (o) {
                                throw o.checkKey = n, o.checkValue = r[n], o
                            }
                            return t
                        }
                    }, {
                        key: "allowNull",
                        value: function(e, r) {
                            return function(t) {
                                return null == t ? r : e(t)
                            }
                        }
                    }, {
                        key: "allowFalsish",
                        value: function(e, r) {
                            return function(t) {
                                return t ? e(t) : r
                            }
                        }
                    }, {
                        key: "arrayOf",
                        value: function(e) {
                            return function(r) {
                                if (!Array.isArray(r)) throw new Error("not an array");
                                var t = [];
                                return r.forEach((function(r) {
                                    t.push(e(r))
                                })), t
                            }
                        }
                    }]), e
                }();

            function jt(e) {
                return e && "function" === typeof e.isCommunityResource
            }

            function Kt(e) {
                return jt(e) && e.isCommunityResource()
            }
            var zt = !1;

            function qt() {
                zt || (zt = !0, console.log("========= NOTICE ========="), console.log("Request-Rate Exceeded  (this message will not be repeated)"), console.log(""), console.log("The default API keys for each service are provided as a highly-throttled,"), console.log("community resource for low-traffic projects and early prototyping."), console.log(""), console.log("While your application will continue to function, we highly recommended"), console.log("signing up for your own API keys to improve performance, increase your"), console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."), console.log(""), console.log("For more details: https://docs.ethers.io/api-keys/"), console.log("=========================="))
            }
            var Ht = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                Wt = new b(wr);

            function Vt(e) {
                return null == e ? "null" : (32 !== O(e) && Wt.throwArgumentError("invalid topic", "topic", e), e.toLowerCase())
            }

            function Jt(e) {
                for (e = e.slice(); e.length > 0 && null == e[e.length - 1];) e.pop();
                return e.map((function(e) {
                    if (Array.isArray(e)) {
                        var r = {};
                        e.forEach((function(e) {
                            r[Vt(e)] = !0
                        }));
                        var t = Object.keys(r);
                        return t.sort(), t.join("|")
                    }
                    return Vt(e)
                })).join("&")
            }

            function Xt(e) {
                if ("string" === typeof e) {
                    if (32 === O(e = e.toLowerCase())) return "tx:" + e;
                    if (-1 === e.indexOf(":")) return e
                } else {
                    if (Array.isArray(e)) return "filter:*:" + Jt(e);
                    if (se.isForkEvent(e)) throw Wt.warn("not implemented"), new Error("not implemented");
                    if (e && "object" === typeof e) return "filter:" + (e.address || "*") + ":" + Jt(e.topics || [])
                }
                throw new Error("invalid event - " + e)
            }

            function Qt() {
                return (new Date).getTime()
            }

            function Yt(e) {
                return new Promise((function(r) {
                    setTimeout(r, e)
                }))
            }
            var $t = ["block", "network", "pending", "poll"],
                en = function() {
                    function e(r, t, n) {
                        (0, i.Z)(this, e), X(this, "tag", r), X(this, "listener", t), X(this, "once", n), this._lastBlockNumber = -2, this._inflight = !1
                    }
                    return (0, o.Z)(e, [{
                        key: "event",
                        get: function() {
                            switch (this.type) {
                                case "tx":
                                    return this.hash;
                                case "filter":
                                    return this.filter
                            }
                            return this.tag
                        }
                    }, {
                        key: "type",
                        get: function() {
                            return this.tag.split(":")[0]
                        }
                    }, {
                        key: "hash",
                        get: function() {
                            var e = this.tag.split(":");
                            return "tx" !== e[0] ? null : e[1]
                        }
                    }, {
                        key: "filter",
                        get: function() {
                            var e = this.tag.split(":");
                            if ("filter" !== e[0]) return null;
                            var r, t = e[1],
                                n = "" === (r = e[2]) ? [] : r.split(/&/g).map((function(e) {
                                    if ("" === e) return [];
                                    var r = e.split("|").map((function(e) {
                                        return "null" === e ? null : e
                                    }));
                                    return 1 === r.length ? r[0] : r
                                })),
                                i = {};
                            return n.length > 0 && (i.topics = n), t && "*" !== t && (i.address = t), i
                        }
                    }, {
                        key: "pollable",
                        value: function() {
                            return this.tag.indexOf(":") >= 0 || $t.indexOf(this.tag) >= 0
                        }
                    }]), e
                }(),
                rn = {
                    0: {
                        symbol: "btc",
                        p2pkh: 0,
                        p2sh: 5,
                        prefix: "bc"
                    },
                    2: {
                        symbol: "ltc",
                        p2pkh: 48,
                        p2sh: 50,
                        prefix: "ltc"
                    },
                    3: {
                        symbol: "doge",
                        p2pkh: 30,
                        p2sh: 22
                    },
                    60: {
                        symbol: "eth",
                        ilk: "eth"
                    },
                    61: {
                        symbol: "etc",
                        ilk: "eth"
                    },
                    700: {
                        symbol: "xdai",
                        ilk: "eth"
                    }
                };

            function tn(e) {
                return F(K.from(e).toHexString(), 32)
            }

            function nn(e) {
                return ke.encode(I([e, C(fr(fr(e)), 0, 4)]))
            }
            var on = new RegExp("^(ipfs)://(.*)$", "i"),
                an = [new RegExp("^(https)://(.*)$", "i"), new RegExp("^(data):(.*)$", "i"), on, new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];

            function sn(e, r) {
                try {
                    return Se(un(e, r))
                } catch (t) {}
                return null
            }

            function un(e, r) {
                if ("0x" === e) return null;
                var t = K.from(C(e, r, r + 32)).toNumber(),
                    n = K.from(C(e, t, t + 32)).toNumber();
                return C(e, t + 32, t + 32 + n)
            }

            function cn(e) {
                return e.match(/^ipfs:\/\/ipfs\//i) ? e = e.substring(12) : e.match(/^ipfs:\/\//i) ? e = e.substring(7) : Wt.throwArgumentError("unsupported IPFS format", "link", e), "https://gateway.ipfs.io/ipfs/".concat(e)
            }

            function fn(e) {
                var r = x(e);
                if (r.length > 32) throw new Error("internal; should not happen");
                var t = new Uint8Array(32);
                return t.set(r, 32 - r.length), t
            }

            function ln(e) {
                if (e.length % 32 === 0) return e;
                var r = new Uint8Array(32 * Math.ceil(e.length / 32));
                return r.set(e), r
            }

            function hn(e) {
                for (var r = [], t = 0, n = 0; n < e.length; n++) r.push(null), t += 32;
                for (var i = 0; i < e.length; i++) {
                    var o = x(e[i]);
                    r[i] = fn(t), r.push(fn(o.length)), r.push(ln(o)), t += 32 + 32 * Math.ceil(o.length / 32)
                }
                return U(r)
            }
            var dn = function() {
                    function e(r, t, n, o) {
                        (0, i.Z)(this, e), X(this, "provider", r), X(this, "name", n), X(this, "address", r.formatter.address(t)), X(this, "_resolvedAddress", o)
                    }
                    return (0, o.Z)(e, [{
                        key: "supportsWildcard",
                        value: function() {
                            var e = this;
                            return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                                to: this.address,
                                data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                            }).then((function(e) {
                                return K.from(e).eq(1)
                            })).catch((function(r) {
                                if (r.code === b.errors.CALL_EXCEPTION) return !1;
                                throw e._supportsEip2544 = null, r
                            }))), this._supportsEip2544
                        }
                    }, {
                        key: "_fetch",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o, a;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return i = {
                                                to: this.address,
                                                ccipReadEnabled: !0,
                                                data: U([e, sr(this.name), r || "0x"])
                                            }, o = !1, t.next = 4, this.supportsWildcard();
                                        case 4:
                                            if (!t.sent) {
                                                t.next = 7;
                                                break
                                            }
                                            o = !0, i.data = U(["0x9061b923", hn([(n = this.name, T(I(ar(n).map((function(e) {
                                                if (e.length > 63) throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
                                                var r = new Uint8Array(e.length + 1);
                                                return r.set(e, 1), r[0] = r.length - 1, r
                                            })))) + "00"), i.data])]);
                                        case 7:
                                            return t.prev = 7, t.next = 10, this.provider.call(i);
                                        case 10:
                                            return x(a = t.sent).length % 32 === 4 && Wt.throwError("resolver threw error", b.errors.CALL_EXCEPTION, {
                                                transaction: i,
                                                data: a
                                            }), o && (a = un(a, 0)), t.abrupt("return", a);
                                        case 16:
                                            if (t.prev = 16, t.t0 = t.catch(7), t.t0.code !== b.errors.CALL_EXCEPTION) {
                                                t.next = 20;
                                                break
                                            }
                                            return t.abrupt("return", null);
                                        case 20:
                                            throw t.t0;
                                        case 21:
                                        case "end":
                                            return t.stop()
                                    }
                                    var n
                                }), t, this, [
                                    [7, 16]
                                ])
                            })))
                        }
                    }, {
                        key: "_fetchBytes",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this._fetch(e, r);
                                        case 2:
                                            if (null == (i = t.sent)) {
                                                t.next = 5;
                                                break
                                            }
                                            return t.abrupt("return", un(i, 0));
                                        case 5:
                                            return t.abrupt("return", null);
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }, {
                        key: "_getAddress",
                        value: function(e, r) {
                            var t = rn[String(e)];
                            if (null == t && Wt.throwError("unsupported coin type: ".concat(e), b.errors.UNSUPPORTED_OPERATION, {
                                    operation: "getAddress(".concat(e, ")")
                                }), "eth" === t.ilk) return this.provider.formatter.address(r);
                            var n = x(r);
                            if (null != t.p2pkh) {
                                var i = r.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                                if (i) {
                                    var o = parseInt(i[1], 16);
                                    if (i[2].length === 2 * o && o >= 1 && o <= 75) return nn(I([
                                        [t.p2pkh], "0x" + i[2]
                                    ]))
                                }
                            }
                            if (null != t.p2sh) {
                                var a = r.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                                if (a) {
                                    var s = parseInt(a[1], 16);
                                    if (a[2].length === 2 * s && s >= 1 && s <= 75) return nn(I([
                                        [t.p2sh], "0x" + a[2]
                                    ]))
                                }
                            }
                            if (null != t.prefix) {
                                var u = n[1],
                                    c = n[0];
                                if (0 === c ? 20 !== u && 32 !== u && (c = -1) : c = -1, c >= 0 && n.length === 2 + u && u >= 1 && u <= 75) {
                                    var f = Er().toWords(n.slice(2));
                                    return f.unshift(c), Er().encode(t.prefix, f)
                                }
                            }
                            return null
                        }
                    }, {
                        key: "getAddress",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            if (null == e && (e = 60), 60 !== e) {
                                                r.next = 16;
                                                break
                                            }
                                            return r.prev = 2, r.next = 5, this._fetch("0x3b3b57de");
                                        case 5:
                                            if ("0x" !== (t = r.sent) && "0x0000000000000000000000000000000000000000000000000000000000000000" !== t) {
                                                r.next = 8;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 8:
                                            return r.abrupt("return", this.provider.formatter.callAddress(t));
                                        case 11:
                                            if (r.prev = 11, r.t0 = r.catch(2), r.t0.code !== b.errors.CALL_EXCEPTION) {
                                                r.next = 15;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 15:
                                            throw r.t0;
                                        case 16:
                                            return r.next = 18, this._fetchBytes("0xf1cb7e06", tn(e));
                                        case 18:
                                            if (null != (i = r.sent) && "0x" !== i) {
                                                r.next = 21;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 21:
                                            return null == (o = this._getAddress(e, i)) && Wt.throwError("invalid or unsupported coin data", b.errors.UNSUPPORTED_OPERATION, {
                                                operation: "getAddress(".concat(e, ")"),
                                                coinType: e,
                                                data: i
                                            }), r.abrupt("return", o);
                                        case 24:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [2, 11]
                                ])
                            })))
                        }
                    }, {
                        key: "getAvatar",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, t, i, o, a, s, u, c, f, l, h, d, p, v, g, m;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return r = [{
                                                type: "name",
                                                content: this.name
                                            }], e.prev = 1, e.next = 4, this.getText("avatar");
                                        case 4:
                                            if (null != (t = e.sent)) {
                                                e.next = 7;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 7:
                                            i = 0;
                                        case 8:
                                            if (!(i < an.length)) {
                                                e.next = 91;
                                                break
                                            }
                                            if (null != (o = t.match(an[i]))) {
                                                e.next = 12;
                                                break
                                            }
                                            return e.abrupt("continue", 88);
                                        case 12:
                                            a = o[1].toLowerCase(), e.t0 = a, e.next = "https" === e.t0 ? 16 : "data" === e.t0 ? 18 : "ipfs" === e.t0 ? 20 : "erc721" === e.t0 || "erc1155" === e.t0 ? 22 : 88;
                                            break;
                                        case 16:
                                            return r.push({
                                                type: "url",
                                                content: t
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: t
                                            });
                                        case 18:
                                            return r.push({
                                                type: "data",
                                                content: t
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: t
                                            });
                                        case 20:
                                            return r.push({
                                                type: "ipfs",
                                                content: t
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: cn(t)
                                            });
                                        case 22:
                                            if (s = "erc721" === a ? "0xc87b56dd" : "0x0e89341c", r.push({
                                                    type: a,
                                                    content: t
                                                }), e.t1 = this._resolvedAddress, e.t1) {
                                                e.next = 29;
                                                break
                                            }
                                            return e.next = 28, this.getAddress();
                                        case 28:
                                            e.t1 = e.sent;
                                        case 29:
                                            if (u = e.t1, 2 === (c = (o[2] || "").split("/")).length) {
                                                e.next = 33;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 33:
                                            return e.next = 35, this.provider.formatter.address(c[0]);
                                        case 35:
                                            if (f = e.sent, l = F(K.from(c[1]).toHexString(), 32), "erc721" !== a) {
                                                e.next = 48;
                                                break
                                            }
                                            return e.t2 = this.provider.formatter, e.next = 41, this.provider.call({
                                                to: f,
                                                data: U(["0x6352211e", l])
                                            });
                                        case 41:
                                            if (e.t3 = e.sent, h = e.t2.callAddress.call(e.t2, e.t3), u === h) {
                                                e.next = 45;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 45:
                                            r.push({
                                                type: "owner",
                                                content: h
                                            }), e.next = 57;
                                            break;
                                        case 48:
                                            if ("erc1155" !== a) {
                                                e.next = 57;
                                                break
                                            }
                                            return e.t4 = K, e.next = 52, this.provider.call({
                                                to: f,
                                                data: U(["0x00fdd58e", F(u, 32), l])
                                            });
                                        case 52:
                                            if (e.t5 = e.sent, !(d = e.t4.from.call(e.t4, e.t5)).isZero()) {
                                                e.next = 56;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 56:
                                            r.push({
                                                type: "balance",
                                                content: d.toString()
                                            });
                                        case 57:
                                            return p = {
                                                to: this.provider.formatter.address(c[0]),
                                                data: U([s, l])
                                            }, e.t6 = sn, e.next = 61, this.provider.call(p);
                                        case 61:
                                            if (e.t7 = e.sent, null != (v = (0, e.t6)(e.t7, 0))) {
                                                e.next = 65;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 65:
                                            return r.push({
                                                type: "metadata-url-base",
                                                content: v
                                            }), "erc1155" === a && (v = v.replace("{id}", l.substring(2)), r.push({
                                                type: "metadata-url-expanded",
                                                content: v
                                            })), v.match(/^ipfs:/i) && (v = cn(v)), r.push({
                                                type: "metadata-url",
                                                content: v
                                            }), e.next = 71, mr(v);
                                        case 71:
                                            if (g = e.sent) {
                                                e.next = 74;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 74:
                                            if (r.push({
                                                    type: "metadata",
                                                    content: JSON.stringify(g)
                                                }), "string" === typeof(m = g.image)) {
                                                e.next = 78;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 78:
                                            if (!m.match(/^(https:\/\/|data:)/i)) {
                                                e.next = 81;
                                                break
                                            }
                                            e.next = 86;
                                            break;
                                        case 81:
                                            if (null != m.match(on)) {
                                                e.next = 84;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 84:
                                            r.push({
                                                type: "url-ipfs",
                                                content: m
                                            }), m = cn(m);
                                        case 86:
                                            return r.push({
                                                type: "url",
                                                content: m
                                            }), e.abrupt("return", {
                                                linkage: r,
                                                url: m
                                            });
                                        case 88:
                                            i++, e.next = 8;
                                            break;
                                        case 91:
                                            e.next = 95;
                                            break;
                                        case 93:
                                            e.prev = 93, e.t8 = e.catch(1);
                                        case 95:
                                            return e.abrupt("return", null);
                                        case 96:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [1, 93]
                                ])
                            })))
                        }
                    }, {
                        key: "getContentHash",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, t, i, o, a, s, u, c, f;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this._fetchBytes("0xbc1c58d1");
                                        case 2:
                                            if (null != (r = e.sent) && "0x" !== r) {
                                                e.next = 5;
                                                break
                                            }
                                            return e.abrupt("return", null);
                                        case 5:
                                            if (!(t = r.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))) {
                                                e.next = 10;
                                                break
                                            }
                                            if (i = parseInt(t[3], 16), t[4].length !== 2 * i) {
                                                e.next = 10;
                                                break
                                            }
                                            return e.abrupt("return", "ipfs://" + ke.encode("0x" + t[1]));
                                        case 10:
                                            if (!(o = r.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))) {
                                                e.next = 15;
                                                break
                                            }
                                            if (a = parseInt(o[3], 16), o[4].length !== 2 * a) {
                                                e.next = 15;
                                                break
                                            }
                                            return e.abrupt("return", "ipns://" + ke.encode("0x" + o[1]));
                                        case 15:
                                            if (!(s = r.match(/^0xe40101fa011b20([0-9a-f]*)$/))) {
                                                e.next = 19;
                                                break
                                            }
                                            if (64 !== s[1].length) {
                                                e.next = 19;
                                                break
                                            }
                                            return e.abrupt("return", "bzz://" + s[1]);
                                        case 19:
                                            if (!(u = r.match(/^0x90b2c605([0-9a-f]*)$/))) {
                                                e.next = 25;
                                                break
                                            }
                                            if (68 !== u[1].length) {
                                                e.next = 25;
                                                break
                                            }
                                            return c = {
                                                "=": "",
                                                "+": "-",
                                                "/": "_"
                                            }, f = be("0x" + u[1]).replace(/[=+\/]/g, (function(e) {
                                                return c[e]
                                            })), e.abrupt("return", "sia://" + f);
                                        case 25:
                                            return e.abrupt("return", Wt.throwError("invalid or unsupported content hash data", b.errors.UNSUPPORTED_OPERATION, {
                                                operation: "getContentHash()",
                                                data: r
                                            }));
                                        case 26:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getText",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = Pe(e), (t = I([tn(64), tn(t.length), t])).length % 32 !== 0 && (t = I([t, F("0x", 32 - e.length % 32)])), r.next = 5, this._fetchBytes("0x59d1d43c", T(t));
                                        case 5:
                                            if (null != (i = r.sent) && "0x" !== i) {
                                                r.next = 8;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 8:
                                            return r.abrupt("return", Se(i));
                                        case 9:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }]), e
                }(),
                pn = null,
                vn = 1,
                gn = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e) {
                        var n;
                        if ((0, i.Z)(this, t), (n = r.call(this))._events = [], n._emitted = {
                                block: -2
                            }, n.disableCcipRead = !1, n.formatter = (this instanceof t ? this.constructor : void 0).getFormatter(), X((0, me.Z)(n), "anyNetwork", "any" === e), n.anyNetwork && (e = n.detectNetwork()), e instanceof Promise) n._networkPromise = e, e.catch((function(e) {})), n._ready().catch((function(e) {}));
                        else {
                            var o = Q(this instanceof t ? this.constructor : void 0, "getNetwork")(e);
                            o ? (X((0, me.Z)(n), "_network", o), n.emit("network", o, null)) : Wt.throwArgumentError("invalid network", "network", e)
                        }
                        return n._maxInternalBlockNumber = -1024, n._lastBlockNumber = -2, n._maxFilterBlockRange = 10, n._pollingInterval = 4e3, n._fastQueryDate = 0, n
                    }
                    return (0, o.Z)(t, [{
                        key: "_ready",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (null != this._network) {
                                                e.next = 17;
                                                break
                                            }
                                            if (r = null, !this._networkPromise) {
                                                e.next = 11;
                                                break
                                            }
                                            return e.prev = 3, e.next = 6, this._networkPromise;
                                        case 6:
                                            r = e.sent, e.next = 11;
                                            break;
                                        case 9:
                                            e.prev = 9, e.t0 = e.catch(3);
                                        case 11:
                                            if (null != r) {
                                                e.next = 15;
                                                break
                                            }
                                            return e.next = 14, this.detectNetwork();
                                        case 14:
                                            r = e.sent;
                                        case 15:
                                            r || Wt.throwError("no network detected", b.errors.UNKNOWN_ERROR, {}), null == this._network && (this.anyNetwork ? this._network = r : X(this, "_network", r), this.emit("network", r, null));
                                        case 17:
                                            return e.abrupt("return", this._network);
                                        case 18:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [3, 9]
                                ])
                            })))
                        }
                    }, {
                        key: "ready",
                        get: function() {
                            var e = this;
                            return yr((function() {
                                return e._ready().then((function(e) {
                                    return e
                                }), (function(e) {
                                    if (e.code !== b.errors.NETWORK_ERROR || "noNetwork" !== e.event) throw e
                                }))
                            }))
                        }
                    }, {
                        key: "ccipReadFetch",
                        value: function(e, r, t) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function i() {
                                var o, a, s, u, c, f, l, h, d;
                                return (0, n.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            if (!this.disableCcipRead && 0 !== t.length) {
                                                n.next = 2;
                                                break
                                            }
                                            return n.abrupt("return", null);
                                        case 2:
                                            o = e.to.toLowerCase(), a = r.toLowerCase(), s = [], u = 0;
                                        case 6:
                                            if (!(u < t.length)) {
                                                n.next = 22;
                                                break
                                            }
                                            return c = t[u], f = c.replace("{sender}", o).replace("{data}", a), l = c.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                                data: a,
                                                sender: o
                                            }), n.next = 12, mr({
                                                url: f,
                                                errorPassThrough: !0
                                            }, l, (function(e, r) {
                                                return e.status = r.statusCode, e
                                            }));
                                        case 12:
                                            if (!(h = n.sent).data) {
                                                n.next = 15;
                                                break
                                            }
                                            return n.abrupt("return", h.data);
                                        case 15:
                                            if (d = h.message || "unknown error", !(h.status >= 400 && h.status < 500)) {
                                                n.next = 18;
                                                break
                                            }
                                            return n.abrupt("return", Wt.throwError("response not found during CCIP fetch: ".concat(d), b.errors.SERVER_ERROR, {
                                                url: c,
                                                errorMessage: d
                                            }));
                                        case 18:
                                            s.push(d);
                                        case 19:
                                            u++, n.next = 6;
                                            break;
                                        case 22:
                                            return n.abrupt("return", Wt.throwError("error encountered during CCIP fetch: ".concat(s.map((function(e) {
                                                return JSON.stringify(e)
                                            })).join(", ")), b.errors.SERVER_ERROR, {
                                                urls: t,
                                                errorMessages: s
                                            }));
                                        case 23:
                                        case "end":
                                            return n.stop()
                                    }
                                }), i, this)
                            })))
                        }
                    }, {
                        key: "_getInternalBlockNumber",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o, a, s = this;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this._ready();
                                        case 2:
                                            if (!(e > 0)) {
                                                r.next = 20;
                                                break
                                            }
                                        case 3:
                                            if (!this._internalBlockNumber) {
                                                r.next = 20;
                                                break
                                            }
                                            return t = this._internalBlockNumber, r.prev = 5, r.next = 8, t;
                                        case 8:
                                            if (i = r.sent, !(Qt() - i.respTime <= e)) {
                                                r.next = 11;
                                                break
                                            }
                                            return r.abrupt("return", i.blockNumber);
                                        case 11:
                                            return r.abrupt("break", 20);
                                        case 14:
                                            if (r.prev = 14, r.t0 = r.catch(5), this._internalBlockNumber !== t) {
                                                r.next = 18;
                                                break
                                            }
                                            return r.abrupt("break", 20);
                                        case 18:
                                            r.next = 3;
                                            break;
                                        case 20:
                                            return o = Qt(), a = Y({
                                                blockNumber: this.perform("getBlockNumber", {}),
                                                networkError: this.getNetwork().then((function(e) {
                                                    return null
                                                }), (function(e) {
                                                    return e
                                                }))
                                            }).then((function(e) {
                                                var r = e.blockNumber,
                                                    t = e.networkError;
                                                if (t) throw s._internalBlockNumber === a && (s._internalBlockNumber = null), t;
                                                var n = Qt();
                                                return (r = K.from(r).toNumber()) < s._maxInternalBlockNumber && (r = s._maxInternalBlockNumber), s._maxInternalBlockNumber = r, s._setFastBlockNumber(r), {
                                                    blockNumber: r,
                                                    reqTime: o,
                                                    respTime: n
                                                }
                                            })), this._internalBlockNumber = a, a.catch((function(e) {
                                                s._internalBlockNumber === a && (s._internalBlockNumber = null)
                                            })), r.next = 26, a;
                                        case 26:
                                            return r.abrupt("return", r.sent.blockNumber);
                                        case 27:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [5, 14]
                                ])
                            })))
                        }
                    }, {
                        key: "poll",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, t, i, o, a = this;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return r = vn++, t = [], i = null, e.prev = 3, e.next = 6, this._getInternalBlockNumber(100 + this.pollingInterval / 2);
                                        case 6:
                                            i = e.sent, e.next = 13;
                                            break;
                                        case 9:
                                            return e.prev = 9, e.t0 = e.catch(3), this.emit("error", e.t0), e.abrupt("return");
                                        case 13:
                                            if (this._setFastBlockNumber(i), this.emit("poll", r, i), i !== this._lastBlockNumber) {
                                                e.next = 18;
                                                break
                                            }
                                            return this.emit("didPoll", r), e.abrupt("return");
                                        case 18:
                                            if (-2 === this._emitted.block && (this._emitted.block = i - 1), Math.abs(this._emitted.block - i) > 1e3) Wt.warn("network block skew detected; skipping block events (emitted=".concat(this._emitted.block, " blockNumber").concat(i, ")")), this.emit("error", Wt.makeError("network block skew detected", b.errors.NETWORK_ERROR, {
                                                blockNumber: i,
                                                event: "blockSkew",
                                                previousBlockNumber: this._emitted.block
                                            })), this.emit("block", i);
                                            else
                                                for (o = this._emitted.block + 1; o <= i; o++) this.emit("block", o);
                                            return this._emitted.block !== i && (this._emitted.block = i, Object.keys(this._emitted).forEach((function(e) {
                                                if ("block" !== e) {
                                                    var r = a._emitted[e];
                                                    "pending" !== r && i - r > 12 && delete a._emitted[e]
                                                }
                                            }))), -2 === this._lastBlockNumber && (this._lastBlockNumber = i - 1), this._events.forEach((function(e) {
                                                switch (e.type) {
                                                    case "tx":
                                                        var r = e.hash,
                                                            n = a.getTransactionReceipt(r).then((function(e) {
                                                                return e && null != e.blockNumber ? (a._emitted["t:" + r] = e.blockNumber, a.emit(r, e), null) : null
                                                            })).catch((function(e) {
                                                                a.emit("error", e)
                                                            }));
                                                        t.push(n);
                                                        break;
                                                    case "filter":
                                                        if (!e._inflight) {
                                                            e._inflight = !0;
                                                            var o = e.filter;
                                                            o.fromBlock = e._lastBlockNumber + 1, o.toBlock = i, o.toBlock - a._maxFilterBlockRange > o.fromBlock && (o.fromBlock = o.toBlock - a._maxFilterBlockRange);
                                                            var s = a.getLogs(o).then((function(r) {
                                                                e._inflight = !1, 0 !== r.length && r.forEach((function(r) {
                                                                    r.blockNumber > e._lastBlockNumber && (e._lastBlockNumber = r.blockNumber), a._emitted["b:" + r.blockHash] = r.blockNumber, a._emitted["t:" + r.transactionHash] = r.blockNumber, a.emit(o, r)
                                                                }))
                                                            })).catch((function(r) {
                                                                a.emit("error", r), e._inflight = !1
                                                            }));
                                                            t.push(s)
                                                        }
                                                }
                                            })), this._lastBlockNumber = i, Promise.all(t).then((function() {
                                                a.emit("didPoll", r)
                                            })).catch((function(e) {
                                                a.emit("error", e)
                                            })), e.abrupt("return");
                                        case 26:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [3, 9]
                                ])
                            })))
                        }
                    }, {
                        key: "resetEventsBlock",
                        value: function(e) {
                            this._lastBlockNumber = e - 1, this.polling && this.poll()
                        }
                    }, {
                        key: "network",
                        get: function() {
                            return this._network
                        }
                    }, {
                        key: "detectNetwork",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.abrupt("return", Wt.throwError("provider does not support network detection", b.errors.UNSUPPORTED_OPERATION, {
                                                operation: "provider.detectNetwork"
                                            }));
                                        case 1:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            })))
                        }
                    }, {
                        key: "getNetwork",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, t, i;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this._ready();
                                        case 2:
                                            return r = e.sent, e.next = 5, this.detectNetwork();
                                        case 5:
                                            if (t = e.sent, r.chainId === t.chainId) {
                                                e.next = 23;
                                                break
                                            }
                                            if (!this.anyNetwork) {
                                                e.next = 20;
                                                break
                                            }
                                            return this._network = t, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", t, r), e.next = 19, Yt(0);
                                        case 19:
                                            return e.abrupt("return", this._network);
                                        case 20:
                                            throw i = Wt.makeError("underlying network changed", b.errors.NETWORK_ERROR, {
                                                event: "changed",
                                                network: r,
                                                detectedNetwork: t
                                            }), this.emit("error", i), i;
                                        case 23:
                                            return e.abrupt("return", r);
                                        case 24:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "blockNumber",
                        get: function() {
                            var e = this;
                            return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((function(r) {
                                e._setFastBlockNumber(r)
                            }), (function(e) {})), null != this._fastBlockNumber ? this._fastBlockNumber : -1
                        }
                    }, {
                        key: "polling",
                        get: function() {
                            return null != this._poller
                        },
                        set: function(e) {
                            var r = this;
                            e && !this._poller ? (this._poller = setInterval((function() {
                                r.poll()
                            }), this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout((function() {
                                r.poll(), r._bootstrapPoll = setTimeout((function() {
                                    r._poller || r.poll(), r._bootstrapPoll = null
                                }), r.pollingInterval)
                            }), 0))) : !e && this._poller && (clearInterval(this._poller), this._poller = null)
                        }
                    }, {
                        key: "pollingInterval",
                        get: function() {
                            return this._pollingInterval
                        },
                        set: function(e) {
                            var r = this;
                            if ("number" !== typeof e || e <= 0 || parseInt(String(e)) != e) throw new Error("invalid polling interval");
                            this._pollingInterval = e, this._poller && (clearInterval(this._poller), this._poller = setInterval((function() {
                                r.poll()
                            }), this._pollingInterval))
                        }
                    }, {
                        key: "_getFastBlockNumber",
                        value: function() {
                            var e = this,
                                r = Qt();
                            return r - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = r, this._fastBlockNumberPromise = this.getBlockNumber().then((function(r) {
                                return (null == e._fastBlockNumber || r > e._fastBlockNumber) && (e._fastBlockNumber = r), e._fastBlockNumber
                            }))), this._fastBlockNumberPromise
                        }
                    }, {
                        key: "_setFastBlockNumber",
                        value: function(e) {
                            null != this._fastBlockNumber && e < this._fastBlockNumber || (this._fastQueryDate = Qt(), (null == this._fastBlockNumber || e > this._fastBlockNumber) && (this._fastBlockNumber = e, this._fastBlockNumberPromise = Promise.resolve(e)))
                        }
                    }, {
                        key: "waitForTransaction",
                        value: function(e, r, t) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function i() {
                                return (0, n.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return n.abrupt("return", this._waitForTransaction(e, null == r ? 1 : r, t || 0, null));
                                        case 1:
                                        case "end":
                                            return n.stop()
                                    }
                                }), i, this)
                            })))
                        }
                    }, {
                        key: "_waitForTransaction",
                        value: function(e, r, t, i) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function o() {
                                var a, s = this;
                                return (0, n.Z)().wrap((function(o) {
                                    for (;;) switch (o.prev = o.next) {
                                        case 0:
                                            return o.next = 2, this.getTransactionReceipt(e);
                                        case 2:
                                            if (!(((a = o.sent) ? a.confirmations : 0) >= r)) {
                                                o.next = 5;
                                                break
                                            }
                                            return o.abrupt("return", a);
                                        case 5:
                                            return o.abrupt("return", new Promise((function(o, a) {
                                                var u = [],
                                                    c = !1,
                                                    f = function() {
                                                        return !!c || (c = !0, u.forEach((function(e) {
                                                            e()
                                                        })), !1)
                                                    },
                                                    l = function(e) {
                                                        e.confirmations < r || f() || o(e)
                                                    };
                                                if (s.on(e, l), u.push((function() {
                                                        s.removeListener(e, l)
                                                    })), i) {
                                                    var h = i.startBlock,
                                                        d = null,
                                                        p = function t(o) {
                                                            return Ht(s, void 0, void 0, (0, n.Z)().mark((function s() {
                                                                var u = this;
                                                                return (0, n.Z)().wrap((function(s) {
                                                                    for (;;) switch (s.prev = s.next) {
                                                                        case 0:
                                                                            if (!c) {
                                                                                s.next = 2;
                                                                                break
                                                                            }
                                                                            return s.abrupt("return");
                                                                        case 2:
                                                                            return s.next = 4, Yt(1e3);
                                                                        case 4:
                                                                            this.getTransactionCount(i.from).then((function(s) {
                                                                                return Ht(u, void 0, void 0, (0, n.Z)().mark((function u() {
                                                                                    var l, p, v, g, m, y;
                                                                                    return (0, n.Z)().wrap((function(n) {
                                                                                        for (;;) switch (n.prev = n.next) {
                                                                                            case 0:
                                                                                                if (!c) {
                                                                                                    n.next = 2;
                                                                                                    break
                                                                                                }
                                                                                                return n.abrupt("return");
                                                                                            case 2:
                                                                                                if (!(s <= i.nonce)) {
                                                                                                    n.next = 6;
                                                                                                    break
                                                                                                }
                                                                                                h = o, n.next = 41;
                                                                                                break;
                                                                                            case 6:
                                                                                                return n.next = 8, this.getTransaction(e);
                                                                                            case 8:
                                                                                                if (!(l = n.sent) || null == l.blockNumber) {
                                                                                                    n.next = 11;
                                                                                                    break
                                                                                                }
                                                                                                return n.abrupt("return");
                                                                                            case 11:
                                                                                                null == d && (d = h - 3) < i.startBlock && (d = i.startBlock);
                                                                                            case 12:
                                                                                                if (!(d <= o)) {
                                                                                                    n.next = 41;
                                                                                                    break
                                                                                                }
                                                                                                if (!c) {
                                                                                                    n.next = 15;
                                                                                                    break
                                                                                                }
                                                                                                return n.abrupt("return");
                                                                                            case 15:
                                                                                                return n.next = 17, this.getBlockWithTransactions(d);
                                                                                            case 17:
                                                                                                p = n.sent, v = 0;
                                                                                            case 19:
                                                                                                if (!(v < p.transactions.length)) {
                                                                                                    n.next = 38;
                                                                                                    break
                                                                                                }
                                                                                                if ((g = p.transactions[v]).hash !== e) {
                                                                                                    n.next = 23;
                                                                                                    break
                                                                                                }
                                                                                                return n.abrupt("return");
                                                                                            case 23:
                                                                                                if (g.from !== i.from || g.nonce !== i.nonce) {
                                                                                                    n.next = 35;
                                                                                                    break
                                                                                                }
                                                                                                if (!c) {
                                                                                                    n.next = 26;
                                                                                                    break
                                                                                                }
                                                                                                return n.abrupt("return");
                                                                                            case 26:
                                                                                                return n.next = 28, this.waitForTransaction(g.hash, r);
                                                                                            case 28:
                                                                                                if (m = n.sent, !f()) {
                                                                                                    n.next = 31;
                                                                                                    break
                                                                                                }
                                                                                                return n.abrupt("return");
                                                                                            case 31:
                                                                                                return y = "replaced", g.data === i.data && g.to === i.to && g.value.eq(i.value) ? y = "repriced" : "0x" === g.data && g.from === g.to && g.value.isZero() && (y = "cancelled"), a(Wt.makeError("transaction was replaced", b.errors.TRANSACTION_REPLACED, {
                                                                                                    cancelled: "replaced" === y || "cancelled" === y,
                                                                                                    reason: y,
                                                                                                    replacement: this._wrapTransaction(g),
                                                                                                    hash: e,
                                                                                                    receipt: m
                                                                                                })), n.abrupt("return");
                                                                                            case 35:
                                                                                                v++, n.next = 19;
                                                                                                break;
                                                                                            case 38:
                                                                                                d++, n.next = 12;
                                                                                                break;
                                                                                            case 41:
                                                                                                if (!c) {
                                                                                                    n.next = 43;
                                                                                                    break
                                                                                                }
                                                                                                return n.abrupt("return");
                                                                                            case 43:
                                                                                                this.once("block", t);
                                                                                            case 44:
                                                                                            case "end":
                                                                                                return n.stop()
                                                                                        }
                                                                                    }), u, this)
                                                                                })))
                                                                            }), (function(e) {
                                                                                c || u.once("block", t)
                                                                            }));
                                                                        case 5:
                                                                        case "end":
                                                                            return s.stop()
                                                                    }
                                                                }), s, this)
                                                            })))
                                                        };
                                                    if (c) return;
                                                    s.once("block", p), u.push((function() {
                                                        s.removeListener("block", p)
                                                    }))
                                                }
                                                if ("number" === typeof t && t > 0) {
                                                    var v = setTimeout((function() {
                                                        f() || a(Wt.makeError("timeout exceeded", b.errors.TIMEOUT, {
                                                            timeout: t
                                                        }))
                                                    }), t);
                                                    v.unref && v.unref(), u.push((function() {
                                                        clearTimeout(v)
                                                    }))
                                                }
                                            })));
                                        case 6:
                                        case "end":
                                            return o.stop()
                                    }
                                }), o, this)
                            })))
                        }
                    }, {
                        key: "getBlockNumber",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.abrupt("return", this._getInternalBlockNumber(0));
                                        case 1:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getGasPrice",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this.getNetwork();
                                        case 2:
                                            return e.next = 4, this.perform("getGasPrice", {});
                                        case 4:
                                            return r = e.sent, e.prev = 5, e.abrupt("return", K.from(r));
                                        case 9:
                                            return e.prev = 9, e.t0 = e.catch(5), e.abrupt("return", Wt.throwError("bad result from backend", b.errors.SERVER_ERROR, {
                                                method: "getGasPrice",
                                                result: r,
                                                error: e.t0
                                            }));
                                        case 12:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [5, 9]
                                ])
                            })))
                        }
                    }, {
                        key: "getBalance",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, Y({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(r)
                                            });
                                        case 4:
                                            return i = t.sent, t.next = 7, this.perform("getBalance", i);
                                        case 7:
                                            return o = t.sent, t.prev = 8, t.abrupt("return", K.from(o));
                                        case 12:
                                            return t.prev = 12, t.t0 = t.catch(8), t.abrupt("return", Wt.throwError("bad result from backend", b.errors.SERVER_ERROR, {
                                                method: "getBalance",
                                                params: i,
                                                result: o,
                                                error: t.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "getTransactionCount",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, Y({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(r)
                                            });
                                        case 4:
                                            return i = t.sent, t.next = 7, this.perform("getTransactionCount", i);
                                        case 7:
                                            return o = t.sent, t.prev = 8, t.abrupt("return", K.from(o).toNumber());
                                        case 12:
                                            return t.prev = 12, t.t0 = t.catch(8), t.abrupt("return", Wt.throwError("bad result from backend", b.errors.SERVER_ERROR, {
                                                method: "getTransactionCount",
                                                params: i,
                                                result: o,
                                                error: t.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "getCode",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, Y({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(r)
                                            });
                                        case 4:
                                            return i = t.sent, t.next = 7, this.perform("getCode", i);
                                        case 7:
                                            return o = t.sent, t.prev = 8, t.abrupt("return", T(o));
                                        case 12:
                                            return t.prev = 12, t.t0 = t.catch(8), t.abrupt("return", Wt.throwError("bad result from backend", b.errors.SERVER_ERROR, {
                                                method: "getCode",
                                                params: i,
                                                result: o,
                                                error: t.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "getStorageAt",
                        value: function(e, r, t) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function i() {
                                var o, a;
                                return (0, n.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return n.next = 2, this.getNetwork();
                                        case 2:
                                            return n.next = 4, Y({
                                                address: this._getAddress(e),
                                                blockTag: this._getBlockTag(t),
                                                position: Promise.resolve(r).then((function(e) {
                                                    return L(e)
                                                }))
                                            });
                                        case 4:
                                            return o = n.sent, n.next = 7, this.perform("getStorageAt", o);
                                        case 7:
                                            return a = n.sent, n.prev = 8, n.abrupt("return", T(a));
                                        case 12:
                                            return n.prev = 12, n.t0 = n.catch(8), n.abrupt("return", Wt.throwError("bad result from backend", b.errors.SERVER_ERROR, {
                                                method: "getStorageAt",
                                                params: o,
                                                result: a,
                                                error: n.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return n.stop()
                                    }
                                }), i, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "_wrapTransaction",
                        value: function(e, r, t) {
                            var i = this;
                            if (null != r && 32 !== O(r)) throw new Error("invalid response - sendTransaction");
                            var o = e;
                            return null != r && e.hash !== r && Wt.throwError("Transaction hash mismatch from Provider.sendTransaction.", b.errors.UNKNOWN_ERROR, {
                                expectedHash: e.hash,
                                returnedHash: r
                            }), o.wait = function(r, o) {
                                return Ht(i, void 0, void 0, (0, n.Z)().mark((function i() {
                                    var a, s;
                                    return (0, n.Z)().wrap((function(n) {
                                        for (;;) switch (n.prev = n.next) {
                                            case 0:
                                                return null == r && (r = 1), null == o && (o = 0), a = void 0, 0 !== r && null != t && (a = {
                                                    data: e.data,
                                                    from: e.from,
                                                    nonce: e.nonce,
                                                    to: e.to,
                                                    value: e.value,
                                                    startBlock: t
                                                }), n.next = 6, this._waitForTransaction(e.hash, r, o, a);
                                            case 6:
                                                if (null != (s = n.sent) || 0 !== r) {
                                                    n.next = 9;
                                                    break
                                                }
                                                return n.abrupt("return", null);
                                            case 9:
                                                return this._emitted["t:" + e.hash] = s.blockNumber, 0 === s.status && Wt.throwError("transaction failed", b.errors.CALL_EXCEPTION, {
                                                    transactionHash: e.hash,
                                                    transaction: e,
                                                    receipt: s
                                                }), n.abrupt("return", s);
                                            case 12:
                                            case "end":
                                                return n.stop()
                                        }
                                    }), i, this)
                                })))
                            }, o
                        }
                    }, {
                        key: "sendTransaction",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o, a;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, Promise.resolve(e).then((function(e) {
                                                return T(e)
                                            }));
                                        case 4:
                                            return t = r.sent, null == (i = this.formatter.transaction(e)).confirmations && (i.confirmations = 0), r.next = 9, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                        case 9:
                                            return o = r.sent, r.prev = 10, r.next = 13, this.perform("sendTransaction", {
                                                signedTransaction: t
                                            });
                                        case 13:
                                            return a = r.sent, r.abrupt("return", this._wrapTransaction(i, a, o));
                                        case 17:
                                            throw r.prev = 17, r.t0 = r.catch(10), r.t0.transaction = i, r.t0.transactionHash = i.hash, r.t0;
                                        case 22:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [10, 17]
                                ])
                            })))
                        }
                    }, {
                        key: "_getTransactionRequest",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o = this;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return t = r.sent, i = {}, ["from", "to"].forEach((function(e) {
                                                null != t[e] && (i[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return e ? o._getAddress(e) : null
                                                })))
                                            })), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((function(e) {
                                                null != t[e] && (i[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return e ? K.from(e) : null
                                                })))
                                            })), ["type"].forEach((function(e) {
                                                null != t[e] && (i[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return null != e ? e : null
                                                })))
                                            })), t.accessList && (i.accessList = this.formatter.accessList(t.accessList)), ["data"].forEach((function(e) {
                                                null != t[e] && (i[e] = Promise.resolve(t[e]).then((function(e) {
                                                    return e ? T(e) : null
                                                })))
                                            })), r.t0 = this.formatter, r.next = 12, Y(i);
                                        case 12:
                                            return r.t1 = r.sent, r.abrupt("return", r.t0.transactionRequest.call(r.t0, r.t1));
                                        case 14:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_getFilter",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i = this;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return e = r.sent, t = {}, null != e.address && (t.address = this._getAddress(e.address)), ["blockHash", "topics"].forEach((function(r) {
                                                null != e[r] && (t[r] = e[r])
                                            })), ["fromBlock", "toBlock"].forEach((function(r) {
                                                null != e[r] && (t[r] = i._getBlockTag(e[r]))
                                            })), r.t0 = this.formatter, r.next = 10, Y(t);
                                        case 10:
                                            return r.t1 = r.sent, r.abrupt("return", r.t0.filter.call(r.t0, r.t1));
                                        case 12:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_call",
                        value: function(e, r, t) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function i() {
                                var o, a, s, u, c, f, l, h, d, p, v, g, m, y, E;
                                return (0, n.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return t >= 10 && Wt.throwError("CCIP read exceeded maximum redirections", b.errors.SERVER_ERROR, {
                                                redirects: t,
                                                transaction: e
                                            }), o = e.to, n.next = 4, this.perform("call", {
                                                transaction: e,
                                                blockTag: r
                                            });
                                        case 4:
                                            if (a = n.sent, !(t >= 0 && "latest" === r && null != o && "0x556f1830" === a.substring(0, 10) && O(a) % 32 === 4)) {
                                                n.next = 31;
                                                break
                                            }
                                            for (n.prev = 6, s = C(a, 4), u = C(s, 0, 32), K.from(u).eq(o) || Wt.throwError("CCIP Read sender did not match", b.errors.CALL_EXCEPTION, {
                                                    name: "OffchainLookup",
                                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                    transaction: e,
                                                    data: a
                                                }), c = [], f = K.from(C(s, 32, 64)).toNumber(), l = K.from(C(s, f, f + 32)).toNumber(), h = C(s, f + 32), d = 0; d < l; d++) null == (p = sn(h, 32 * d)) && Wt.throwError("CCIP Read contained corrupt URL string", b.errors.CALL_EXCEPTION, {
                                                name: "OffchainLookup",
                                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                transaction: e,
                                                data: a
                                            }), c.push(p);
                                            return v = un(s, 64), K.from(C(s, 100, 128)).isZero() || Wt.throwError("CCIP Read callback selector included junk", b.errors.CALL_EXCEPTION, {
                                                name: "OffchainLookup",
                                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                transaction: e,
                                                data: a
                                            }), g = C(s, 96, 100), m = un(s, 128), n.next = 21, this.ccipReadFetch(e, v, c);
                                        case 21:
                                            return null == (y = n.sent) && Wt.throwError("CCIP Read disabled or provided no URLs", b.errors.CALL_EXCEPTION, {
                                                name: "OffchainLookup",
                                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                                transaction: e,
                                                data: a
                                            }), E = {
                                                to: o,
                                                data: U([g, hn([y, m])])
                                            }, n.abrupt("return", this._call(E, r, t + 1));
                                        case 27:
                                            if (n.prev = 27, n.t0 = n.catch(6), n.t0.code !== b.errors.SERVER_ERROR) {
                                                n.next = 31;
                                                break
                                            }
                                            throw n.t0;
                                        case 31:
                                            return n.prev = 31, n.abrupt("return", T(a));
                                        case 35:
                                            return n.prev = 35, n.t1 = n.catch(31), n.abrupt("return", Wt.throwError("bad result from backend", b.errors.SERVER_ERROR, {
                                                method: "call",
                                                params: {
                                                    transaction: e,
                                                    blockTag: r
                                                },
                                                result: a,
                                                error: n.t1
                                            }));
                                        case 38:
                                        case "end":
                                            return n.stop()
                                    }
                                }), i, this, [
                                    [6, 27],
                                    [31, 35]
                                ])
                            })))
                        }
                    }, {
                        key: "call",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, Y({
                                                transaction: this._getTransactionRequest(e),
                                                blockTag: this._getBlockTag(r),
                                                ccipReadEnabled: Promise.resolve(e.ccipReadEnabled)
                                            });
                                        case 4:
                                            return i = t.sent, t.abrupt("return", this._call(i.transaction, i.blockTag, i.ccipReadEnabled ? 0 : -1));
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }, {
                        key: "estimateGas",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, Y({
                                                transaction: this._getTransactionRequest(e)
                                            });
                                        case 4:
                                            return t = r.sent, r.next = 7, this.perform("estimateGas", t);
                                        case 7:
                                            return i = r.sent, r.prev = 8, r.abrupt("return", K.from(i));
                                        case 12:
                                            return r.prev = 12, r.t0 = r.catch(8), r.abrupt("return", Wt.throwError("bad result from backend", b.errors.SERVER_ERROR, {
                                                method: "estimateGas",
                                                params: t,
                                                result: i,
                                                error: r.t0
                                            }));
                                        case 15:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [8, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "_getAddress",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return "string" !== typeof(e = r.sent) && Wt.throwArgumentError("invalid address or ENS name", "name", e), r.next = 6, this.resolveName(e);
                                        case 6:
                                            return null == (t = r.sent) && Wt.throwError("ENS name not configured", b.errors.UNSUPPORTED_OPERATION, {
                                                operation: "resolveName(".concat(JSON.stringify(e), ")")
                                            }), r.abrupt("return", t);
                                        case 9:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_getBlock",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o, a = this;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return t.next = 2, this.getNetwork();
                                        case 2:
                                            return t.next = 4, e;
                                        case 4:
                                            if (e = t.sent, i = -128, o = {
                                                    includeTransactions: !!r
                                                }, !S(e, 32)) {
                                                t.next = 11;
                                                break
                                            }
                                            o.blockHash = e, t.next = 21;
                                            break;
                                        case 11:
                                            return t.prev = 11, t.next = 14, this._getBlockTag(e);
                                        case 14:
                                            o.blockTag = t.sent, S(o.blockTag) && (i = parseInt(o.blockTag.substring(2), 16)), t.next = 21;
                                            break;
                                        case 18:
                                            t.prev = 18, t.t0 = t.catch(11), Wt.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", e);
                                        case 21:
                                            return t.abrupt("return", yr((function() {
                                                return Ht(a, void 0, void 0, (0, n.Z)().mark((function e() {
                                                    var t, a, s, u, c, f, l = this;
                                                    return (0, n.Z)().wrap((function(e) {
                                                        for (;;) switch (e.prev = e.next) {
                                                            case 0:
                                                                return e.next = 2, this.perform("getBlock", o);
                                                            case 2:
                                                                if (null != (t = e.sent)) {
                                                                    e.next = 11;
                                                                    break
                                                                }
                                                                if (null == o.blockHash) {
                                                                    e.next = 7;
                                                                    break
                                                                }
                                                                if (null != this._emitted["b:" + o.blockHash]) {
                                                                    e.next = 7;
                                                                    break
                                                                }
                                                                return e.abrupt("return", null);
                                                            case 7:
                                                                if (null == o.blockTag) {
                                                                    e.next = 10;
                                                                    break
                                                                }
                                                                if (!(i > this._emitted.block)) {
                                                                    e.next = 10;
                                                                    break
                                                                }
                                                                return e.abrupt("return", null);
                                                            case 10:
                                                                return e.abrupt("return", void 0);
                                                            case 11:
                                                                if (!r) {
                                                                    e.next = 34;
                                                                    break
                                                                }
                                                                a = null, s = 0;
                                                            case 14:
                                                                if (!(s < t.transactions.length)) {
                                                                    e.next = 31;
                                                                    break
                                                                }
                                                                if (null != (u = t.transactions[s]).blockNumber) {
                                                                    e.next = 20;
                                                                    break
                                                                }
                                                                u.confirmations = 0, e.next = 28;
                                                                break;
                                                            case 20:
                                                                if (null != u.confirmations) {
                                                                    e.next = 28;
                                                                    break
                                                                }
                                                                if (null != a) {
                                                                    e.next = 25;
                                                                    break
                                                                }
                                                                return e.next = 24, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                            case 24:
                                                                a = e.sent;
                                                            case 25:
                                                                (c = a - u.blockNumber + 1) <= 0 && (c = 1), u.confirmations = c;
                                                            case 28:
                                                                s++, e.next = 14;
                                                                break;
                                                            case 31:
                                                                return (f = this.formatter.blockWithTransactions(t)).transactions = f.transactions.map((function(e) {
                                                                    return l._wrapTransaction(e)
                                                                })), e.abrupt("return", f);
                                                            case 34:
                                                                return e.abrupt("return", this.formatter.block(t));
                                                            case 35:
                                                            case "end":
                                                                return e.stop()
                                                        }
                                                    }), e, this)
                                                })))
                                            }), {
                                                oncePoll: this
                                            }));
                                        case 22:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [11, 18]
                                ])
                            })))
                        }
                    }, {
                        key: "getBlock",
                        value: function(e) {
                            return this._getBlock(e, !1)
                        }
                    }, {
                        key: "getBlockWithTransactions",
                        value: function(e) {
                            return this._getBlock(e, !0)
                        }
                    }, {
                        key: "getTransaction",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i = this;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, e;
                                        case 4:
                                            return e = r.sent, t = {
                                                transactionHash: this.formatter.hash(e, !0)
                                            }, r.abrupt("return", yr((function() {
                                                return Ht(i, void 0, void 0, (0, n.Z)().mark((function r() {
                                                    var i, o, a, s;
                                                    return (0, n.Z)().wrap((function(r) {
                                                        for (;;) switch (r.prev = r.next) {
                                                            case 0:
                                                                return r.next = 2, this.perform("getTransaction", t);
                                                            case 2:
                                                                if (null != (i = r.sent)) {
                                                                    r.next = 7;
                                                                    break
                                                                }
                                                                if (null != this._emitted["t:" + e]) {
                                                                    r.next = 6;
                                                                    break
                                                                }
                                                                return r.abrupt("return", null);
                                                            case 6:
                                                                return r.abrupt("return", void 0);
                                                            case 7:
                                                                if (null != (o = this.formatter.transactionResponse(i)).blockNumber) {
                                                                    r.next = 12;
                                                                    break
                                                                }
                                                                o.confirmations = 0, r.next = 19;
                                                                break;
                                                            case 12:
                                                                if (null != o.confirmations) {
                                                                    r.next = 19;
                                                                    break
                                                                }
                                                                return r.next = 15, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                            case 15:
                                                                a = r.sent, (s = a - o.blockNumber + 1) <= 0 && (s = 1), o.confirmations = s;
                                                            case 19:
                                                                return r.abrupt("return", this._wrapTransaction(o));
                                                            case 20:
                                                            case "end":
                                                                return r.stop()
                                                        }
                                                    }), r, this)
                                                })))
                                            }), {
                                                oncePoll: this
                                            }));
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getTransactionReceipt",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i = this;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, e;
                                        case 4:
                                            return e = r.sent, t = {
                                                transactionHash: this.formatter.hash(e, !0)
                                            }, r.abrupt("return", yr((function() {
                                                return Ht(i, void 0, void 0, (0, n.Z)().mark((function r() {
                                                    var i, o, a, s;
                                                    return (0, n.Z)().wrap((function(r) {
                                                        for (;;) switch (r.prev = r.next) {
                                                            case 0:
                                                                return r.next = 2, this.perform("getTransactionReceipt", t);
                                                            case 2:
                                                                if (null != (i = r.sent)) {
                                                                    r.next = 7;
                                                                    break
                                                                }
                                                                if (null != this._emitted["t:" + e]) {
                                                                    r.next = 6;
                                                                    break
                                                                }
                                                                return r.abrupt("return", null);
                                                            case 6:
                                                                return r.abrupt("return", void 0);
                                                            case 7:
                                                                if (null != i.blockHash) {
                                                                    r.next = 9;
                                                                    break
                                                                }
                                                                return r.abrupt("return", void 0);
                                                            case 9:
                                                                if (null != (o = this.formatter.receipt(i)).blockNumber) {
                                                                    r.next = 14;
                                                                    break
                                                                }
                                                                o.confirmations = 0, r.next = 21;
                                                                break;
                                                            case 14:
                                                                if (null != o.confirmations) {
                                                                    r.next = 21;
                                                                    break
                                                                }
                                                                return r.next = 17, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                                            case 17:
                                                                a = r.sent, (s = a - o.blockNumber + 1) <= 0 && (s = 1), o.confirmations = s;
                                                            case 21:
                                                                return r.abrupt("return", o);
                                                            case 22:
                                                            case "end":
                                                                return r.stop()
                                                        }
                                                    }), r, this)
                                                })))
                                            }), {
                                                oncePoll: this
                                            }));
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getLogs",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.getNetwork();
                                        case 2:
                                            return r.next = 4, Y({
                                                filter: this._getFilter(e)
                                            });
                                        case 4:
                                            return t = r.sent, r.next = 7, this.perform("getLogs", t);
                                        case 7:
                                            return (i = r.sent).forEach((function(e) {
                                                null == e.removed && (e.removed = !1)
                                            })), r.abrupt("return", Zt.arrayOf(this.formatter.filterLog.bind(this.formatter))(i));
                                        case 10:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getEtherPrice",
                        value: function() {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, this.getNetwork();
                                        case 2:
                                            return e.abrupt("return", this.perform("getEtherPrice", {}));
                                        case 3:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "_getBlockTag",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            if (!("number" === typeof(e = r.sent) && e < 0)) {
                                                r.next = 11;
                                                break
                                            }
                                            return e % 1 && Wt.throwArgumentError("invalid BlockTag", "blockTag", e), r.next = 7, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                                        case 7:
                                            return t = r.sent, (t += e) < 0 && (t = 0), r.abrupt("return", this.formatter.blockTag(t));
                                        case 11:
                                            return r.abrupt("return", this.formatter.blockTag(e));
                                        case 12:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getResolver",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            t = e;
                                        case 1:
                                            if ("" !== t && "." !== t) {
                                                r.next = 4;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 4:
                                            if ("eth" === e || "eth" !== t) {
                                                r.next = 6;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 6:
                                            return r.next = 8, this._getResolver(t, "getResolver");
                                        case 8:
                                            if (null == (i = r.sent)) {
                                                r.next = 19;
                                                break
                                            }
                                            if (o = new dn(this, i, e), r.t0 = t !== e, !r.t0) {
                                                r.next = 16;
                                                break
                                            }
                                            return r.next = 15, o.supportsWildcard();
                                        case 15:
                                            r.t0 = !r.sent;
                                        case 16:
                                            if (!r.t0) {
                                                r.next = 18;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 18:
                                            return r.abrupt("return", o);
                                        case 19:
                                            t = t.split(".").slice(1).join("."), r.next = 1;
                                            break;
                                        case 22:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_getResolver",
                        value: function(e, r) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return null == r && (r = "ENS"), t.next = 3, this.getNetwork();
                                        case 3:
                                            return (i = t.sent).ensAddress || Wt.throwError("network does not support ENS", b.errors.UNSUPPORTED_OPERATION, {
                                                operation: r,
                                                network: i.name
                                            }), t.prev = 5, t.next = 8, this.call({
                                                to: i.ensAddress,
                                                data: "0x0178b8bf" + sr(e).substring(2)
                                            });
                                        case 8:
                                            return o = t.sent, t.abrupt("return", this.formatter.callAddress(o));
                                        case 12:
                                            t.prev = 12, t.t0 = t.catch(5);
                                        case 14:
                                            return t.abrupt("return", null);
                                        case 15:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [5, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "resolveName",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return e = r.sent, r.prev = 3, r.abrupt("return", Promise.resolve(this.formatter.address(e)));
                                        case 7:
                                            if (r.prev = 7, r.t0 = r.catch(3), !S(e)) {
                                                r.next = 11;
                                                break
                                            }
                                            throw r.t0;
                                        case 11:
                                            return "string" !== typeof e && Wt.throwArgumentError("invalid ENS name", "name", e), r.next = 14, this.getResolver(e);
                                        case 14:
                                            if (t = r.sent) {
                                                r.next = 17;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 17:
                                            return r.next = 19, t.getAddress();
                                        case 19:
                                            return r.abrupt("return", r.sent);
                                        case 20:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [3, 7]
                                ])
                            })))
                        }
                    }, {
                        key: "lookupAddress",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, e;
                                        case 2:
                                            return e = r.sent, e = this.formatter.address(e), t = e.substring(2).toLowerCase() + ".addr.reverse", r.next = 7, this._getResolver(t, "lookupAddress");
                                        case 7:
                                            if (null != (i = r.sent)) {
                                                r.next = 10;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 10:
                                            return r.t0 = sn, r.next = 13, this.call({
                                                to: i,
                                                data: "0x691f3431" + sr(t).substring(2)
                                            });
                                        case 13:
                                            return r.t1 = r.sent, o = (0, r.t0)(r.t1, 0), r.next = 17, this.resolveName(o);
                                        case 17:
                                            if (r.sent == e) {
                                                r.next = 20;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 20:
                                            return r.abrupt("return", o);
                                        case 21:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getAvatar",
                        value: function(e) {
                            return Ht(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o, a, s, u, c;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            if (t = null, !S(e)) {
                                                r.next = 40;
                                                break
                                            }
                                            return i = this.formatter.address(e), o = i.substring(2).toLowerCase() + ".addr.reverse", r.next = 6, this._getResolver(o, "getAvatar");
                                        case 6:
                                            if (a = r.sent) {
                                                r.next = 9;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 9:
                                            return t = new dn(this, a, o), r.prev = 10, r.next = 13, t.getAvatar();
                                        case 13:
                                            if (!(s = r.sent)) {
                                                r.next = 16;
                                                break
                                            }
                                            return r.abrupt("return", s.url);
                                        case 16:
                                            r.next = 22;
                                            break;
                                        case 18:
                                            if (r.prev = 18, r.t0 = r.catch(10), r.t0.code === b.errors.CALL_EXCEPTION) {
                                                r.next = 22;
                                                break
                                            }
                                            throw r.t0;
                                        case 22:
                                            return r.prev = 22, r.t1 = sn, r.next = 26, this.call({
                                                to: a,
                                                data: "0x691f3431" + sr(o).substring(2)
                                            });
                                        case 26:
                                            return r.t2 = r.sent, u = (0, r.t1)(r.t2, 0), r.next = 30, this.getResolver(u);
                                        case 30:
                                            t = r.sent, r.next = 38;
                                            break;
                                        case 33:
                                            if (r.prev = 33, r.t3 = r.catch(22), r.t3.code === b.errors.CALL_EXCEPTION) {
                                                r.next = 37;
                                                break
                                            }
                                            throw r.t3;
                                        case 37:
                                            return r.abrupt("return", null);
                                        case 38:
                                            r.next = 45;
                                            break;
                                        case 40:
                                            return r.next = 42, this.getResolver(e);
                                        case 42:
                                            if (t = r.sent) {
                                                r.next = 45;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 45:
                                            return r.next = 47, t.getAvatar();
                                        case 47:
                                            if (null != (c = r.sent)) {
                                                r.next = 50;
                                                break
                                            }
                                            return r.abrupt("return", null);
                                        case 50:
                                            return r.abrupt("return", c.url);
                                        case 51:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [10, 18],
                                    [22, 33]
                                ])
                            })))
                        }
                    }, {
                        key: "perform",
                        value: function(e, r) {
                            return Wt.throwError(e + " not implemented", b.errors.NOT_IMPLEMENTED, {
                                operation: e
                            })
                        }
                    }, {
                        key: "_startEvent",
                        value: function(e) {
                            this.polling = this._events.filter((function(e) {
                                return e.pollable()
                            })).length > 0
                        }
                    }, {
                        key: "_stopEvent",
                        value: function(e) {
                            this.polling = this._events.filter((function(e) {
                                return e.pollable()
                            })).length > 0
                        }
                    }, {
                        key: "_addEventListener",
                        value: function(e, r, t) {
                            var n = new en(Xt(e), r, t);
                            return this._events.push(n), this._startEvent(n), this
                        }
                    }, {
                        key: "on",
                        value: function(e, r) {
                            return this._addEventListener(e, r, !1)
                        }
                    }, {
                        key: "once",
                        value: function(e, r) {
                            return this._addEventListener(e, r, !0)
                        }
                    }, {
                        key: "emit",
                        value: function(e) {
                            for (var r = this, t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];
                            var o = !1,
                                a = [],
                                s = Xt(e);
                            return this._events = this._events.filter((function(e) {
                                return e.tag !== s || (setTimeout((function() {
                                    e.listener.apply(r, n)
                                }), 0), o = !0, !e.once || (a.push(e), !1))
                            })), a.forEach((function(e) {
                                r._stopEvent(e)
                            })), o
                        }
                    }, {
                        key: "listenerCount",
                        value: function(e) {
                            if (!e) return this._events.length;
                            var r = Xt(e);
                            return this._events.filter((function(e) {
                                return e.tag === r
                            })).length
                        }
                    }, {
                        key: "listeners",
                        value: function(e) {
                            if (null == e) return this._events.map((function(e) {
                                return e.listener
                            }));
                            var r = Xt(e);
                            return this._events.filter((function(e) {
                                return e.tag === r
                            })).map((function(e) {
                                return e.listener
                            }))
                        }
                    }, {
                        key: "off",
                        value: function(e, r) {
                            var t = this;
                            if (null == r) return this.removeAllListeners(e);
                            var n = [],
                                i = !1,
                                o = Xt(e);
                            return this._events = this._events.filter((function(e) {
                                return e.tag !== o || e.listener != r || (!!i || (i = !0, n.push(e), !1))
                            })), n.forEach((function(e) {
                                t._stopEvent(e)
                            })), this
                        }
                    }, {
                        key: "removeAllListeners",
                        value: function(e) {
                            var r = this,
                                t = [];
                            if (null == e) t = this._events, this._events = [];
                            else {
                                var n = Xt(e);
                                this._events = this._events.filter((function(e) {
                                    return e.tag !== n || (t.push(e), !1)
                                }))
                            }
                            return t.forEach((function(e) {
                                r._stopEvent(e)
                            })), this
                        }
                    }], [{
                        key: "getFormatter",
                        value: function() {
                            return null == pn && (pn = new Zt), pn
                        }
                    }, {
                        key: "getNetwork",
                        value: function(e) {
                            return ge(null == e ? "homestead" : e)
                        }
                    }]), t
                }(ue),
                mn = t(55679),
                yn = t(44474),
                bn = t(53538),
                En = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                wn = new b("abstract-signer/5.7.0"),
                An = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"],
                kn = [b.errors.INSUFFICIENT_FUNDS, b.errors.NONCE_EXPIRED, b.errors.REPLACEMENT_UNDERPRICED],
                Nn = function() {
                    function e() {
                        (0, i.Z)(this, e), wn.checkAbstract(this instanceof e ? this.constructor : void 0, e), X(this, "_isSigner", !0)
                    }
                    return (0, o.Z)(e, [{
                        key: "getBalance",
                        value: function(e) {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("getBalance"), r.next = 3, this.provider.getBalance(this.getAddress(), e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getTransactionCount",
                        value: function(e) {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("getTransactionCount"), r.next = 3, this.provider.getTransactionCount(this.getAddress(), e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "estimateGas",
                        value: function(e) {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("estimateGas"), r.next = 3, Y(this.checkTransaction(e));
                                        case 3:
                                            return t = r.sent, r.next = 6, this.provider.estimateGas(t);
                                        case 6:
                                            return r.abrupt("return", r.sent);
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "call",
                        value: function(e, r) {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            return this._checkProvider("call"), t.next = 3, Y(this.checkTransaction(e));
                                        case 3:
                                            return i = t.sent, t.next = 6, this.provider.call(i, r);
                                        case 6:
                                            return t.abrupt("return", t.sent);
                                        case 7:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }, {
                        key: "sendTransaction",
                        value: function(e) {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("sendTransaction"), r.next = 3, this.populateTransaction(e);
                                        case 3:
                                            return t = r.sent, r.next = 6, this.signTransaction(t);
                                        case 6:
                                            return i = r.sent, r.next = 9, this.provider.sendTransaction(i);
                                        case 9:
                                            return r.abrupt("return", r.sent);
                                        case 10:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "getChainId",
                        value: function() {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getChainId"), e.next = 3, this.provider.getNetwork();
                                        case 3:
                                            return r = e.sent, e.abrupt("return", r.chainId);
                                        case 5:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getGasPrice",
                        value: function() {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getGasPrice"), e.next = 3, this.provider.getGasPrice();
                                        case 3:
                                            return e.abrupt("return", e.sent);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "getFeeData",
                        value: function() {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return this._checkProvider("getFeeData"), e.next = 3, this.provider.getFeeData();
                                        case 3:
                                            return e.abrupt("return", e.sent);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "resolveName",
                        value: function(e) {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return this._checkProvider("resolveName"), r.next = 3, this.provider.resolveName(e);
                                        case 3:
                                            return r.abrupt("return", r.sent);
                                        case 4:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "checkTransaction",
                        value: function(e) {
                            for (var r in e) - 1 === An.indexOf(r) && wn.throwArgumentError("invalid transaction key: " + r, "transaction", e);
                            var t = $(e);
                            return null == t.from ? t.from = this.getAddress() : t.from = Promise.all([Promise.resolve(t.from), this.getAddress()]).then((function(r) {
                                return r[0].toLowerCase() !== r[1].toLowerCase() && wn.throwArgumentError("from address mismatch", "transaction", e), r[0]
                            })), t
                        }
                    }, {
                        key: "populateTransaction",
                        value: function(e) {
                            return En(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o, a, s = this;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, Y(this.checkTransaction(e));
                                        case 2:
                                            if (null != (t = r.sent).to && (t.to = Promise.resolve(t.to).then((function(e) {
                                                    return En(s, void 0, void 0, (0, n.Z)().mark((function r() {
                                                        var t;
                                                        return (0, n.Z)().wrap((function(r) {
                                                            for (;;) switch (r.prev = r.next) {
                                                                case 0:
                                                                    if (null != e) {
                                                                        r.next = 2;
                                                                        break
                                                                    }
                                                                    return r.abrupt("return", null);
                                                                case 2:
                                                                    return r.next = 4, this.resolveName(e);
                                                                case 4:
                                                                    return null == (t = r.sent) && wn.throwArgumentError("provided ENS name resolves to null", "tx.to", e), r.abrupt("return", t);
                                                                case 7:
                                                                case "end":
                                                                    return r.stop()
                                                            }
                                                        }), r, this)
                                                    })))
                                                })), t.to.catch((function(e) {}))), i = null != t.maxFeePerGas || null != t.maxPriorityFeePerGas, null == t.gasPrice || 2 !== t.type && !i ? 0 !== t.type && 1 !== t.type || !i || wn.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e) : wn.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e), 2 !== t.type && null != t.type || null == t.maxFeePerGas || null == t.maxPriorityFeePerGas) {
                                                r.next = 10;
                                                break
                                            }
                                            t.type = 2, r.next = 18;
                                            break;
                                        case 10:
                                            if (0 !== t.type && 1 !== t.type) {
                                                r.next = 14;
                                                break
                                            }
                                            null == t.gasPrice && (t.gasPrice = this.getGasPrice()), r.next = 18;
                                            break;
                                        case 14:
                                            return r.next = 16, this.getFeeData();
                                        case 16:
                                            o = r.sent, null == t.type ? null != o.maxFeePerGas && null != o.maxPriorityFeePerGas ? (t.type = 2, null != t.gasPrice ? (a = t.gasPrice, delete t.gasPrice, t.maxFeePerGas = a, t.maxPriorityFeePerGas = a) : (null == t.maxFeePerGas && (t.maxFeePerGas = o.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = o.maxPriorityFeePerGas))) : null != o.gasPrice ? (i && wn.throwError("network does not support EIP-1559", b.errors.UNSUPPORTED_OPERATION, {
                                                operation: "populateTransaction"
                                            }), null == t.gasPrice && (t.gasPrice = o.gasPrice), t.type = 0) : wn.throwError("failed to get consistent fee data", b.errors.UNSUPPORTED_OPERATION, {
                                                operation: "signer.getFeeData"
                                            }) : 2 === t.type && (null == t.maxFeePerGas && (t.maxFeePerGas = o.maxFeePerGas), null == t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = o.maxPriorityFeePerGas));
                                        case 18:
                                            return null == t.nonce && (t.nonce = this.getTransactionCount("pending")), null == t.gasLimit && (t.gasLimit = this.estimateGas(t).catch((function(e) {
                                                if (kn.indexOf(e.code) >= 0) throw e;
                                                return wn.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.errors.UNPREDICTABLE_GAS_LIMIT, {
                                                    error: e,
                                                    tx: t
                                                })
                                            }))), null == t.chainId ? t.chainId = this.getChainId() : t.chainId = Promise.all([Promise.resolve(t.chainId), this.getChainId()]).then((function(r) {
                                                return 0 !== r[1] && r[0] !== r[1] && wn.throwArgumentError("chainId address mismatch", "transaction", e), r[0]
                                            })), r.next = 23, Y(t);
                                        case 23:
                                            return r.abrupt("return", r.sent);
                                        case 24:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_checkProvider",
                        value: function(e) {
                            this.provider || wn.throwError("missing provider", b.errors.UNSUPPORTED_OPERATION, {
                                operation: e || "_checkProvider"
                            })
                        }
                    }], [{
                        key: "isSigner",
                        value: function(e) {
                            return !(!e || !e._isSigner)
                        }
                    }]), e
                }();

            function Rn(e) {
                return Oe(Pe(e))
            }
            var xn = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                In = new b(Ce),
                Pn = new Uint8Array(32);
            Pn.fill(0);
            var Sn = K.from(-1),
                _n = K.from(0),
                Tn = K.from(1),
                On = K.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
            var Cn = F(Tn.toHexString(), 32),
                Un = F(_n.toHexString(), 32),
                Ln = {
                    name: "string",
                    version: "string",
                    chainId: "uint256",
                    verifyingContract: "address",
                    salt: "bytes32"
                },
                Fn = ["name", "version", "chainId", "verifyingContract", "salt"];

            function Dn(e) {
                return function(r) {
                    return "string" !== typeof r && In.throwArgumentError("invalid domain value for ".concat(JSON.stringify(e)), "domain.".concat(e), r), r
                }
            }
            var Mn = {
                name: Dn("name"),
                version: Dn("version"),
                chainId: function(e) {
                    try {
                        return K.from(e).toString()
                    } catch (r) {}
                    return In.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", e)
                },
                verifyingContract: function(e) {
                    try {
                        return Mr(e).toLowerCase()
                    } catch (r) {}
                    return In.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", e)
                },
                salt: function(e) {
                    try {
                        var r = x(e);
                        if (32 !== r.length) throw new Error("bad length");
                        return T(r)
                    } catch (t) {}
                    return In.throwArgumentError('invalid domain value "salt"', "domain.salt", e)
                }
            };

            function Bn(e) {
                var r = e.match(/^(u?)int(\d*)$/);
                if (r) {
                    var t = "" === r[1],
                        n = parseInt(r[2] || "256");
                    (n % 8 !== 0 || n > 256 || r[2] && r[2] !== String(n)) && In.throwArgumentError("invalid numeric width", "type", e);
                    var i = On.mask(t ? n - 1 : n),
                        o = t ? i.add(Tn).mul(Sn) : _n;
                    return function(r) {
                        var t = K.from(r);
                        return (t.lt(o) || t.gt(i)) && In.throwArgumentError("value out-of-bounds for ".concat(e), "value", r), F(t.toTwos(256).toHexString(), 32)
                    }
                }
                var a = e.match(/^bytes(\d+)$/);
                if (a) {
                    var s = parseInt(a[1]);
                    return (0 === s || s > 32 || a[1] !== String(s)) && In.throwArgumentError("invalid bytes width", "type", e),
                        function(r) {
                            return x(r).length !== s && In.throwArgumentError("invalid length for ".concat(e), "value", r),
                                function(e) {
                                    var r = x(e),
                                        t = r.length % 32;
                                    return t ? U([r, Pn.slice(t)]) : T(r)
                                }(r)
                        }
                }
                switch (e) {
                    case "address":
                        return function(e) {
                            return F(Mr(e), 32)
                        };
                    case "bool":
                        return function(e) {
                            return e ? Cn : Un
                        };
                    case "bytes":
                        return function(e) {
                            return Oe(e)
                        };
                    case "string":
                        return function(e) {
                            return Rn(e)
                        }
                }
                return null
            }

            function Gn(e, r) {
                return "".concat(e, "(").concat(r.map((function(e) {
                    var r = e.name;
                    return e.type + " " + r
                })).join(","), ")")
            }
            var Zn = function() {
                    function e(r) {
                        (0, i.Z)(this, e), X(this, "types", Object.freeze(ne(r))), X(this, "_encoderCache", {}), X(this, "_types", {});
                        var t = {},
                            n = {},
                            o = {};
                        Object.keys(r).forEach((function(e) {
                            t[e] = {}, n[e] = [], o[e] = {}
                        }));
                        var a = function(e) {
                            var i = {};
                            r[e].forEach((function(o) {
                                i[o.name] && In.throwArgumentError("duplicate variable name ".concat(JSON.stringify(o.name), " in ").concat(JSON.stringify(e)), "types", r), i[o.name] = !0;
                                var a = o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                                a === e && In.throwArgumentError("circular type reference to ".concat(JSON.stringify(a)), "types", r), Bn(a) || (n[a] || In.throwArgumentError("unknown type ".concat(JSON.stringify(a)), "types", r), n[a].push(e), t[e][a] = !0)
                            }))
                        };
                        for (var s in r) a(s);
                        var u = Object.keys(n).filter((function(e) {
                            return 0 === n[e].length
                        }));
                        for (var c in 0 === u.length ? In.throwArgumentError("missing primary type", "types", r) : u.length > 1 && In.throwArgumentError("ambiguous primary types or unused types: ".concat(u.map((function(e) {
                                    return JSON.stringify(e)
                                })).join(", ")), "types", r), X(this, "primaryType", u[0]),
                                function e(i, a) {
                                    a[i] && In.throwArgumentError("circular type reference to ".concat(JSON.stringify(i)), "types", r), a[i] = !0, Object.keys(t[i]).forEach((function(r) {
                                        n[r] && (e(r, a), Object.keys(a).forEach((function(e) {
                                            o[e][r] = !0
                                        })))
                                    })), delete a[i]
                                }(this.primaryType, {}), o) {
                            var f = Object.keys(o[c]);
                            f.sort(), this._types[c] = Gn(c, r[c]) + f.map((function(e) {
                                return Gn(e, r[e])
                            })).join("")
                        }
                    }
                    return (0, o.Z)(e, [{
                        key: "getEncoder",
                        value: function(e) {
                            var r = this._encoderCache[e];
                            return r || (r = this._encoderCache[e] = this._getEncoder(e)), r
                        }
                    }, {
                        key: "_getEncoder",
                        value: function(e) {
                            var r = this,
                                t = Bn(e);
                            if (t) return t;
                            var n = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                            if (n) {
                                var i = n[1],
                                    o = this.getEncoder(i),
                                    a = parseInt(n[3]);
                                return function(e) {
                                    a >= 0 && e.length !== a && In.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e);
                                    var t = e.map(o);
                                    return r._types[i] && (t = t.map(Oe)), Oe(U(t))
                                }
                            }
                            var s = this.types[e];
                            if (s) {
                                var u = Rn(this._types[e]);
                                return function(e) {
                                    var t = s.map((function(t) {
                                        var n = t.name,
                                            i = t.type,
                                            o = r.getEncoder(i)(e[n]);
                                        return r._types[i] ? Oe(o) : o
                                    }));
                                    return t.unshift(u), U(t)
                                }
                            }
                            return In.throwArgumentError("unknown type: ".concat(e), "type", e)
                        }
                    }, {
                        key: "encodeType",
                        value: function(e) {
                            var r = this._types[e];
                            return r || In.throwArgumentError("unknown type: ".concat(JSON.stringify(e)), "name", e), r
                        }
                    }, {
                        key: "encodeData",
                        value: function(e, r) {
                            return this.getEncoder(e)(r)
                        }
                    }, {
                        key: "hashStruct",
                        value: function(e, r) {
                            return Oe(this.encodeData(e, r))
                        }
                    }, {
                        key: "encode",
                        value: function(e) {
                            return this.encodeData(this.primaryType, e)
                        }
                    }, {
                        key: "hash",
                        value: function(e) {
                            return this.hashStruct(this.primaryType, e)
                        }
                    }, {
                        key: "_visit",
                        value: function(e, r, t) {
                            var n = this;
                            if (Bn(e)) return t(e, r);
                            var i = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
                            if (i) {
                                var o = i[1],
                                    a = parseInt(i[3]);
                                return a >= 0 && r.length !== a && In.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", r), r.map((function(e) {
                                    return n._visit(o, e, t)
                                }))
                            }
                            var s = this.types[e];
                            return s ? s.reduce((function(e, i) {
                                var o = i.name,
                                    a = i.type;
                                return e[o] = n._visit(a, r[o], t), e
                            }), {}) : In.throwArgumentError("unknown type: ".concat(e), "type", e)
                        }
                    }, {
                        key: "visit",
                        value: function(e, r) {
                            return this._visit(this.primaryType, e, r)
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }, {
                        key: "getPrimaryType",
                        value: function(r) {
                            return e.from(r).primaryType
                        }
                    }, {
                        key: "hashStruct",
                        value: function(r, t, n) {
                            return e.from(t).hashStruct(r, n)
                        }
                    }, {
                        key: "hashDomain",
                        value: function(r) {
                            var t = [];
                            for (var n in r) {
                                var i = Ln[n];
                                i || In.throwArgumentError("invalid typed-data domain key: ".concat(JSON.stringify(n)), "domain", r), t.push({
                                    name: n,
                                    type: i
                                })
                            }
                            return t.sort((function(e, r) {
                                return Fn.indexOf(e.name) - Fn.indexOf(r.name)
                            })), e.hashStruct("EIP712Domain", {
                                EIP712Domain: t
                            }, r)
                        }
                    }, {
                        key: "encode",
                        value: function(r, t, n) {
                            return U(["0x1901", e.hashDomain(r), e.from(t).hash(n)])
                        }
                    }, {
                        key: "hash",
                        value: function(r, t, n) {
                            return Oe(e.encode(r, t, n))
                        }
                    }, {
                        key: "resolveNames",
                        value: function(r, t, i, o) {
                            return xn(this, void 0, void 0, (0, n.Z)().mark((function a() {
                                var s, u, c;
                                return (0, n.Z)().wrap((function(a) {
                                    for (;;) switch (a.prev = a.next) {
                                        case 0:
                                            r = $(r), s = {}, r.verifyingContract && !S(r.verifyingContract, 20) && (s[r.verifyingContract] = "0x"), (u = e.from(t)).visit(i, (function(e, r) {
                                                return "address" !== e || S(r, 20) || (s[r] = "0x"), r
                                            })), a.t0 = (0, n.Z)().keys(s);
                                        case 6:
                                            if ((a.t1 = a.t0()).done) {
                                                a.next = 13;
                                                break
                                            }
                                            return c = a.t1.value, a.next = 10, o(c);
                                        case 10:
                                            s[c] = a.sent, a.next = 6;
                                            break;
                                        case 13:
                                            return r.verifyingContract && s[r.verifyingContract] && (r.verifyingContract = s[r.verifyingContract]), i = u.visit(i, (function(e, r) {
                                                return "address" === e && s[r] ? s[r] : r
                                            })), a.abrupt("return", {
                                                domain: r,
                                                value: i
                                            });
                                        case 16:
                                        case "end":
                                            return a.stop()
                                    }
                                }), a)
                            })))
                        }
                    }, {
                        key: "getPayload",
                        value: function(r, t, n) {
                            e.hashDomain(r);
                            var i = {},
                                o = [];
                            Fn.forEach((function(e) {
                                var t = r[e];
                                null != t && (i[e] = Mn[e](t), o.push({
                                    name: e,
                                    type: Ln[e]
                                }))
                            }));
                            var a = e.from(t),
                                s = $(t);
                            return s.EIP712Domain ? In.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", t) : s.EIP712Domain = o, a.encode(n), {
                                types: s,
                                domain: i,
                                primaryType: a.primaryType,
                                message: a.visit(n, (function(e, r) {
                                    if (e.match(/^bytes(\d*)/)) return T(x(r));
                                    if (e.match(/^u?int/)) return K.from(r).toString();
                                    switch (e) {
                                        case "address":
                                            return r.toLowerCase();
                                        case "bool":
                                            return !!r;
                                        case "string":
                                            return "string" !== typeof r && In.throwArgumentError("invalid string", "value", r), r
                                    }
                                    return In.throwArgumentError("unsupported type", "type", e)
                                }))
                            }
                        }
                    }]), e
                }(),
                jn = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                Kn = new b(wr),
                zn = ["call", "estimateGas"];

            function qn(e, r) {
                if (null == e) return null;
                if ("string" === typeof e.message && e.message.match("reverted")) {
                    var t = S(e.data) ? e.data : null;
                    if (!r || t) return {
                        message: e.message,
                        data: t
                    }
                }
                if ("object" === typeof e) {
                    for (var n in e) {
                        var i = qn(e[n], r);
                        if (i) return i
                    }
                    return null
                }
                if ("string" === typeof e) try {
                    return qn(JSON.parse(e), r)
                } catch (o) {}
                return null
            }

            function Hn(e, r, t) {
                var n = t.transaction || t.signedTransaction;
                if ("call" === e) {
                    var i = qn(r, !0);
                    if (i) return i.data;
                    Kn.throwError("missing revert data in call exception; Transaction reverted without a reason string", b.errors.CALL_EXCEPTION, {
                        data: "0x",
                        transaction: n,
                        error: r
                    })
                }
                if ("estimateGas" === e) {
                    var o = qn(r.body, !1);
                    null == o && (o = qn(r, !1)), o && Kn.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.errors.UNPREDICTABLE_GAS_LIMIT, {
                        reason: o.message,
                        method: e,
                        transaction: n,
                        error: r
                    })
                }
                var a = r.message;
                throw r.code === b.errors.SERVER_ERROR && r.error && "string" === typeof r.error.message ? a = r.error.message : "string" === typeof r.body ? a = r.body : "string" === typeof r.responseText && (a = r.responseText), (a = (a || "").toLowerCase()).match(/insufficient funds|base fee exceeds gas limit/i) && Kn.throwError("insufficient funds for intrinsic transaction cost", b.errors.INSUFFICIENT_FUNDS, {
                    error: r,
                    method: e,
                    transaction: n
                }), a.match(/nonce (is )?too low/i) && Kn.throwError("nonce has already been used", b.errors.NONCE_EXPIRED, {
                    error: r,
                    method: e,
                    transaction: n
                }), a.match(/replacement transaction underpriced|transaction gas price.*too low/i) && Kn.throwError("replacement fee too low", b.errors.REPLACEMENT_UNDERPRICED, {
                    error: r,
                    method: e,
                    transaction: n
                }), a.match(/only replay-protected/i) && Kn.throwError("legacy pre-eip-155 transactions not supported", b.errors.UNSUPPORTED_OPERATION, {
                    error: r,
                    method: e,
                    transaction: n
                }), zn.indexOf(e) >= 0 && a.match(/gas required exceeds allowance|always failing transaction|execution reverted/) && Kn.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: r,
                    method: e,
                    transaction: n
                }), r
            }

            function Wn(e) {
                return new Promise((function(r) {
                    setTimeout(r, e)
                }))
            }

            function Vn(e) {
                if (e.error) {
                    var r = new Error(e.error.message);
                    throw r.code = e.error.code, r.data = e.error.data, r
                }
                return e.result
            }

            function Jn(e) {
                return e ? e.toLowerCase() : e
            }
            var Xn = {},
                Qn = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n, o) {
                        var a;
                        if ((0, i.Z)(this, t), a = r.call(this), e !== Xn) throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                        return X((0, me.Z)(a), "provider", n), null == o && (o = 0), "string" === typeof o ? (X((0, me.Z)(a), "_address", a.provider.formatter.address(o)), X((0, me.Z)(a), "_index", null)) : "number" === typeof o ? (X((0, me.Z)(a), "_index", o), X((0, me.Z)(a), "_address", null)) : Kn.throwArgumentError("invalid address or index", "addressOrIndex", o), a
                    }
                    return (0, o.Z)(t, [{
                        key: "connect",
                        value: function(e) {
                            return Kn.throwError("cannot alter JSON-RPC Signer connection", b.errors.UNSUPPORTED_OPERATION, {
                                operation: "connect"
                            })
                        }
                    }, {
                        key: "connectUnchecked",
                        value: function() {
                            return new Yn(Xn, this.provider, this._address || this._index)
                        }
                    }, {
                        key: "getAddress",
                        value: function() {
                            var e = this;
                            return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then((function(r) {
                                return r.length <= e._index && Kn.throwError("unknown account #" + e._index, b.errors.UNSUPPORTED_OPERATION, {
                                    operation: "getAddress"
                                }), e.provider.formatter.address(r[e._index])
                            }))
                        }
                    }, {
                        key: "sendUncheckedTransaction",
                        value: function(e) {
                            var r = this;
                            e = $(e);
                            var t = this.getAddress().then((function(e) {
                                return e && (e = e.toLowerCase()), e
                            }));
                            if (null == e.gasLimit) {
                                var i = $(e);
                                i.from = t, e.gasLimit = this.provider.estimateGas(i)
                            }
                            return null != e.to && (e.to = Promise.resolve(e.to).then((function(e) {
                                return jn(r, void 0, void 0, (0, n.Z)().mark((function r() {
                                    var t;
                                    return (0, n.Z)().wrap((function(r) {
                                        for (;;) switch (r.prev = r.next) {
                                            case 0:
                                                if (null != e) {
                                                    r.next = 2;
                                                    break
                                                }
                                                return r.abrupt("return", null);
                                            case 2:
                                                return r.next = 4, this.provider.resolveName(e);
                                            case 4:
                                                return null == (t = r.sent) && Kn.throwArgumentError("provided ENS name resolves to null", "tx.to", e), r.abrupt("return", t);
                                            case 7:
                                            case "end":
                                                return r.stop()
                                        }
                                    }), r, this)
                                })))
                            }))), Y({
                                tx: Y(e),
                                sender: t
                            }).then((function(t) {
                                var n = t.tx,
                                    i = t.sender;
                                null != n.from ? n.from.toLowerCase() !== i && Kn.throwArgumentError("from address mismatch", "transaction", e) : n.from = i;
                                var o = r.provider.constructor.hexlifyTransaction(n, {
                                    from: !0
                                });
                                return r.provider.send("eth_sendTransaction", [o]).then((function(e) {
                                    return e
                                }), (function(e) {
                                    return Hn("sendTransaction", e, o)
                                }))
                            }))
                        }
                    }, {
                        key: "signTransaction",
                        value: function(e) {
                            return Kn.throwError("signing transactions is unsupported", b.errors.UNSUPPORTED_OPERATION, {
                                operation: "signTransaction"
                            })
                        }
                    }, {
                        key: "sendTransaction",
                        value: function(e) {
                            return jn(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i, o = this;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return r.next = 2, this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
                                        case 2:
                                            return t = r.sent, r.next = 5, this.sendUncheckedTransaction(e);
                                        case 5:
                                            return i = r.sent, r.prev = 6, r.next = 9, yr((function() {
                                                return jn(o, void 0, void 0, (0, n.Z)().mark((function e() {
                                                    var r;
                                                    return (0, n.Z)().wrap((function(e) {
                                                        for (;;) switch (e.prev = e.next) {
                                                            case 0:
                                                                return e.next = 2, this.provider.getTransaction(i);
                                                            case 2:
                                                                if (null !== (r = e.sent)) {
                                                                    e.next = 5;
                                                                    break
                                                                }
                                                                return e.abrupt("return", void 0);
                                                            case 5:
                                                                return e.abrupt("return", this.provider._wrapTransaction(r, i, t));
                                                            case 6:
                                                            case "end":
                                                                return e.stop()
                                                        }
                                                    }), e, this)
                                                })))
                                            }), {
                                                oncePoll: this.provider
                                            });
                                        case 9:
                                            return r.abrupt("return", r.sent);
                                        case 12:
                                            throw r.prev = 12, r.t0 = r.catch(6), r.t0.transactionHash = i, r.t0;
                                        case 16:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this, [
                                    [6, 12]
                                ])
                            })))
                        }
                    }, {
                        key: "signMessage",
                        value: function(e) {
                            return jn(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = "string" === typeof e ? Pe(e) : e, r.next = 3, this.getAddress();
                                        case 3:
                                            return i = r.sent, r.next = 6, this.provider.send("personal_sign", [T(t), i.toLowerCase()]);
                                        case 6:
                                            return r.abrupt("return", r.sent);
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_legacySignMessage",
                        value: function(e) {
                            return jn(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = "string" === typeof e ? Pe(e) : e, r.next = 3, this.getAddress();
                                        case 3:
                                            return i = r.sent, r.next = 6, this.provider.send("eth_sign", [i.toLowerCase(), T(t)]);
                                        case 6:
                                            return r.abrupt("return", r.sent);
                                        case 7:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }, {
                        key: "_signTypedData",
                        value: function(e, r, t) {
                            return jn(this, void 0, void 0, (0, n.Z)().mark((function i() {
                                var o, a, s = this;
                                return (0, n.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return n.next = 2, Zn.resolveNames(e, r, t, (function(e) {
                                                return s.provider.resolveName(e)
                                            }));
                                        case 2:
                                            return o = n.sent, n.next = 5, this.getAddress();
                                        case 5:
                                            return a = n.sent, n.next = 8, this.provider.send("eth_signTypedData_v4", [a.toLowerCase(), JSON.stringify(Zn.getPayload(o.domain, r, o.value))]);
                                        case 8:
                                            return n.abrupt("return", n.sent);
                                        case 9:
                                        case "end":
                                            return n.stop()
                                    }
                                }), i, this)
                            })))
                        }
                    }, {
                        key: "unlock",
                        value: function(e) {
                            return jn(this, void 0, void 0, (0, n.Z)().mark((function r() {
                                var t, i;
                                return (0, n.Z)().wrap((function(r) {
                                    for (;;) switch (r.prev = r.next) {
                                        case 0:
                                            return t = this.provider, r.next = 3, this.getAddress();
                                        case 3:
                                            return i = r.sent, r.abrupt("return", t.send("personal_unlockAccount", [i.toLowerCase(), e, null]));
                                        case 5:
                                        case "end":
                                            return r.stop()
                                    }
                                }), r, this)
                            })))
                        }
                    }]), t
                }(Nn),
                Yn = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, [{
                        key: "sendTransaction",
                        value: function(e) {
                            var r = this;
                            return this.sendUncheckedTransaction(e).then((function(e) {
                                return {
                                    hash: e,
                                    nonce: null,
                                    gasLimit: null,
                                    gasPrice: null,
                                    data: null,
                                    value: null,
                                    chainId: null,
                                    confirmations: 0,
                                    from: null,
                                    wait: function(t) {
                                        return r.provider.waitForTransaction(e, t)
                                    }
                                }
                            }))
                        }
                    }]), t
                }(Qn),
                $n = {
                    chainId: !0,
                    data: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    value: !0,
                    type: !0,
                    accessList: !0,
                    maxFeePerGas: !0,
                    maxPriorityFeePerGas: !0
                },
                ei = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        var o;
                        (0, i.Z)(this, t);
                        var a = n;
                        return null == a && (a = new Promise((function(e, r) {
                            setTimeout((function() {
                                o.detectNetwork().then((function(r) {
                                    e(r)
                                }), (function(e) {
                                    r(e)
                                }))
                            }), 0)
                        }))), o = r.call(this, a), e || (e = Q(o.constructor, "defaultUrl")()), X((0, me.Z)(o), "connection", "string" === typeof e ? Object.freeze({
                            url: e
                        }) : Object.freeze($(e))), o._nextId = 42, o
                    }
                    return (0, o.Z)(t, [{
                        key: "_cache",
                        get: function() {
                            return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache
                        }
                    }, {
                        key: "detectNetwork",
                        value: function() {
                            var e = this;
                            return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), setTimeout((function() {
                                e._cache.detectNetwork = null
                            }), 0)), this._cache.detectNetwork
                        }
                    }, {
                        key: "_uncachedDetectNetwork",
                        value: function() {
                            return jn(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r, t;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Wn(0);
                                        case 2:
                                            return r = null, e.prev = 3, e.next = 6, this.send("eth_chainId", []);
                                        case 6:
                                            r = e.sent, e.next = 19;
                                            break;
                                        case 9:
                                            return e.prev = 9, e.t0 = e.catch(3), e.prev = 11, e.next = 14, this.send("net_version", []);
                                        case 14:
                                            r = e.sent, e.next = 19;
                                            break;
                                        case 17:
                                            e.prev = 17, e.t1 = e.catch(11);
                                        case 19:
                                            if (null == r) {
                                                e.next = 28;
                                                break
                                            }
                                            return t = Q(this.constructor, "getNetwork"), e.prev = 21, e.abrupt("return", t(K.from(r).toNumber()));
                                        case 25:
                                            return e.prev = 25, e.t2 = e.catch(21), e.abrupt("return", Kn.throwError("could not detect network", b.errors.NETWORK_ERROR, {
                                                chainId: r,
                                                event: "invalidNetwork",
                                                serverError: e.t2
                                            }));
                                        case 28:
                                            return e.abrupt("return", Kn.throwError("could not detect network", b.errors.NETWORK_ERROR, {
                                                event: "noNetwork"
                                            }));
                                        case 29:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this, [
                                    [3, 9],
                                    [11, 17],
                                    [21, 25]
                                ])
                            })))
                        }
                    }, {
                        key: "getSigner",
                        value: function(e) {
                            return new Qn(Xn, this, e)
                        }
                    }, {
                        key: "getUncheckedSigner",
                        value: function(e) {
                            return this.getSigner(e).connectUnchecked()
                        }
                    }, {
                        key: "listAccounts",
                        value: function() {
                            var e = this;
                            return this.send("eth_accounts", []).then((function(r) {
                                return r.map((function(r) {
                                    return e.formatter.address(r)
                                }))
                            }))
                        }
                    }, {
                        key: "send",
                        value: function(e, r) {
                            var t = this,
                                n = {
                                    method: e,
                                    params: r,
                                    id: this._nextId++,
                                    jsonrpc: "2.0"
                                };
                            this.emit("debug", {
                                action: "request",
                                request: ne(n),
                                provider: this
                            });
                            var i = ["eth_chainId", "eth_blockNumber"].indexOf(e) >= 0;
                            if (i && this._cache[e]) return this._cache[e];
                            var o = mr(this.connection, JSON.stringify(n), Vn).then((function(e) {
                                return t.emit("debug", {
                                    action: "response",
                                    request: n,
                                    response: e,
                                    provider: t
                                }), e
                            }), (function(e) {
                                throw t.emit("debug", {
                                    action: "response",
                                    error: e,
                                    request: n,
                                    provider: t
                                }), e
                            }));
                            return i && (this._cache[e] = o, setTimeout((function() {
                                t._cache[e] = null
                            }), 0)), o
                        }
                    }, {
                        key: "prepareRequest",
                        value: function(e, r) {
                            switch (e) {
                                case "getBlockNumber":
                                    return ["eth_blockNumber", []];
                                case "getGasPrice":
                                    return ["eth_gasPrice", []];
                                case "getBalance":
                                    return ["eth_getBalance", [Jn(r.address), r.blockTag]];
                                case "getTransactionCount":
                                    return ["eth_getTransactionCount", [Jn(r.address), r.blockTag]];
                                case "getCode":
                                    return ["eth_getCode", [Jn(r.address), r.blockTag]];
                                case "getStorageAt":
                                    return ["eth_getStorageAt", [Jn(r.address), F(r.position, 32), r.blockTag]];
                                case "sendTransaction":
                                    return ["eth_sendRawTransaction", [r.signedTransaction]];
                                case "getBlock":
                                    return r.blockTag ? ["eth_getBlockByNumber", [r.blockTag, !!r.includeTransactions]] : r.blockHash ? ["eth_getBlockByHash", [r.blockHash, !!r.includeTransactions]] : null;
                                case "getTransaction":
                                    return ["eth_getTransactionByHash", [r.transactionHash]];
                                case "getTransactionReceipt":
                                    return ["eth_getTransactionReceipt", [r.transactionHash]];
                                case "call":
                                    return ["eth_call", [Q(this.constructor, "hexlifyTransaction")(r.transaction, {
                                        from: !0
                                    }), r.blockTag]];
                                case "estimateGas":
                                    return ["eth_estimateGas", [Q(this.constructor, "hexlifyTransaction")(r.transaction, {
                                        from: !0
                                    })]];
                                case "getLogs":
                                    return r.filter && null != r.filter.address && (r.filter.address = Jn(r.filter.address)), ["eth_getLogs", [r.filter]]
                            }
                            return null
                        }
                    }, {
                        key: "perform",
                        value: function(e, r) {
                            return jn(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o, a;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if ("call" !== e && "estimateGas" !== e) {
                                                t.next = 8;
                                                break
                                            }
                                            if (!(i = r.transaction) || null == i.type || !K.from(i.type).isZero()) {
                                                t.next = 8;
                                                break
                                            }
                                            if (null != i.maxFeePerGas || null != i.maxPriorityFeePerGas) {
                                                t.next = 8;
                                                break
                                            }
                                            return t.next = 6, this.getFeeData();
                                        case 6:
                                            null == (o = t.sent).maxFeePerGas && null == o.maxPriorityFeePerGas && ((r = $(r)).transaction = $(i), delete r.transaction.type);
                                        case 8:
                                            return null == (a = this.prepareRequest(e, r)) && Kn.throwError(e + " not implemented", b.errors.NOT_IMPLEMENTED, {
                                                operation: e
                                            }), t.prev = 10, t.next = 13, this.send(a[0], a[1]);
                                        case 13:
                                            return t.abrupt("return", t.sent);
                                        case 16:
                                            return t.prev = 16, t.t0 = t.catch(10), t.abrupt("return", Hn(e, t.t0, r));
                                        case 19:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this, [
                                    [10, 16]
                                ])
                            })))
                        }
                    }, {
                        key: "_startEvent",
                        value: function(e) {
                            "pending" === e.tag && this._startPending(), (0, yn.Z)((0, bn.Z)(t.prototype), "_startEvent", this).call(this, e)
                        }
                    }, {
                        key: "_startPending",
                        value: function() {
                            if (null == this._pendingFilter) {
                                var e = this,
                                    r = this.send("eth_newPendingTransactionFilter", []);
                                this._pendingFilter = r, r.then((function(t) {
                                    return function n() {
                                        e.send("eth_getFilterChanges", [t]).then((function(t) {
                                            if (e._pendingFilter != r) return null;
                                            var n = Promise.resolve();
                                            return t.forEach((function(r) {
                                                e._emitted["t:" + r.toLowerCase()] = "pending", n = n.then((function() {
                                                    return e.getTransaction(r).then((function(r) {
                                                        return e.emit("pending", r), null
                                                    }))
                                                }))
                                            })), n.then((function() {
                                                return Wn(1e3)
                                            }))
                                        })).then((function() {
                                            if (e._pendingFilter == r) return setTimeout((function() {
                                                n()
                                            }), 0), null;
                                            e.send("eth_uninstallFilter", [t])
                                        })).catch((function(e) {}))
                                    }(), t
                                })).catch((function(e) {}))
                            }
                        }
                    }, {
                        key: "_stopEvent",
                        value: function(e) {
                            "pending" === e.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), (0, yn.Z)((0, bn.Z)(t.prototype), "_stopEvent", this).call(this, e)
                        }
                    }], [{
                        key: "defaultUrl",
                        value: function() {
                            return "http://localhost:8545"
                        }
                    }, {
                        key: "hexlifyTransaction",
                        value: function(e, r) {
                            var t, n, i = $($n);
                            if (r)
                                for (var o in r) r[o] && (i[o] = !0);
                            n = i, (t = e) && "object" === typeof t || J.throwArgumentError("invalid object", "object", t), Object.keys(t).forEach((function(e) {
                                n[e] || J.throwArgumentError("invalid object key - " + e, "transaction:" + e, t)
                            }));
                            var a = {};
                            return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach((function(r) {
                                if (null != e[r]) {
                                    var t = L(K.from(e[r]));
                                    "gasLimit" === r && (r = "gas"), a[r] = t
                                }
                            })), ["from", "to", "data"].forEach((function(r) {
                                null != e[r] && (a[r] = T(e[r]))
                            })), e.accessList && (a.accessList = Ut(e.accessList)), a
                        }
                    }]), t
                }(gn),
                ri = null;
            try {
                if (null == (ri = WebSocket)) throw new Error("inject please")
            } catch (fo) {
                var ti = new b(wr);
                ri = function() {
                    ti.throwError("WebSockets not supported in this environment", b.errors.UNSUPPORTED_OPERATION, {
                        operation: "new WebSocket()"
                    })
                }
            }
            var ni = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                ii = new b(wr),
                oi = 1,
                ai = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        var o, a;
                        (0, i.Z)(this, t), "any" === n && ii.throwError("WebSocketProvider does not support 'any' network yet", b.errors.UNSUPPORTED_OPERATION, {
                            operation: "network:any"
                        }), (a = "string" === typeof e ? r.call(this, e, n) : r.call(this, "_websocket", n))._pollingInterval = -1, a._wsReady = !1, X((0, me.Z)(a), "_websocket", "string" === typeof e ? new ri(a.connection.url) : e), X((0, me.Z)(a), "_requests", {}), X((0, me.Z)(a), "_subs", {}), X((0, me.Z)(a), "_subIds", {}), X((0, me.Z)(a), "_detectNetwork", (0, yn.Z)((o = (0, me.Z)(a), (0, bn.Z)(t.prototype)), "detectNetwork", o).call(o)), a.websocket.onopen = function() {
                            a._wsReady = !0, Object.keys(a._requests).forEach((function(e) {
                                a.websocket.send(a._requests[e].payload)
                            }))
                        }, a.websocket.onmessage = function(e) {
                            var r = e.data,
                                t = JSON.parse(r);
                            if (null != t.id) {
                                var n = String(t.id),
                                    i = a._requests[n];
                                if (delete a._requests[n], void 0 !== t.result) i.callback(null, t.result), a.emit("debug", {
                                    action: "response",
                                    request: JSON.parse(i.payload),
                                    response: t.result,
                                    provider: (0, me.Z)(a)
                                });
                                else {
                                    var o = null;
                                    t.error ? (X(o = new Error(t.error.message || "unknown error"), "code", t.error.code || null), X(o, "response", r)) : o = new Error("unknown error"), i.callback(o, void 0), a.emit("debug", {
                                        action: "response",
                                        error: o,
                                        request: JSON.parse(i.payload),
                                        provider: (0, me.Z)(a)
                                    })
                                }
                            } else if ("eth_subscription" === t.method) {
                                var s = a._subs[t.params.subscription];
                                s && s.processFunc(t.params.result)
                            } else console.warn("this should not happen")
                        };
                        var s = setInterval((function() {
                            a.emit("poll")
                        }), 1e3);
                        return s.unref && s.unref(), (0, mn.Z)(a)
                    }
                    return (0, o.Z)(t, [{
                        key: "websocket",
                        get: function() {
                            return this._websocket
                        }
                    }, {
                        key: "detectNetwork",
                        value: function() {
                            return this._detectNetwork
                        }
                    }, {
                        key: "pollingInterval",
                        get: function() {
                            return 0
                        },
                        set: function(e) {
                            ii.throwError("cannot set polling interval on WebSocketProvider", b.errors.UNSUPPORTED_OPERATION, {
                                operation: "setPollingInterval"
                            })
                        }
                    }, {
                        key: "resetEventsBlock",
                        value: function(e) {
                            ii.throwError("cannot reset events block on WebSocketProvider", b.errors.UNSUPPORTED_OPERATION, {
                                operation: "resetEventBlock"
                            })
                        }
                    }, {
                        key: "poll",
                        value: function() {
                            return ni(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.abrupt("return", null);
                                        case 1:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            })))
                        }
                    }, {
                        key: "polling",
                        set: function(e) {
                            e && ii.throwError("cannot set polling on WebSocketProvider", b.errors.UNSUPPORTED_OPERATION, {
                                operation: "setPolling"
                            })
                        }
                    }, {
                        key: "send",
                        value: function(e, r) {
                            var t = this,
                                n = oi++;
                            return new Promise((function(i, o) {
                                var a = JSON.stringify({
                                    method: e,
                                    params: r,
                                    id: n,
                                    jsonrpc: "2.0"
                                });
                                t.emit("debug", {
                                    action: "request",
                                    request: JSON.parse(a),
                                    provider: t
                                }), t._requests[String(n)] = {
                                    callback: function(e, r) {
                                        return e ? o(e) : i(r)
                                    },
                                    payload: a
                                }, t._wsReady && t.websocket.send(a)
                            }))
                        }
                    }, {
                        key: "_subscribe",
                        value: function(e, r, t) {
                            return ni(this, void 0, void 0, (0, n.Z)().mark((function i() {
                                var o, a, s = this;
                                return (0, n.Z)().wrap((function(n) {
                                    for (;;) switch (n.prev = n.next) {
                                        case 0:
                                            return null == (o = this._subIds[e]) && (o = Promise.all(r).then((function(e) {
                                                return s.send("eth_subscribe", e)
                                            })), this._subIds[e] = o), n.next = 4, o;
                                        case 4:
                                            a = n.sent, this._subs[a] = {
                                                tag: e,
                                                processFunc: t
                                            };
                                        case 6:
                                        case "end":
                                            return n.stop()
                                    }
                                }), i, this)
                            })))
                        }
                    }, {
                        key: "_startEvent",
                        value: function(e) {
                            var r = this;
                            switch (e.type) {
                                case "block":
                                    this._subscribe("block", ["newHeads"], (function(e) {
                                        var t = K.from(e.number).toNumber();
                                        r._emitted.block = t, r.emit("block", t)
                                    }));
                                    break;
                                case "pending":
                                    this._subscribe("pending", ["newPendingTransactions"], (function(e) {
                                        r.emit("pending", e)
                                    }));
                                    break;
                                case "filter":
                                    this._subscribe(e.tag, ["logs", this._getFilter(e.filter)], (function(t) {
                                        null == t.removed && (t.removed = !1), r.emit(e.filter, r.formatter.filterLog(t))
                                    }));
                                    break;
                                case "tx":
                                    var t = function(e) {
                                        var t = e.hash;
                                        r.getTransactionReceipt(t).then((function(e) {
                                            e && r.emit(t, e)
                                        }))
                                    };
                                    t(e), this._subscribe("tx", ["newHeads"], (function(e) {
                                        r._events.filter((function(e) {
                                            return "tx" === e.type
                                        })).forEach(t)
                                    }));
                                    break;
                                case "debug":
                                case "poll":
                                case "willPoll":
                                case "didPoll":
                                case "error":
                                    break;
                                default:
                                    console.log("unhandled:", e)
                            }
                        }
                    }, {
                        key: "_stopEvent",
                        value: function(e) {
                            var r = this,
                                t = e.tag;
                            if ("tx" === e.type) {
                                if (this._events.filter((function(e) {
                                        return "tx" === e.type
                                    })).length) return;
                                t = "tx"
                            } else if (this.listenerCount(e.event)) return;
                            var n = this._subIds[t];
                            n && (delete this._subIds[t], n.then((function(e) {
                                r._subs[e] && (delete r._subs[e], r.send("eth_unsubscribe", [e]))
                            })))
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            return ni(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r = this;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (this.websocket.readyState !== ri.CONNECTING) {
                                                e.next = 3;
                                                break
                                            }
                                            return e.next = 3, new Promise((function(e) {
                                                r.websocket.onopen = function() {
                                                    e(!0)
                                                }, r.websocket.onerror = function() {
                                                    e(!1)
                                                }
                                            }));
                                        case 3:
                                            this.websocket.close(1e3);
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }], [{
                        key: "defaultUrl",
                        value: function() {
                            return "ws://localhost:8546"
                        }
                    }]), t
                }(ei),
                si = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                ui = new b(wr),
                ci = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, [{
                        key: "detectNetwork",
                        value: function() {
                            var e = this,
                                r = Object.create(null, {
                                    detectNetwork: {
                                        get: function() {
                                            return (0, yn.Z)((0, bn.Z)(t.prototype), "detectNetwork", e)
                                        }
                                    }
                                });
                            return si(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var t;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (null != (t = this.network)) {
                                                e.next = 7;
                                                break
                                            }
                                            return e.next = 4, r.detectNetwork.call(this);
                                        case 4:
                                            (t = e.sent) || ui.throwError("no network detected", b.errors.UNKNOWN_ERROR, {}), null == this._network && (X(this, "_network", t), this.emit("network", t, null));
                                        case 7:
                                            return e.abrupt("return", t);
                                        case 8:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }]), t
                }(ei),
                fi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        var o;
                        (0, i.Z)(this, t), ui.checkAbstract(this instanceof t ? this.constructor : void 0, t), e = Q(this instanceof t ? this.constructor : void 0, "getNetwork")(e), n = Q(this instanceof t ? this.constructor : void 0, "getApiKey")(n);
                        var a = Q(this instanceof t ? this.constructor : void 0, "getUrl")(e, n);
                        return o = r.call(this, a, e), "string" === typeof n ? X((0, me.Z)(o), "apiKey", n) : null != n && Object.keys(n).forEach((function(e) {
                            X((0, me.Z)(o), e, n[e])
                        })), o
                    }
                    return (0, o.Z)(t, [{
                        key: "_startPending",
                        value: function() {
                            ui.warn("WARNING: API provider does not support pending filters")
                        }
                    }, {
                        key: "isCommunityResource",
                        value: function() {
                            return !1
                        }
                    }, {
                        key: "getSigner",
                        value: function(e) {
                            return ui.throwError("API provider does not support signing", b.errors.UNSUPPORTED_OPERATION, {
                                operation: "getSigner"
                            })
                        }
                    }, {
                        key: "listAccounts",
                        value: function() {
                            return Promise.resolve([])
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            return e
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            return ui.throwError("not implemented; sub-classes must override getUrl", b.errors.NOT_IMPLEMENTED, {
                                operation: "getUrl"
                            })
                        }
                    }]), t
                }(ci),
                li = new b(wr),
                hi = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC",
                di = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        var o;
                        (0, i.Z)(this, t);
                        var a = new pi(e, n),
                            s = a.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
                        return o = r.call(this, s, a.network), X((0, me.Z)(o), "apiKey", a.apiKey), o
                    }
                    return (0, o.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.apiKey === hi
                        }
                    }]), t
                }(ai),
                pi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.apiKey === hi
                        }
                    }], [{
                        key: "getWebSocketProvider",
                        value: function(e, r) {
                            return new di(e, r)
                        }
                    }, {
                        key: "getApiKey",
                        value: function(e) {
                            return null == e ? hi : (e && "string" !== typeof e && li.throwArgumentError("invalid apiKey", "apiKey", e), e)
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            switch (e.name) {
                                case "homestead":
                                    t = "eth-mainnet.alchemyapi.io/v2/";
                                    break;
                                case "ropsten":
                                    t = "eth-ropsten.alchemyapi.io/v2/";
                                    break;
                                case "rinkeby":
                                    t = "eth-rinkeby.alchemyapi.io/v2/";
                                    break;
                                case "goerli":
                                    t = "eth-goerli.alchemyapi.io/v2/";
                                    break;
                                case "kovan":
                                    t = "eth-kovan.alchemyapi.io/v2/";
                                    break;
                                case "matic":
                                    t = "polygon-mainnet.g.alchemy.com/v2/";
                                    break;
                                case "maticmum":
                                    t = "polygon-mumbai.g.alchemy.com/v2/";
                                    break;
                                case "arbitrum":
                                    t = "arb-mainnet.g.alchemy.com/v2/";
                                    break;
                                case "arbitrum-rinkeby":
                                    t = "arb-rinkeby.g.alchemy.com/v2/";
                                    break;
                                case "optimism":
                                    t = "opt-mainnet.g.alchemy.com/v2/";
                                    break;
                                case "optimism-kovan":
                                    t = "opt-kovan.g.alchemy.com/v2/";
                                    break;
                                default:
                                    li.throwArgumentError("unsupported network", "network", arguments[0])
                            }
                            return {
                                allowGzip: !0,
                                url: "https://" + t + r,
                                throttleCallback: function(e, t) {
                                    return r === hi && qt(), Promise.resolve(!0)
                                }
                            }
                        }
                    }]), t
                }(fi),
                vi = new b(wr),
                gi = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";

            function mi(e) {
                switch (e) {
                    case "homestead":
                        return "rpc.ankr.com/eth/";
                    case "ropsten":
                        return "rpc.ankr.com/eth_ropsten/";
                    case "rinkeby":
                        return "rpc.ankr.com/eth_rinkeby/";
                    case "goerli":
                        return "rpc.ankr.com/eth_goerli/";
                    case "matic":
                        return "rpc.ankr.com/polygon/";
                    case "arbitrum":
                        return "rpc.ankr.com/arbitrum/"
                }
                return vi.throwArgumentError("unsupported network", "name", e)
            }
            var yi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.apiKey === gi
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            return null == e ? gi : e
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            null == r && (r = gi);
                            var t = {
                                allowGzip: !0,
                                url: "https://" + mi(e.name) + r,
                                throttleCallback: function(e, t) {
                                    return r.apiKey === gi && qt(), Promise.resolve(!0)
                                }
                            };
                            return null != r.projectSecret && (t.user = "", t.password = r.projectSecret), t
                        }
                    }]), t
                }(fi),
                bi = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                Ei = new b(wr),
                wi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, [{
                        key: "perform",
                        value: function(e, r) {
                            var i = this,
                                o = Object.create(null, {
                                    perform: {
                                        get: function() {
                                            return (0, yn.Z)((0, bn.Z)(t.prototype), "perform", i)
                                        }
                                    }
                                });
                            return bi(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if ("getBlockNumber" !== e) {
                                                t.next = 5;
                                                break
                                            }
                                            return t.next = 3, o.perform.call(this, "getBlock", {
                                                blockTag: "latest"
                                            });
                                        case 3:
                                            return i = t.sent, t.abrupt("return", i.number);
                                        case 5:
                                            return t.abrupt("return", o.perform.call(this, e, r));
                                        case 6:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            return null != e && Ei.throwArgumentError("apiKey not supported for cloudflare", "apiKey", e), null
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            if ("homestead" === e.name) t = "https://cloudflare-eth.com/";
                            else Ei.throwArgumentError("unsupported network", "network", arguments[0]);
                            return t
                        }
                    }]), t
                }(fi),
                Ai = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                ki = new b(wr);

            function Ni(e) {
                var r = {};
                for (var t in e)
                    if (null != e[t]) {
                        var n = e[t];
                        "type" === t && 0 === n || (n = {
                            type: !0,
                            gasLimit: !0,
                            gasPrice: !0,
                            maxFeePerGs: !0,
                            maxPriorityFeePerGas: !0,
                            nonce: !0,
                            value: !0
                        }[t] ? L(T(n)) : "accessList" === t ? "[" + Ut(n).map((function(e) {
                            return '{address:"'.concat(e.address, '",storageKeys:["').concat(e.storageKeys.join('","'), '"]}')
                        })).join(",") + "]" : T(n), r[t] = n)
                    }
                return r
            }

            function Ri(e) {
                if (0 == e.status && ("No records found" === e.message || "No transactions found" === e.message)) return e.result;
                if (1 != e.status || "OK" != e.message) {
                    var r = new Error("invalid response");
                    throw r.result = JSON.stringify(e), (e.result || "").toLowerCase().indexOf("rate limit") >= 0 && (r.throttleRetry = !0), r
                }
                return e.result
            }

            function xi(e) {
                if (e && 0 == e.status && "NOTOK" == e.message && (e.result || "").toLowerCase().indexOf("rate limit") >= 0) {
                    var r = new Error("throttled response");
                    throw r.result = JSON.stringify(e), r.throttleRetry = !0, r
                }
                if ("2.0" != e.jsonrpc) {
                    var t = new Error("invalid response");
                    throw t.result = JSON.stringify(e), t
                }
                if (e.error) {
                    var n = new Error(e.error.message || "unknown error");
                    throw e.error.code && (n.code = e.error.code), e.error.data && (n.data = e.error.data), n
                }
                return e.result
            }

            function Ii(e) {
                if ("pending" === e) throw new Error("pending not supported");
                return "latest" === e ? e : parseInt(e.substring(2), 16)
            }
            var Pi = "9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB";

            function Si(e, r, t) {
                if ("call" === e && r.code === b.errors.SERVER_ERROR) {
                    var n = r.error;
                    if (n && (n.message.match(/reverted/i) || n.message.match(/VM execution error/i))) {
                        var i = n.data;
                        if (i && (i = "0x" + i.replace(/^.*0x/i, "")), S(i)) return i;
                        ki.throwError("missing revert data in call exception", b.errors.CALL_EXCEPTION, {
                            error: r,
                            data: "0x"
                        })
                    }
                }
                var o = r.message;
                throw r.code === b.errors.SERVER_ERROR && (r.error && "string" === typeof r.error.message ? o = r.error.message : "string" === typeof r.body ? o = r.body : "string" === typeof r.responseText && (o = r.responseText)), (o = (o || "").toLowerCase()).match(/insufficient funds/) && ki.throwError("insufficient funds for intrinsic transaction cost", b.errors.INSUFFICIENT_FUNDS, {
                    error: r,
                    method: e,
                    transaction: t
                }), o.match(/same hash was already imported|transaction nonce is too low|nonce too low/) && ki.throwError("nonce has already been used", b.errors.NONCE_EXPIRED, {
                    error: r,
                    method: e,
                    transaction: t
                }), o.match(/another transaction with same nonce/) && ki.throwError("replacement fee too low", b.errors.REPLACEMENT_UNDERPRICED, {
                    error: r,
                    method: e,
                    transaction: t
                }), o.match(/execution failed due to an exception|execution reverted/) && ki.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", b.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error: r,
                    method: e,
                    transaction: t
                }), r
            }
            var _i = function(e) {
                (0, a.Z)(t, e);
                var r = (0, s.Z)(t);

                function t(e, n) {
                    var o;
                    return (0, i.Z)(this, t), o = r.call(this, e), X((0, me.Z)(o), "baseUrl", o.getBaseUrl()), X((0, me.Z)(o), "apiKey", n || Pi), o
                }
                return (0, o.Z)(t, [{
                    key: "getBaseUrl",
                    value: function() {
                        switch (this.network ? this.network.name : "invalid") {
                            case "homestead":
                                return "https://api.etherscan.io";
                            case "ropsten":
                                return "https://api-ropsten.etherscan.io";
                            case "rinkeby":
                                return "https://api-rinkeby.etherscan.io";
                            case "kovan":
                                return "https://api-kovan.etherscan.io";
                            case "goerli":
                                return "https://api-goerli.etherscan.io";
                            case "optimism":
                                return "https://api-optimistic.etherscan.io"
                        }
                        return ki.throwArgumentError("unsupported network", "network", this.network.name)
                    }
                }, {
                    key: "getUrl",
                    value: function(e, r) {
                        var t = Object.keys(r).reduce((function(e, t) {
                                var n = r[t];
                                return null != n && (e += "&".concat(t, "=").concat(n)), e
                            }), ""),
                            n = this.apiKey ? "&apikey=".concat(this.apiKey) : "";
                        return "".concat(this.baseUrl, "/api?module=").concat(e).concat(t).concat(n)
                    }
                }, {
                    key: "getPostUrl",
                    value: function() {
                        return "".concat(this.baseUrl, "/api")
                    }
                }, {
                    key: "getPostData",
                    value: function(e, r) {
                        return r.module = e, r.apikey = this.apiKey, r
                    }
                }, {
                    key: "fetch",
                    value: function(e, r, t) {
                        return Ai(this, void 0, void 0, (0, n.Z)().mark((function i() {
                            var o, a, s, u, c, f, l = this;
                            return (0, n.Z)().wrap((function(n) {
                                for (;;) switch (n.prev = n.next) {
                                    case 0:
                                        return o = t ? this.getPostUrl() : this.getUrl(e, r), a = t ? this.getPostData(e, r) : null, s = "proxy" === e ? xi : Ri, this.emit("debug", {
                                            action: "request",
                                            request: o,
                                            provider: this
                                        }), u = {
                                            url: o,
                                            throttleSlotInterval: 1e3,
                                            throttleCallback: function(e, r) {
                                                return l.isCommunityResource() && qt(), Promise.resolve(!0)
                                            }
                                        }, c = null, a && (u.headers = {
                                            "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                                        }, c = Object.keys(a).map((function(e) {
                                            return "".concat(e, "=").concat(a[e])
                                        })).join("&")), n.next = 9, mr(u, c, s || xi);
                                    case 9:
                                        return f = n.sent, this.emit("debug", {
                                            action: "response",
                                            request: o,
                                            response: ne(f),
                                            provider: this
                                        }), n.abrupt("return", f);
                                    case 12:
                                    case "end":
                                        return n.stop()
                                }
                            }), i, this)
                        })))
                    }
                }, {
                    key: "detectNetwork",
                    value: function() {
                        return Ai(this, void 0, void 0, (0, n.Z)().mark((function e() {
                            return (0, n.Z)().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return e.abrupt("return", this.network);
                                    case 1:
                                    case "end":
                                        return e.stop()
                                }
                            }), e, this)
                        })))
                    }
                }, {
                    key: "perform",
                    value: function(e, r) {
                        var i = this,
                            o = Object.create(null, {
                                perform: {
                                    get: function() {
                                        return (0, yn.Z)((0, bn.Z)(t.prototype), "perform", i)
                                    }
                                }
                            });
                        return Ai(this, void 0, void 0, (0, n.Z)().mark((function t() {
                            var i, a, s, u, c, f, l, h, d;
                            return (0, n.Z)().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        t.t0 = e, t.next = "getBlockNumber" === t.t0 ? 3 : "getGasPrice" === t.t0 ? 4 : "getBalance" === t.t0 ? 5 : "getTransactionCount" === t.t0 ? 6 : "getCode" === t.t0 ? 7 : "getStorageAt" === t.t0 ? 8 : "sendTransaction" === t.t0 ? 9 : "getBlock" === t.t0 ? 10 : "getTransaction" === t.t0 ? 13 : "getTransactionReceipt" === t.t0 ? 14 : "call" === t.t0 ? 15 : "estimateGas" === t.t0 ? 29 : "getLogs" === t.t0 ? 41 : "getEtherPrice" === t.t0 ? 65 : 72;
                                        break;
                                    case 3:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_blockNumber"
                                        }));
                                    case 4:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_gasPrice"
                                        }));
                                    case 5:
                                        return t.abrupt("return", this.fetch("account", {
                                            action: "balance",
                                            address: r.address,
                                            tag: r.blockTag
                                        }));
                                    case 6:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_getTransactionCount",
                                            address: r.address,
                                            tag: r.blockTag
                                        }));
                                    case 7:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_getCode",
                                            address: r.address,
                                            tag: r.blockTag
                                        }));
                                    case 8:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_getStorageAt",
                                            address: r.address,
                                            position: r.position,
                                            tag: r.blockTag
                                        }));
                                    case 9:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_sendRawTransaction",
                                            hex: r.signedTransaction
                                        }, !0).catch((function(e) {
                                            return Si("sendTransaction", e, r.signedTransaction)
                                        })));
                                    case 10:
                                        if (!r.blockTag) {
                                            t.next = 12;
                                            break
                                        }
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_getBlockByNumber",
                                            tag: r.blockTag,
                                            boolean: r.includeTransactions ? "true" : "false"
                                        }));
                                    case 12:
                                        throw new Error("getBlock by blockHash not implemented");
                                    case 13:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_getTransactionByHash",
                                            txhash: r.transactionHash
                                        }));
                                    case 14:
                                        return t.abrupt("return", this.fetch("proxy", {
                                            action: "eth_getTransactionReceipt",
                                            txhash: r.transactionHash
                                        }));
                                    case 15:
                                        if ("latest" === r.blockTag) {
                                            t.next = 17;
                                            break
                                        }
                                        throw new Error("EtherscanProvider does not support blockTag for call");
                                    case 17:
                                        return (i = Ni(r.transaction)).module = "proxy", i.action = "eth_call", t.prev = 20, t.next = 23, this.fetch("proxy", i, !0);
                                    case 23:
                                        return t.abrupt("return", t.sent);
                                    case 26:
                                        return t.prev = 26, t.t1 = t.catch(20), t.abrupt("return", Si("call", t.t1, r.transaction));
                                    case 29:
                                        return (a = Ni(r.transaction)).module = "proxy", a.action = "eth_estimateGas", t.prev = 32, t.next = 35, this.fetch("proxy", a, !0);
                                    case 35:
                                        return t.abrupt("return", t.sent);
                                    case 38:
                                        return t.prev = 38, t.t2 = t.catch(32), t.abrupt("return", Si("estimateGas", t.t2, r.transaction));
                                    case 41:
                                        return s = {
                                            action: "getLogs"
                                        }, r.filter.fromBlock && (s.fromBlock = Ii(r.filter.fromBlock)), r.filter.toBlock && (s.toBlock = Ii(r.filter.toBlock)), r.filter.address && (s.address = r.filter.address), r.filter.topics && r.filter.topics.length > 0 && (r.filter.topics.length > 1 && ki.throwError("unsupported topic count", b.errors.UNSUPPORTED_OPERATION, {
                                            topics: r.filter.topics
                                        }), 1 === r.filter.topics.length && ("string" === typeof(u = r.filter.topics[0]) && 66 === u.length || ki.throwError("unsupported topic format", b.errors.UNSUPPORTED_OPERATION, {
                                            topic0: u
                                        }), s.topic0 = u)), t.next = 48, this.fetch("logs", s);
                                    case 48:
                                        c = t.sent, f = {}, l = 0;
                                    case 51:
                                        if (!(l < c.length)) {
                                            t.next = 64;
                                            break
                                        }
                                        if (null == (h = c[l]).blockHash) {
                                            t.next = 55;
                                            break
                                        }
                                        return t.abrupt("continue", 61);
                                    case 55:
                                        if (null != f[h.blockNumber]) {
                                            t.next = 60;
                                            break
                                        }
                                        return t.next = 58, this.getBlock(h.blockNumber);
                                    case 58:
                                        (d = t.sent) && (f[h.blockNumber] = d.hash);
                                    case 60:
                                        h.blockHash = f[h.blockNumber];
                                    case 61:
                                        l++, t.next = 51;
                                        break;
                                    case 64:
                                        return t.abrupt("return", c);
                                    case 65:
                                        if ("homestead" === this.network.name) {
                                            t.next = 67;
                                            break
                                        }
                                        return t.abrupt("return", 0);
                                    case 67:
                                        return t.t3 = parseFloat, t.next = 70, this.fetch("stats", {
                                            action: "ethprice"
                                        });
                                    case 70:
                                        return t.t4 = t.sent.ethusd, t.abrupt("return", (0, t.t3)(t.t4));
                                    case 72:
                                        return t.abrupt("break", 73);
                                    case 73:
                                        return t.abrupt("return", o.perform.call(this, e, r));
                                    case 74:
                                    case "end":
                                        return t.stop()
                                }
                            }), t, this, [
                                [20, 26],
                                [32, 38]
                            ])
                        })))
                    }
                }, {
                    key: "getHistory",
                    value: function(e, r, t) {
                        return Ai(this, void 0, void 0, (0, n.Z)().mark((function i() {
                            var o, a, s = this;
                            return (0, n.Z)().wrap((function(n) {
                                for (;;) switch (n.prev = n.next) {
                                    case 0:
                                        return n.next = 2, this.resolveName(e);
                                    case 2:
                                        return n.t0 = n.sent, n.t1 = null == r ? 0 : r, n.t2 = null == t ? 99999999 : t, o = {
                                            action: "txlist",
                                            address: n.t0,
                                            startblock: n.t1,
                                            endblock: n.t2,
                                            sort: "asc"
                                        }, n.next = 8, this.fetch("account", o);
                                    case 8:
                                        return a = n.sent, n.abrupt("return", a.map((function(e) {
                                            ["contractAddress", "to"].forEach((function(r) {
                                                "" == e[r] && delete e[r]
                                            })), null == e.creates && null != e.contractAddress && (e.creates = e.contractAddress);
                                            var r = s.formatter.transactionResponse(e);
                                            return e.timeStamp && (r.timestamp = parseInt(e.timeStamp)), r
                                        })));
                                    case 10:
                                    case "end":
                                        return n.stop()
                                }
                            }), i, this)
                        })))
                    }
                }, {
                    key: "isCommunityResource",
                    value: function() {
                        return this.apiKey === Pi
                    }
                }]), t
            }(gn);

            function Ti(e) {
                for (var r = (e = e.slice()).length - 1; r > 0; r--) {
                    var t = Math.floor(Math.random() * (r + 1)),
                        n = e[r];
                    e[r] = e[t], e[t] = n
                }
                return e
            }
            var Oi = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                Ci = new b(wr);

            function Ui() {
                return (new Date).getTime()
            }

            function Li(e) {
                for (var r = null, t = 0; t < e.length; t++) {
                    var n = e[t];
                    if (null == n) return null;
                    r ? r.name === n.name && r.chainId === n.chainId && (r.ensAddress === n.ensAddress || null == r.ensAddress && null == n.ensAddress) || Ci.throwArgumentError("provider mismatch", "networks", e) : r = n
                }
                return r
            }

            function Fi(e, r) {
                e = e.slice().sort();
                var t = Math.floor(e.length / 2);
                if (e.length % 2) return e[t];
                var n = e[t - 1],
                    i = e[t];
                return null != r && Math.abs(n - i) > r ? null : (n + i) / 2
            }

            function Di(e) {
                if (null === e) return "null";
                if ("number" === typeof e || "boolean" === typeof e) return JSON.stringify(e);
                if ("string" === typeof e) return e;
                if (K.isBigNumber(e)) return e.toString();
                if (Array.isArray(e)) return JSON.stringify(e.map((function(e) {
                    return Di(e)
                })));
                if ("object" === typeof e) {
                    var r = Object.keys(e);
                    return r.sort(), "{" + r.map((function(r) {
                        var t = e[r];
                        return t = "function" === typeof t ? "[function]" : Di(t), JSON.stringify(r) + ":" + t
                    })).join(",") + "}"
                }
                throw new Error("unknown value type: " + typeof e)
            }
            var Mi = 1;

            function Bi(e) {
                var r = null,
                    t = null,
                    n = new Promise((function(n) {
                        r = function() {
                            t && (clearTimeout(t), t = null), n()
                        }, t = setTimeout(r, e)
                    }));
                return {
                    cancel: r,
                    getPromise: function() {
                        return n
                    },
                    wait: function(e) {
                        return n = n.then(e)
                    }
                }
            }
            var Gi = [b.errors.CALL_EXCEPTION, b.errors.INSUFFICIENT_FUNDS, b.errors.NONCE_EXPIRED, b.errors.REPLACEMENT_UNDERPRICED, b.errors.UNPREDICTABLE_GAS_LIMIT],
                Zi = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"];

            function ji(e, r) {
                var t = {
                    weight: e.weight
                };
                return Object.defineProperty(t, "provider", {
                    get: function() {
                        return e.provider
                    }
                }), e.start && (t.start = e.start), r && (t.duration = r - e.start), e.done && (e.error ? t.error = e.error : t.result = e.result || null), t
            }

            function Ki(e, r, t) {
                var n = Di;
                switch (r) {
                    case "getBlockNumber":
                        return function(r) {
                            var t = r.map((function(e) {
                                    return e.result
                                })),
                                n = Fi(r.map((function(e) {
                                    return e.result
                                })), 2);
                            if (null != n) return n = Math.ceil(n), t.indexOf(n + 1) >= 0 && n++, n >= e._highestBlockNumber && (e._highestBlockNumber = n), e._highestBlockNumber
                        };
                    case "getGasPrice":
                        return function(e) {
                            var r = e.map((function(e) {
                                return e.result
                            }));
                            return r.sort(), r[Math.floor(r.length / 2)]
                        };
                    case "getEtherPrice":
                        return function(e) {
                            return Fi(e.map((function(e) {
                                return e.result
                            })))
                        };
                    case "getBalance":
                    case "getTransactionCount":
                    case "getCode":
                    case "getStorageAt":
                    case "call":
                    case "estimateGas":
                    case "getLogs":
                        break;
                    case "getTransaction":
                    case "getTransactionReceipt":
                        n = function(e) {
                            return null == e ? null : ((e = $(e)).confirmations = -1, Di(e))
                        };
                        break;
                    case "getBlock":
                        n = t.includeTransactions ? function(e) {
                            return null == e ? null : ((e = $(e)).transactions = e.transactions.map((function(e) {
                                return (e = $(e)).confirmations = -1, e
                            })), Di(e))
                        } : function(e) {
                            return null == e ? null : Di(e)
                        };
                        break;
                    default:
                        throw new Error("unknown method: " + r)
                }
                return function(e, r) {
                    return function(t) {
                        var n = {};
                        t.forEach((function(r) {
                            var t = e(r.result);
                            n[t] || (n[t] = {
                                count: 0,
                                result: r.result
                            }), n[t].count++
                        }));
                        for (var i = Object.keys(n), o = 0; o < i.length; o++) {
                            var a = n[i[o]];
                            if (a.count >= r) return a.result
                        }
                    }
                }(n, e.quorum)
            }

            function zi(e, r) {
                return Oi(this, void 0, void 0, (0, n.Z)().mark((function t() {
                    var i;
                    return (0, n.Z)().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (!(null != (i = e.provider).blockNumber && i.blockNumber >= r || -1 === r)) {
                                    t.next = 3;
                                    break
                                }
                                return t.abrupt("return", i);
                            case 3:
                                return t.abrupt("return", yr((function() {
                                    return new Promise((function(t, n) {
                                        setTimeout((function() {
                                            return i.blockNumber >= r ? t(i) : e.cancelled ? t(null) : t(void 0)
                                        }), 0)
                                    }))
                                }), {
                                    oncePoll: i
                                }));
                            case 4:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))
            }

            function qi(e, r, t, i) {
                return Oi(this, void 0, void 0, (0, n.Z)().mark((function o() {
                    var a, s;
                    return (0, n.Z)().wrap((function(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                a = e.provider, n.t0 = t, n.next = "getBlockNumber" === n.t0 || "getGasPrice" === n.t0 ? 4 : "getEtherPrice" === n.t0 ? 5 : "getBalance" === n.t0 || "getTransactionCount" === n.t0 || "getCode" === n.t0 ? 8 : "getStorageAt" === n.t0 ? 13 : "getBlock" === n.t0 ? 18 : "call" === n.t0 || "estimateGas" === n.t0 ? 23 : "getTransaction" === n.t0 || "getTransactionReceipt" === n.t0 ? 28 : "getLogs" === n.t0 ? 29 : 35;
                                break;
                            case 4:
                                return n.abrupt("return", a[t]());
                            case 5:
                                if (!a.getEtherPrice) {
                                    n.next = 7;
                                    break
                                }
                                return n.abrupt("return", a.getEtherPrice());
                            case 7:
                                return n.abrupt("break", 35);
                            case 8:
                                if (!i.blockTag || !S(i.blockTag)) {
                                    n.next = 12;
                                    break
                                }
                                return n.next = 11, zi(e, r);
                            case 11:
                                a = n.sent;
                            case 12:
                                return n.abrupt("return", a[t](i.address, i.blockTag || "latest"));
                            case 13:
                                if (!i.blockTag || !S(i.blockTag)) {
                                    n.next = 17;
                                    break
                                }
                                return n.next = 16, zi(e, r);
                            case 16:
                                a = n.sent;
                            case 17:
                                return n.abrupt("return", a.getStorageAt(i.address, i.position, i.blockTag || "latest"));
                            case 18:
                                if (!i.blockTag || !S(i.blockTag)) {
                                    n.next = 22;
                                    break
                                }
                                return n.next = 21, zi(e, r);
                            case 21:
                                a = n.sent;
                            case 22:
                                return n.abrupt("return", a[i.includeTransactions ? "getBlockWithTransactions" : "getBlock"](i.blockTag || i.blockHash));
                            case 23:
                                if (!i.blockTag || !S(i.blockTag)) {
                                    n.next = 27;
                                    break
                                }
                                return n.next = 26, zi(e, r);
                            case 26:
                                a = n.sent;
                            case 27:
                                return n.abrupt("return", a[t](i.transaction));
                            case 28:
                                return n.abrupt("return", a[t](i.transactionHash));
                            case 29:
                                if (!((s = i.filter).fromBlock && S(s.fromBlock) || s.toBlock && S(s.toBlock))) {
                                    n.next = 34;
                                    break
                                }
                                return n.next = 33, zi(e, r);
                            case 33:
                                a = n.sent;
                            case 34:
                                return n.abrupt("return", a.getLogs(s));
                            case 35:
                                return n.abrupt("return", Ci.throwError("unknown method error", b.errors.UNKNOWN_ERROR, {
                                    method: t,
                                    params: i
                                }));
                            case 36:
                            case "end":
                                return n.stop()
                        }
                    }), o)
                })))
            }
            var Hi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        var o;
                        (0, i.Z)(this, t), 0 === e.length && Ci.throwArgumentError("missing providers", "providers", e);
                        var a = e.map((function(e, r) {
                                if (ue.isProvider(e)) {
                                    var t = Kt(e) ? 2e3 : 750;
                                    return Object.freeze({
                                        provider: e,
                                        weight: 1,
                                        stallTimeout: t,
                                        priority: 1
                                    })
                                }
                                var n = $(e);
                                null == n.priority && (n.priority = 1), null == n.stallTimeout && (n.stallTimeout = Kt(e) ? 2e3 : 750), null == n.weight && (n.weight = 1);
                                var i = n.weight;
                                return (i % 1 || i > 512 || i < 1) && Ci.throwArgumentError("invalid weight; must be integer in [1, 512]", "providers[".concat(r, "].weight"), i), Object.freeze(n)
                            })),
                            s = a.reduce((function(e, r) {
                                return e + r.weight
                            }), 0);
                        null == n ? n = s / 2 : n > s && Ci.throwArgumentError("quorum will always fail; larger than total weight", "quorum", n);
                        var u = Li(a.map((function(e) {
                            return e.provider.network
                        })));
                        return null == u && (u = new Promise((function(e, r) {
                            setTimeout((function() {
                                o.detectNetwork().then(e, r)
                            }), 0)
                        }))), o = r.call(this, u), X((0, me.Z)(o), "providerConfigs", Object.freeze(a)), X((0, me.Z)(o), "quorum", n), o._highestBlockNumber = -1, o
                    }
                    return (0, o.Z)(t, [{
                        key: "detectNetwork",
                        value: function() {
                            return Oi(this, void 0, void 0, (0, n.Z)().mark((function e() {
                                var r;
                                return (0, n.Z)().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Promise.all(this.providerConfigs.map((function(e) {
                                                return e.provider.getNetwork()
                                            })));
                                        case 2:
                                            return r = e.sent, e.abrupt("return", Li(r));
                                        case 4:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e, this)
                            })))
                        }
                    }, {
                        key: "perform",
                        value: function(e, r) {
                            return Oi(this, void 0, void 0, (0, n.Z)().mark((function t() {
                                var i, o, a, s, u, c, f, l, h, d, p = this;
                                return (0, n.Z)().wrap((function(t) {
                                    for (;;) switch (t.prev = t.next) {
                                        case 0:
                                            if ("sendTransaction" !== e) {
                                                t.next = 13;
                                                break
                                            }
                                            return t.next = 3, Promise.all(this.providerConfigs.map((function(e) {
                                                return e.provider.sendTransaction(r.signedTransaction).then((function(e) {
                                                    return e.hash
                                                }), (function(e) {
                                                    return e
                                                }))
                                            })));
                                        case 3:
                                            i = t.sent, o = 0;
                                        case 5:
                                            if (!(o < i.length)) {
                                                t.next = 12;
                                                break
                                            }
                                            if ("string" !== typeof(a = i[o])) {
                                                t.next = 9;
                                                break
                                            }
                                            return t.abrupt("return", a);
                                        case 9:
                                            o++, t.next = 5;
                                            break;
                                        case 12:
                                            throw i[0];
                                        case 13:
                                            if (-1 !== this._highestBlockNumber || "getBlockNumber" === e) {
                                                t.next = 16;
                                                break
                                            }
                                            return t.next = 16, this.getBlockNumber();
                                        case 16:
                                            s = Ki(this, e, r), (u = Ti(this.providerConfigs.map($))).sort((function(e, r) {
                                                return e.priority - r.priority
                                            })), c = this._highestBlockNumber, f = 0, l = !0, h = (0, n.Z)().mark((function t() {
                                                var i, o, a, h, d, v, g;
                                                return (0, n.Z)().wrap((function(t) {
                                                    for (;;) switch (t.prev = t.next) {
                                                        case 0:
                                                            i = Ui(), o = u.filter((function(e) {
                                                                return e.runner && i - e.start < e.stallTimeout
                                                            })).reduce((function(e, r) {
                                                                return e + r.weight
                                                            }), 0), a = (0, n.Z)().mark((function t() {
                                                                var i, a;
                                                                return (0, n.Z)().wrap((function(t) {
                                                                    for (;;) switch (t.prev = t.next) {
                                                                        case 0:
                                                                            i = u[f++], a = Mi++, i.start = Ui(), i.staller = Bi(i.stallTimeout), i.staller.wait((function() {
                                                                                i.staller = null
                                                                            })), i.runner = qi(i, c, e, r).then((function(t) {
                                                                                i.done = !0, i.result = t, p.listenerCount("debug") && p.emit("debug", {
                                                                                    action: "request",
                                                                                    rid: a,
                                                                                    backend: ji(i, Ui()),
                                                                                    request: {
                                                                                        method: e,
                                                                                        params: ne(r)
                                                                                    },
                                                                                    provider: p
                                                                                })
                                                                            }), (function(t) {
                                                                                i.done = !0, i.error = t, p.listenerCount("debug") && p.emit("debug", {
                                                                                    action: "request",
                                                                                    rid: a,
                                                                                    backend: ji(i, Ui()),
                                                                                    request: {
                                                                                        method: e,
                                                                                        params: ne(r)
                                                                                    },
                                                                                    provider: p
                                                                                })
                                                                            })), p.listenerCount("debug") && p.emit("debug", {
                                                                                action: "request",
                                                                                rid: a,
                                                                                backend: ji(i, null),
                                                                                request: {
                                                                                    method: e,
                                                                                    params: ne(r)
                                                                                },
                                                                                provider: p
                                                                            }), o += i.weight;
                                                                        case 8:
                                                                        case "end":
                                                                            return t.stop()
                                                                    }
                                                                }), t)
                                                            }));
                                                        case 3:
                                                            if (!(o < p.quorum && f < u.length)) {
                                                                t.next = 7;
                                                                break
                                                            }
                                                            return t.delegateYield(a(), "t0", 5);
                                                        case 5:
                                                            t.next = 3;
                                                            break;
                                                        case 7:
                                                            if (h = [], u.forEach((function(e) {
                                                                    !e.done && e.runner && (h.push(e.runner), e.staller && h.push(e.staller.getPromise()))
                                                                })), !h.length) {
                                                                t.next = 12;
                                                                break
                                                            }
                                                            return t.next = 12, Promise.race(h);
                                                        case 12:
                                                            if (!((d = u.filter((function(e) {
                                                                    return e.done && null == e.error
                                                                }))).length >= p.quorum)) {
                                                                t.next = 22;
                                                                break
                                                            }
                                                            if (void 0 === (v = s(d))) {
                                                                t.next = 18;
                                                                break
                                                            }
                                                            return u.forEach((function(e) {
                                                                e.staller && e.staller.cancel(), e.cancelled = !0
                                                            })), t.abrupt("return", {
                                                                v: v
                                                            });
                                                        case 18:
                                                            if (l) {
                                                                t.next = 21;
                                                                break
                                                            }
                                                            return t.next = 21, Bi(100).getPromise();
                                                        case 21:
                                                            l = !1;
                                                        case 22:
                                                            if (g = u.reduce((function(e, r) {
                                                                    if (!r.done || null == r.error) return e;
                                                                    var t = r.error.code;
                                                                    return Gi.indexOf(t) >= 0 && (e[t] || (e[t] = {
                                                                        error: r.error,
                                                                        weight: 0
                                                                    }), e[t].weight += r.weight), e
                                                                }), {}), Object.keys(g).forEach((function(e) {
                                                                    var r = g[e];
                                                                    if (!(r.weight < p.quorum)) {
                                                                        u.forEach((function(e) {
                                                                            e.staller && e.staller.cancel(), e.cancelled = !0
                                                                        }));
                                                                        var t = r.error,
                                                                            n = {};
                                                                        Zi.forEach((function(e) {
                                                                            null != t[e] && (n[e] = t[e])
                                                                        })), Ci.throwError(t.reason || t.message, e, n)
                                                                    }
                                                                })), 0 !== u.filter((function(e) {
                                                                    return !e.done
                                                                })).length) {
                                                                t.next = 26;
                                                                break
                                                            }
                                                            return t.abrupt("return", "break");
                                                        case 26:
                                                        case "end":
                                                            return t.stop()
                                                    }
                                                }), t)
                                            }));
                                        case 23:
                                            return t.delegateYield(h(), "t0", 25);
                                        case 25:
                                            if ("break" !== (d = t.t0)) {
                                                t.next = 28;
                                                break
                                            }
                                            return t.abrupt("break", 32);
                                        case 28:
                                            if ("object" !== typeof d) {
                                                t.next = 30;
                                                break
                                            }
                                            return t.abrupt("return", d.v);
                                        case 30:
                                            t.next = 23;
                                            break;
                                        case 32:
                                            return u.forEach((function(e) {
                                                e.staller && e.staller.cancel(), e.cancelled = !0
                                            })), t.abrupt("return", Ci.throwError("failed to meet quorum", b.errors.SERVER_ERROR, {
                                                method: e,
                                                params: r,
                                                results: u.map((function(e) {
                                                    return ji(e)
                                                })),
                                                provider: this
                                            }));
                                        case 34:
                                        case "end":
                                            return t.stop()
                                    }
                                }), t, this)
                            })))
                        }
                    }]), t
                }(gn),
                Wi = null,
                Vi = new b(wr),
                Ji = "84842078b09946638c03157f83405213",
                Xi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        var o;
                        (0, i.Z)(this, t);
                        var a = new Qi(e, n),
                            s = a.connection;
                        s.password && Vi.throwError("INFURA WebSocket project secrets unsupported", b.errors.UNSUPPORTED_OPERATION, {
                            operation: "InfuraProvider.getWebSocketProvider()"
                        });
                        var u = s.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
                        return o = r.call(this, u, e), X((0, me.Z)(o), "apiKey", a.projectId), X((0, me.Z)(o), "projectId", a.projectId), X((0, me.Z)(o), "projectSecret", a.projectSecret), o
                    }
                    return (0, o.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.projectId === Ji
                        }
                    }]), t
                }(ai),
                Qi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.projectId === Ji
                        }
                    }], [{
                        key: "getWebSocketProvider",
                        value: function(e, r) {
                            return new Xi(e, r)
                        }
                    }, {
                        key: "getApiKey",
                        value: function(e) {
                            var r = {
                                apiKey: Ji,
                                projectId: Ji,
                                projectSecret: null
                            };
                            return null == e || ("string" === typeof e ? r.projectId = e : null != e.projectSecret ? (Vi.assertArgument("string" === typeof e.projectId, "projectSecret requires a projectId", "projectId", e.projectId), Vi.assertArgument("string" === typeof e.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"), r.projectId = e.projectId, r.projectSecret = e.projectSecret) : e.projectId && (r.projectId = e.projectId), r.apiKey = r.projectId), r
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            switch (e ? e.name : "unknown") {
                                case "homestead":
                                    t = "mainnet.infura.io";
                                    break;
                                case "ropsten":
                                    t = "ropsten.infura.io";
                                    break;
                                case "rinkeby":
                                    t = "rinkeby.infura.io";
                                    break;
                                case "kovan":
                                    t = "kovan.infura.io";
                                    break;
                                case "goerli":
                                    t = "goerli.infura.io";
                                    break;
                                case "matic":
                                    t = "polygon-mainnet.infura.io";
                                    break;
                                case "maticmum":
                                    t = "polygon-mumbai.infura.io";
                                    break;
                                case "optimism":
                                    t = "optimism-mainnet.infura.io";
                                    break;
                                case "optimism-kovan":
                                    t = "optimism-kovan.infura.io";
                                    break;
                                case "arbitrum":
                                    t = "arbitrum-mainnet.infura.io";
                                    break;
                                case "arbitrum-rinkeby":
                                    t = "arbitrum-rinkeby.infura.io";
                                    break;
                                default:
                                    Vi.throwError("unsupported network", b.errors.INVALID_ARGUMENT, {
                                        argument: "network",
                                        value: e
                                    })
                            }
                            var n = {
                                allowGzip: !0,
                                url: "https://" + t + "/v3/" + r.projectId,
                                throttleCallback: function(e, t) {
                                    return r.projectId === Ji && qt(), Promise.resolve(!0)
                                }
                            };
                            return null != r.projectSecret && (n.user = "", n.password = r.projectSecret), n
                        }
                    }]), t
                }(fi),
                Yi = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, [{
                        key: "send",
                        value: function(e, r) {
                            var t = this,
                                n = {
                                    method: e,
                                    params: r,
                                    id: this._nextId++,
                                    jsonrpc: "2.0"
                                };
                            null == this._pendingBatch && (this._pendingBatch = []);
                            var i = {
                                    request: n,
                                    resolve: null,
                                    reject: null
                                },
                                o = new Promise((function(e, r) {
                                    i.resolve = e, i.reject = r
                                }));
                            return this._pendingBatch.push(i), this._pendingBatchAggregator || (this._pendingBatchAggregator = setTimeout((function() {
                                var e = t._pendingBatch;
                                t._pendingBatch = null, t._pendingBatchAggregator = null;
                                var r = e.map((function(e) {
                                    return e.request
                                }));
                                return t.emit("debug", {
                                    action: "requestBatch",
                                    request: ne(r),
                                    provider: t
                                }), mr(t.connection, JSON.stringify(r)).then((function(n) {
                                    t.emit("debug", {
                                        action: "response",
                                        request: r,
                                        response: n,
                                        provider: t
                                    }), e.forEach((function(e, r) {
                                        var t = n[r];
                                        if (t.error) {
                                            var i = new Error(t.error.message);
                                            i.code = t.error.code, i.data = t.error.data, e.reject(i)
                                        } else e.resolve(t.result)
                                    }))
                                }), (function(n) {
                                    t.emit("debug", {
                                        action: "response",
                                        error: n,
                                        request: r,
                                        provider: t
                                    }), e.forEach((function(e) {
                                        e.reject(n)
                                    }))
                                }))
                            }), 10)), o
                        }
                    }]), t
                }(ei),
                $i = new b(wr),
                eo = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t() {
                        return (0, i.Z)(this, t), r.apply(this, arguments)
                    }
                    return (0, o.Z)(t, null, [{
                        key: "getApiKey",
                        value: function(e) {
                            return e && "string" !== typeof e && $i.throwArgumentError("invalid apiKey", "apiKey", e), e || "ETHERS_JS_SHARED"
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            $i.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
                            var t = null;
                            switch (e.name) {
                                case "homestead":
                                    t = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                                    break;
                                case "ropsten":
                                    t = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                                    break;
                                case "rinkeby":
                                    t = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                                    break;
                                case "goerli":
                                    t = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                                    break;
                                case "kovan":
                                    t = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                                    break;
                                default:
                                    $i.throwArgumentError("unsupported network", "network", arguments[0])
                            }
                            return t + "?apiKey=" + r
                        }
                    }]), t
                }(fi),
                ro = new b(wr),
                to = {
                    homestead: "6004bcd10040261633ade990",
                    ropsten: "6004bd4d0040261633ade991",
                    rinkeby: "6004bda20040261633ade994",
                    goerli: "6004bd860040261633ade992"
                },
                no = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        if ((0, i.Z)(this, t), null == n) {
                            var o = Q(this instanceof t ? this.constructor : void 0, "getNetwork")(e);
                            if (o) {
                                var a = to[o.name];
                                a && (n = {
                                    applicationId: a,
                                    loadBalancer: !0
                                })
                            }
                            null == n && ro.throwError("unsupported network", b.errors.INVALID_ARGUMENT, {
                                argument: "network",
                                value: e
                            })
                        }
                        return r.call(this, e, n)
                    }
                    return (0, o.Z)(t, [{
                        key: "isCommunityResource",
                        value: function() {
                            return this.applicationId === to[this.network.name]
                        }
                    }], [{
                        key: "getApiKey",
                        value: function(e) {
                            null == e && ro.throwArgumentError("PocketProvider.getApiKey does not support null apiKey", "apiKey", e);
                            var r = {
                                applicationId: null,
                                loadBalancer: !1,
                                applicationSecretKey: null
                            };
                            return "string" === typeof e ? r.applicationId = e : null != e.applicationSecretKey ? (ro.assertArgument("string" === typeof e.applicationId, "applicationSecretKey requires an applicationId", "applicationId", e.applicationId), ro.assertArgument("string" === typeof e.applicationSecretKey, "invalid applicationSecretKey", "applicationSecretKey", "[REDACTED]"), r.applicationId = e.applicationId, r.applicationSecretKey = e.applicationSecretKey, r.loadBalancer = !!e.loadBalancer) : e.applicationId ? (ro.assertArgument("string" === typeof e.applicationId, "apiKey.applicationId must be a string", "apiKey.applicationId", e.applicationId), r.applicationId = e.applicationId, r.loadBalancer = !!e.loadBalancer) : ro.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", e), r
                        }
                    }, {
                        key: "getUrl",
                        value: function(e, r) {
                            var t = null;
                            switch (e ? e.name : "unknown") {
                                case "homestead":
                                    t = "eth-mainnet.gateway.pokt.network";
                                    break;
                                case "ropsten":
                                    t = "eth-ropsten.gateway.pokt.network";
                                    break;
                                case "rinkeby":
                                    t = "eth-rinkeby.gateway.pokt.network";
                                    break;
                                case "goerli":
                                    t = "eth-goerli.gateway.pokt.network";
                                    break;
                                default:
                                    ro.throwError("unsupported network", b.errors.INVALID_ARGUMENT, {
                                        argument: "network",
                                        value: e
                                    })
                            }
                            var n = {
                                url: r.loadBalancer ? "https://".concat(t, "/v1/lb/").concat(r.applicationId) : "https://".concat(t, "/v1/").concat(r.applicationId),
                                headers: {}
                            };
                            return null != r.applicationSecretKey && (n.user = "", n.password = r.applicationSecretKey), n
                        }
                    }]), t
                }(fi),
                io = new b(wr),
                oo = 1;

            function ao(e, r) {
                var t = "Web3LegacyFetcher";
                return function(e, n) {
                    var i = this,
                        o = {
                            method: e,
                            params: n,
                            id: oo++,
                            jsonrpc: "2.0"
                        };
                    return new Promise((function(e, n) {
                        i.emit("debug", {
                            action: "request",
                            fetcher: t,
                            request: ne(o),
                            provider: i
                        }), r(o, (function(r, a) {
                            if (r) return i.emit("debug", {
                                action: "response",
                                fetcher: t,
                                error: r,
                                request: o,
                                provider: i
                            }), n(r);
                            if (i.emit("debug", {
                                    action: "response",
                                    fetcher: t,
                                    request: o,
                                    response: a,
                                    provider: i
                                }), a.error) {
                                var s = new Error(a.error.message);
                                return s.code = a.error.code, s.data = a.error.data, n(s)
                            }
                            e(a.result)
                        }))
                    }))
                }
            }
            var so = function(e) {
                    (0, a.Z)(t, e);
                    var r = (0, s.Z)(t);

                    function t(e, n) {
                        var o;
                        (0, i.Z)(this, t), null == e && io.throwArgumentError("missing provider", "provider", e);
                        var a = null,
                            s = null,
                            u = null;
                        return "function" === typeof e ? (a = "unknown:", s = e) : (!(a = e.host || e.path || "") && e.isMetaMask && (a = "metamask"), u = e, e.request ? ("" === a && (a = "eip-1193:"), s = function(e) {
                            return function(r, t) {
                                var n = this;
                                null == t && (t = []);
                                var i = {
                                    method: r,
                                    params: t
                                };
                                return this.emit("debug", {
                                    action: "request",
                                    fetcher: "Eip1193Fetcher",
                                    request: ne(i),
                                    provider: this
                                }), e.request(i).then((function(e) {
                                    return n.emit("debug", {
                                        action: "response",
                                        fetcher: "Eip1193Fetcher",
                                        request: i,
                                        response: e,
                                        provider: n
                                    }), e
                                }), (function(e) {
                                    throw n.emit("debug", {
                                        action: "response",
                                        fetcher: "Eip1193Fetcher",
                                        request: i,
                                        error: e,
                                        provider: n
                                    }), e
                                }))
                            }
                        }(e)) : e.sendAsync ? s = ao(0, e.sendAsync.bind(e)) : e.send ? s = ao(0, e.send.bind(e)) : io.throwArgumentError("unsupported provider", "provider", e), a || (a = "unknown:")), o = r.call(this, a, n), X((0, me.Z)(o), "jsonRpcFetchFunc", s), X((0, me.Z)(o), "provider", u), o
                    }
                    return (0, o.Z)(t, [{
                        key: "send",
                        value: function(e, r) {
                            return this.jsonRpcFetchFunc(e, r)
                        }
                    }]), t
                }(ei),
                uo = new b(wr);

            function co(e, r) {
                if (null == e && (e = "homestead"), "string" === typeof e) {
                    var t = e.match(/^(ws|http)s?:/i);
                    if (t) switch (t[1].toLowerCase()) {
                        case "http":
                        case "https":
                            return new ei(e);
                        case "ws":
                        case "wss":
                            return new ai(e);
                        default:
                            uo.throwArgumentError("unsupported URL scheme", "network", e)
                    }
                }
                var n = ge(e);
                return n && n._defaultProvider || uo.throwError("unsupported getDefaultProvider network", b.errors.NETWORK_ERROR, {
                    operation: "getDefaultProvider",
                    network: e
                }), n._defaultProvider({
                    FallbackProvider: Hi,
                    AlchemyProvider: pi,
                    AnkrProvider: yi,
                    CloudflareProvider: wi,
                    EtherscanProvider: _i,
                    InfuraProvider: Qi,
                    JsonRpcProvider: ei,
                    NodesmithProvider: eo,
                    PocketProvider: no,
                    Web3Provider: so,
                    IpcProvider: Wi
                }, r)
            }
        },
        9156: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                randomBytes: function() {
                    return n.O
                },
                shuffled: function() {
                    return i.y
                }
            });
            var n = t(16743),
                i = t(78513)
        },
        16743: function(e, r, t) {
            "use strict";
            t.d(r, {
                O: function() {
                    return R
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f;
            var v = new p("bytes/5.7.0");

            function g(e) {
                return !!e.toHexString
            }

            function m(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return m(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function y(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function b(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!y(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!y(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function E(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), m(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e) && (e = e.toHexString()), w(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : v.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return m(new Uint8Array(i))
                }
                return b(e) ? m(new Uint8Array(e)) : v.throwArgumentError("invalid arrayify value", "value", e)
            }

            function w(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var A = new p("random/5.6.1");
            var k = function() {
                    if ("undefined" !== typeof self) return self;
                    if ("undefined" !== typeof window) return window;
                    if ("undefined" !== typeof t.g) return t.g;
                    throw new Error("unable to locate global object")
                }(),
                N = k.crypto || k.msCrypto;

            function R(e) {
                (e <= 0 || e > 1024 || e % 1 || e != e) && A.throwArgumentError("invalid length", "length", e);
                var r = new Uint8Array(e);
                return N.getRandomValues(r), E(r)
            }
            N && N.getRandomValues || (A.warn("WARNING: Missing strong random number source"), N = {
                getRandomValues: function(e) {
                    return A.throwError("no secure random source avaialble", p.errors.UNSUPPORTED_OPERATION, {
                        operation: "crypto.getRandomValues"
                    })
                }
            })
        },
        78513: function(e, r, t) {
            "use strict";

            function n(e) {
                for (var r = (e = e.slice()).length - 1; r > 0; r--) {
                    var t = Math.floor(Math.random() * (r + 1)),
                        n = e[r];
                    e[r] = e[t], e[t] = n
                }
                return e
            }
            t.d(r, {
                y: function() {
                    return n
                }
            })
        },
        79704: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                decode: function() {
                    return O
                },
                encode: function() {
                    return S
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f;
            var v = new p("bytes/5.7.0");

            function g(e) {
                return !!e.toHexString
            }

            function m(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return m(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function y(e) {
                return A(e) && !(e.length % 2) || E(e)
            }

            function b(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function E(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!b(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!b(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function w(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), m(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e) && (e = e.toHexString()), A(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : v.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return m(new Uint8Array(i))
                }
                return E(e) ? m(new Uint8Array(e)) : v.throwArgumentError("invalid arrayify value", "value", e)
            }

            function A(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var k = "0123456789abcdef";

            function N(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = k[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e)) return e.toHexString();
                if (A(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : v.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (E(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += k[(240 & o) >> 4] + k[15 & o]
                    }
                    return n
                }
                return v.throwArgumentError("invalid hexlify value", "value", e)
            }
            var R = new p("rlp/5.6.1");

            function x(e) {
                for (var r = []; e;) r.unshift(255 & e), e >>= 8;
                return r
            }

            function I(e, r, t) {
                for (var n = 0, i = 0; i < t; i++) n = 256 * n + e[r + i];
                return n
            }

            function P(e) {
                if (Array.isArray(e)) {
                    var r = [];
                    if (e.forEach((function(e) {
                            r = r.concat(P(e))
                        })), r.length <= 55) return r.unshift(192 + r.length), r;
                    var t = x(r.length);
                    return t.unshift(247 + t.length), t.concat(r)
                }
                y(e) || R.throwArgumentError("RLP object must be BytesLike", "object", e);
                var n = Array.prototype.slice.call(w(e));
                if (1 === n.length && n[0] <= 127) return n;
                if (n.length <= 55) return n.unshift(128 + n.length), n;
                var i = x(n.length);
                return i.unshift(183 + i.length), i.concat(n)
            }

            function S(e) {
                return N(P(e))
            }

            function _(e, r, t, n) {
                for (var i = []; t < r + 1 + n;) {
                    var o = T(e, t);
                    i.push(o.result), (t += o.consumed) > r + 1 + n && R.throwError("child data too short", p.errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + n,
                    result: i
                }
            }

            function T(e, r) {
                if (0 === e.length && R.throwError("data too short", p.errors.BUFFER_OVERRUN, {}), e[r] >= 248) {
                    var t = e[r] - 247;
                    r + 1 + t > e.length && R.throwError("data short segment too short", p.errors.BUFFER_OVERRUN, {});
                    var n = I(e, r + 1, t);
                    return r + 1 + t + n > e.length && R.throwError("data long segment too short", p.errors.BUFFER_OVERRUN, {}), _(e, r, r + 1 + t, t + n)
                }
                if (e[r] >= 192) {
                    var i = e[r] - 192;
                    return r + 1 + i > e.length && R.throwError("data array too short", p.errors.BUFFER_OVERRUN, {}), _(e, r, r + 1, i)
                }
                if (e[r] >= 184) {
                    var o = e[r] - 183;
                    r + 1 + o > e.length && R.throwError("data array too short", p.errors.BUFFER_OVERRUN, {});
                    var a = I(e, r + 1, o);
                    return r + 1 + o + a > e.length && R.throwError("data array too short", p.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + o + a,
                        result: N(e.slice(r + 1 + o, r + 1 + o + a))
                    }
                }
                if (e[r] >= 128) {
                    var s = e[r] - 128;
                    return r + 1 + s > e.length && R.throwError("data too short", p.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + s,
                        result: N(e.slice(r + 1, r + 1 + s))
                    }
                }
                return {
                    consumed: 1,
                    result: N(e[r])
                }
            }

            function O(e) {
                var r = w(e),
                    t = T(r, 0);
                return t.consumed !== r.length && R.throwArgumentError("invalid rlp data", "data", e), t.result
            }
        },
        33031: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                SupportedAlgorithm: function() {
                    return i.p
                },
                computeHmac: function() {
                    return n.Gy
                },
                ripemd160: function() {
                    return n.bP
                },
                sha256: function() {
                    return n.JQ
                },
                sha512: function() {
                    return n.o
                }
            });
            var n = t(73313),
                i = t(61585)
        },
        73313: function(e, r, t) {
            "use strict";
            t.d(r, {
                Gy: function() {
                    return S
                },
                bP: function() {
                    return x
                },
                JQ: function() {
                    return I
                },
                o: function() {
                    return P
                }
            });
            var n = t(12111),
                i = t.n(n),
                o = t(27853),
                a = t(84531),
                s = !1,
                u = !1,
                c = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                f = c.default,
                l = null;
            var h, d, p = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(h || (h = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(d || (d = {}));
            var v = "0123456789abcdef",
                g = function() {
                    function e(r) {
                        (0, o.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, a.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == c[t] && this.throwArgumentError("invalid log level name", "logLevel", e), f > c[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (u) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += v[r[o] >> 4], t += v[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case d.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var s = r;
                                    switch (s) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + s;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case d.CALL_EXCEPTION:
                                case d.INSUFFICIENT_FUNDS:
                                case d.MISSING_NEW:
                                case d.NONCE_EXPIRED:
                                case d.REPLACEMENT_UNDERPRICED:
                                case d.TRANSACTION_REPLACED:
                                case d.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), p && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: p
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return l || (l = new e("logger/5.7.0")), l
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), s) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            u = !!r, s = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = c[r.toLowerCase()];
                            null != t ? f = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            g.errors = d, g.levels = h;
            var m = new g("bytes/5.7.0");

            function y(e) {
                return !!e.toHexString
            }

            function b(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return b(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function E(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function w(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!E(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!E(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function A(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    m.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), b(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), y(e) && (e = e.toHexString()), k(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : m.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return b(new Uint8Array(i))
                }
                return w(e) ? b(new Uint8Array(e)) : m.throwArgumentError("invalid arrayify value", "value", e)
            }

            function k(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var N = t(61585),
                R = new g("sha2/5.6.1");

            function x(e) {
                return "0x" + i().ripemd160().update(A(e)).digest("hex")
            }

            function I(e) {
                return "0x" + i().sha256().update(A(e)).digest("hex")
            }

            function P(e) {
                return "0x" + i().sha512().update(A(e)).digest("hex")
            }

            function S(e, r, t) {
                return N.p[e] || R.throwError("unsupported algorithm " + e, g.errors.UNSUPPORTED_OPERATION, {
                    operation: "hmac",
                    algorithm: e
                }), "0x" + i().hmac(i()[e], A(r)).update(A(t)).digest("hex")
            }
        },
        61585: function(e, r, t) {
            "use strict";
            var n;
            t.d(r, {
                    p: function() {
                        return n
                    }
                }),
                function(e) {
                    e.sha256 = "sha256", e.sha512 = "sha512"
                }(n || (n = {}))
        },
        14184: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                SigningKey: function() {
                    return ge
                },
                computePublicKey: function() {
                    return ye
                },
                recoverPublicKey: function() {
                    return me
                }
            });
            var n = t(27853),
                i = t(84531),
                o = t(27239),
                a = t.n(o),
                s = t(12111),
                u = t.n(s);
            "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof t.g ? t.g : "undefined" !== typeof self && self;

            function c(e, r, t) {
                return t = {
                    path: r,
                    exports: {},
                    require: function(e, r) {
                        return function() {
                            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                        }((void 0 === r || null === r) && t.path)
                    }
                }, e(t, t.exports), t.exports
            }
            var f = l;

            function l(e, r) {
                if (!e) throw new Error(r || "Assertion failed")
            }
            l.equal = function(e, r, t) {
                if (e != r) throw new Error(t || "Assertion failed: " + e + " != " + r)
            };
            var h = c((function(e, r) {
                    var t = r;

                    function n(e) {
                        return 1 === e.length ? "0" + e : e
                    }

                    function i(e) {
                        for (var r = "", t = 0; t < e.length; t++) r += n(e[t].toString(16));
                        return r
                    }
                    t.toArray = function(e, r) {
                        if (Array.isArray(e)) return e.slice();
                        if (!e) return [];
                        var t = [];
                        if ("string" !== typeof e) {
                            for (var n = 0; n < e.length; n++) t[n] = 0 | e[n];
                            return t
                        }
                        if ("hex" === r) {
                            (e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 !== 0 && (e = "0" + e);
                            for (n = 0; n < e.length; n += 2) t.push(parseInt(e[n] + e[n + 1], 16))
                        } else
                            for (n = 0; n < e.length; n++) {
                                var i = e.charCodeAt(n),
                                    o = i >> 8,
                                    a = 255 & i;
                                o ? t.push(o, a) : t.push(a)
                            }
                        return t
                    }, t.zero2 = n, t.toHex = i, t.encode = function(e, r) {
                        return "hex" === r ? i(e) : e
                    }
                })),
                d = c((function(e, r) {
                    var t = r;
                    t.assert = f, t.toArray = h.toArray, t.zero2 = h.zero2, t.toHex = h.toHex, t.encode = h.encode, t.getNAF = function(e, r, t) {
                        var n = new Array(Math.max(e.bitLength(), t) + 1);
                        n.fill(0);
                        for (var i = 1 << r + 1, o = e.clone(), a = 0; a < n.length; a++) {
                            var s, u = o.andln(i - 1);
                            o.isOdd() ? (s = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(s)) : s = 0, n[a] = s, o.iushrn(1)
                        }
                        return n
                    }, t.getJSF = function(e, r) {
                        var t = [
                            [],
                            []
                        ];
                        e = e.clone(), r = r.clone();
                        for (var n, i = 0, o = 0; e.cmpn(-i) > 0 || r.cmpn(-o) > 0;) {
                            var a, s, u = e.andln(3) + i & 3,
                                c = r.andln(3) + o & 3;
                            3 === u && (u = -1), 3 === c && (c = -1), a = 0 === (1 & u) ? 0 : 3 !== (n = e.andln(7) + i & 7) && 5 !== n || 2 !== c ? u : -u, t[0].push(a), s = 0 === (1 & c) ? 0 : 3 !== (n = r.andln(7) + o & 7) && 5 !== n || 2 !== u ? c : -c, t[1].push(s), 2 * i === a + 1 && (i = 1 - i), 2 * o === s + 1 && (o = 1 - o), e.iushrn(1), r.iushrn(1)
                        }
                        return t
                    }, t.cachedProperty = function(e, r, t) {
                        var n = "_" + r;
                        e.prototype[r] = function() {
                            return void 0 !== this[n] ? this[n] : this[n] = t.call(this)
                        }
                    }, t.parseBytes = function(e) {
                        return "string" === typeof e ? t.toArray(e, "hex") : e
                    }, t.intFromLE = function(e) {
                        return new(a())(e, "hex", "le")
                    }
                })),
                p = d.getNAF,
                v = d.getJSF,
                g = d.assert;

            function m(e, r) {
                this.type = e, this.p = new(a())(r.p, 16), this.red = r.prime ? a().red(r.prime) : a().mont(this.p), this.zero = new(a())(0).toRed(this.red), this.one = new(a())(1).toRed(this.red), this.two = new(a())(2).toRed(this.red), this.n = r.n && new(a())(r.n, 16), this.g = r.g && this.pointFromJSON(r.g, r.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                var t = this.n && this.p.div(this.n);
                !t || t.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
            }
            var y = m;

            function b(e, r) {
                this.curve = e, this.type = r, this.precomputed = null
            }
            m.prototype.point = function() {
                throw new Error("Not implemented")
            }, m.prototype.validate = function() {
                throw new Error("Not implemented")
            }, m.prototype._fixedNafMul = function(e, r) {
                g(e.precomputed);
                var t = e._getDoubles(),
                    n = p(r, 1, this._bitLength),
                    i = (1 << t.step + 1) - (t.step % 2 === 0 ? 2 : 1);
                i /= 3;
                var o, a, s = [];
                for (o = 0; o < n.length; o += t.step) {
                    a = 0;
                    for (var u = o + t.step - 1; u >= o; u--) a = (a << 1) + n[u];
                    s.push(a)
                }
                for (var c = this.jpoint(null, null, null), f = this.jpoint(null, null, null), l = i; l > 0; l--) {
                    for (o = 0; o < s.length; o++)(a = s[o]) === l ? f = f.mixedAdd(t.points[o]) : a === -l && (f = f.mixedAdd(t.points[o].neg()));
                    c = c.add(f)
                }
                return c.toP()
            }, m.prototype._wnafMul = function(e, r) {
                var t = 4,
                    n = e._getNAFPoints(t);
                t = n.wnd;
                for (var i = n.points, o = p(r, t, this._bitLength), a = this.jpoint(null, null, null), s = o.length - 1; s >= 0; s--) {
                    for (var u = 0; s >= 0 && 0 === o[s]; s--) u++;
                    if (s >= 0 && u++, a = a.dblp(u), s < 0) break;
                    var c = o[s];
                    g(0 !== c), a = "affine" === e.type ? c > 0 ? a.mixedAdd(i[c - 1 >> 1]) : a.mixedAdd(i[-c - 1 >> 1].neg()) : c > 0 ? a.add(i[c - 1 >> 1]) : a.add(i[-c - 1 >> 1].neg())
                }
                return "affine" === e.type ? a.toP() : a
            }, m.prototype._wnafMulAdd = function(e, r, t, n, i) {
                var o, a, s, u = this._wnafT1,
                    c = this._wnafT2,
                    f = this._wnafT3,
                    l = 0;
                for (o = 0; o < n; o++) {
                    var h = (s = r[o])._getNAFPoints(e);
                    u[o] = h.wnd, c[o] = h.points
                }
                for (o = n - 1; o >= 1; o -= 2) {
                    var d = o - 1,
                        g = o;
                    if (1 === u[d] && 1 === u[g]) {
                        var m = [r[d], null, null, r[g]];
                        0 === r[d].y.cmp(r[g].y) ? (m[1] = r[d].add(r[g]), m[2] = r[d].toJ().mixedAdd(r[g].neg())) : 0 === r[d].y.cmp(r[g].y.redNeg()) ? (m[1] = r[d].toJ().mixedAdd(r[g]), m[2] = r[d].add(r[g].neg())) : (m[1] = r[d].toJ().mixedAdd(r[g]), m[2] = r[d].toJ().mixedAdd(r[g].neg()));
                        var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            b = v(t[d], t[g]);
                        for (l = Math.max(b[0].length, l), f[d] = new Array(l), f[g] = new Array(l), a = 0; a < l; a++) {
                            var E = 0 | b[0][a],
                                w = 0 | b[1][a];
                            f[d][a] = y[3 * (E + 1) + (w + 1)], f[g][a] = 0, c[d] = m
                        }
                    } else f[d] = p(t[d], u[d], this._bitLength), f[g] = p(t[g], u[g], this._bitLength), l = Math.max(f[d].length, l), l = Math.max(f[g].length, l)
                }
                var A = this.jpoint(null, null, null),
                    k = this._wnafT4;
                for (o = l; o >= 0; o--) {
                    for (var N = 0; o >= 0;) {
                        var R = !0;
                        for (a = 0; a < n; a++) k[a] = 0 | f[a][o], 0 !== k[a] && (R = !1);
                        if (!R) break;
                        N++, o--
                    }
                    if (o >= 0 && N++, A = A.dblp(N), o < 0) break;
                    for (a = 0; a < n; a++) {
                        var x = k[a];
                        0 !== x && (x > 0 ? s = c[a][x - 1 >> 1] : x < 0 && (s = c[a][-x - 1 >> 1].neg()), A = "affine" === s.type ? A.mixedAdd(s) : A.add(s))
                    }
                }
                for (o = 0; o < n; o++) c[o] = null;
                return i ? A : A.toP()
            }, m.BasePoint = b, b.prototype.eq = function() {
                throw new Error("Not implemented")
            }, b.prototype.validate = function() {
                return this.curve.validate(this)
            }, m.prototype.decodePoint = function(e, r) {
                e = d.toArray(e, r);
                var t = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 === 2 * t) return 6 === e[0] ? g(e[e.length - 1] % 2 === 0) : 7 === e[0] && g(e[e.length - 1] % 2 === 1), this.point(e.slice(1, 1 + t), e.slice(1 + t, 1 + 2 * t));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === t) return this.pointFromX(e.slice(1, 1 + t), 3 === e[0]);
                throw new Error("Unknown point format")
            }, b.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }, b.prototype._encode = function(e) {
                var r = this.curve.p.byteLength(),
                    t = this.getX().toArray("be", r);
                return e ? [this.getY().isEven() ? 2 : 3].concat(t) : [4].concat(t, this.getY().toArray("be", r))
            }, b.prototype.encode = function(e, r) {
                return d.encode(this._encode(r), e)
            }, b.prototype.precompute = function(e) {
                if (this.precomputed) return this;
                var r = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, e), r.beta = this._getBeta(), this.precomputed = r, this
            }, b.prototype._hasDoubles = function(e) {
                if (!this.precomputed) return !1;
                var r = this.precomputed.doubles;
                return !!r && r.points.length >= Math.ceil((e.bitLength() + 1) / r.step)
            }, b.prototype._getDoubles = function(e, r) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var t = [this], n = this, i = 0; i < r; i += e) {
                    for (var o = 0; o < e; o++) n = n.dbl();
                    t.push(n)
                }
                return {
                    step: e,
                    points: t
                }
            }, b.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var r = [this], t = (1 << e) - 1, n = 1 === t ? null : this.dbl(), i = 1; i < t; i++) r[i] = r[i - 1].add(n);
                return {
                    wnd: e,
                    points: r
                }
            }, b.prototype._getBeta = function() {
                return null
            }, b.prototype.dblp = function(e) {
                for (var r = this, t = 0; t < e; t++) r = r.dbl();
                return r
            };
            var E = c((function(e) {
                    "function" === typeof Object.create ? e.exports = function(e, r) {
                        r && (e.super_ = r, e.prototype = Object.create(r.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : e.exports = function(e, r) {
                        if (r) {
                            e.super_ = r;
                            var t = function() {};
                            t.prototype = r.prototype, e.prototype = new t, e.prototype.constructor = e
                        }
                    }
                })),
                w = d.assert;

            function A(e) {
                y.call(this, "short", e), this.a = new(a())(e.a, 16).toRed(this.red), this.b = new(a())(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
            }
            E(A, y);
            var k = A;

            function N(e, r, t, n) {
                y.BasePoint.call(this, e, "affine"), null === r && null === t ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new(a())(r, 16), this.y = new(a())(t, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
            }

            function R(e, r, t, n) {
                y.BasePoint.call(this, e, "jacobian"), null === r && null === t && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new(a())(0)) : (this.x = new(a())(r, 16), this.y = new(a())(t, 16), this.z = new(a())(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
            }
            A.prototype._getEndomorphism = function(e) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var r, t;
                    if (e.beta) r = new(a())(e.beta, 16).toRed(this.red);
                    else {
                        var n = this._getEndoRoots(this.p);
                        r = (r = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red)
                    }
                    if (e.lambda) t = new(a())(e.lambda, 16);
                    else {
                        var i = this._getEndoRoots(this.n);
                        0 === this.g.mul(i[0]).x.cmp(this.g.x.redMul(r)) ? t = i[0] : (t = i[1], w(0 === this.g.mul(t).x.cmp(this.g.x.redMul(r))))
                    }
                    return {
                        beta: r,
                        lambda: t,
                        basis: e.basis ? e.basis.map((function(e) {
                            return {
                                a: new(a())(e.a, 16),
                                b: new(a())(e.b, 16)
                            }
                        })) : this._getEndoBasis(t)
                    }
                }
            }, A.prototype._getEndoRoots = function(e) {
                var r = e === this.p ? this.red : a().mont(e),
                    t = new(a())(2).toRed(r).redInvm(),
                    n = t.redNeg(),
                    i = new(a())(3).toRed(r).redNeg().redSqrt().redMul(t);
                return [n.redAdd(i).fromRed(), n.redSub(i).fromRed()]
            }, A.prototype._getEndoBasis = function(e) {
                for (var r, t, n, i, o, s, u, c, f, l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h = e, d = this.n.clone(), p = new(a())(1), v = new(a())(0), g = new(a())(0), m = new(a())(1), y = 0; 0 !== h.cmpn(0);) {
                    var b = d.div(h);
                    c = d.sub(b.mul(h)), f = g.sub(b.mul(p));
                    var E = m.sub(b.mul(v));
                    if (!n && c.cmp(l) < 0) r = u.neg(), t = p, n = c.neg(), i = f;
                    else if (n && 2 === ++y) break;
                    u = c, d = h, h = c, g = p, p = f, m = v, v = E
                }
                o = c.neg(), s = f;
                var w = n.sqr().add(i.sqr());
                return o.sqr().add(s.sqr()).cmp(w) >= 0 && (o = r, s = t), n.negative && (n = n.neg(), i = i.neg()), o.negative && (o = o.neg(), s = s.neg()), [{
                    a: n,
                    b: i
                }, {
                    a: o,
                    b: s
                }]
            }, A.prototype._endoSplit = function(e) {
                var r = this.endo.basis,
                    t = r[0],
                    n = r[1],
                    i = n.b.mul(e).divRound(this.n),
                    o = t.b.neg().mul(e).divRound(this.n),
                    a = i.mul(t.a),
                    s = o.mul(n.a),
                    u = i.mul(t.b),
                    c = o.mul(n.b);
                return {
                    k1: e.sub(a).sub(s),
                    k2: u.add(c).neg()
                }
            }, A.prototype.pointFromX = function(e, r) {
                (e = new(a())(e, 16)).red || (e = e.toRed(this.red));
                var t = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),
                    n = t.redSqrt();
                if (0 !== n.redSqr().redSub(t).cmp(this.zero)) throw new Error("invalid point");
                var i = n.fromRed().isOdd();
                return (r && !i || !r && i) && (n = n.redNeg()), this.point(e, n)
            }, A.prototype.validate = function(e) {
                if (e.inf) return !0;
                var r = e.x,
                    t = e.y,
                    n = this.a.redMul(r),
                    i = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);
                return 0 === t.redSqr().redISub(i).cmpn(0)
            }, A.prototype._endoWnafMulAdd = function(e, r, t) {
                for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < e.length; o++) {
                    var a = this._endoSplit(r[o]),
                        s = e[o],
                        u = s._getBeta();
                    a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2
                }
                for (var c = this._wnafMulAdd(1, n, i, 2 * o, t), f = 0; f < 2 * o; f++) n[f] = null, i[f] = null;
                return c
            }, E(N, y.BasePoint), A.prototype.point = function(e, r, t) {
                return new N(this, e, r, t)
            }, A.prototype.pointFromJSON = function(e, r) {
                return N.fromJSON(this, e, r)
            }, N.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var e = this.precomputed;
                    if (e && e.beta) return e.beta;
                    var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (e) {
                        var t = this.curve,
                            n = function(e) {
                                return t.point(e.x.redMul(t.endo.beta), e.y)
                            };
                        e.beta = r, r.precomputed = {
                            beta: null,
                            naf: e.naf && {
                                wnd: e.naf.wnd,
                                points: e.naf.points.map(n)
                            },
                            doubles: e.doubles && {
                                step: e.doubles.step,
                                points: e.doubles.points.map(n)
                            }
                        }
                    }
                    return r
                }
            }, N.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }, N.fromJSON = function(e, r, t) {
                "string" === typeof r && (r = JSON.parse(r));
                var n = e.point(r[0], r[1], t);
                if (!r[2]) return n;

                function i(r) {
                    return e.point(r[0], r[1], t)
                }
                var o = r[2];
                return n.precomputed = {
                    beta: null,
                    doubles: o.doubles && {
                        step: o.doubles.step,
                        points: [n].concat(o.doubles.points.map(i))
                    },
                    naf: o.naf && {
                        wnd: o.naf.wnd,
                        points: [n].concat(o.naf.points.map(i))
                    }
                }, n
            }, N.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }, N.prototype.isInfinity = function() {
                return this.inf
            }, N.prototype.add = function(e) {
                if (this.inf) return e;
                if (e.inf) return this;
                if (this.eq(e)) return this.dbl();
                if (this.neg().eq(e)) return this.curve.point(null, null);
                if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                var r = this.y.redSub(e.y);
                0 !== r.cmpn(0) && (r = r.redMul(this.x.redSub(e.x).redInvm()));
                var t = r.redSqr().redISub(this.x).redISub(e.x),
                    n = r.redMul(this.x.redSub(t)).redISub(this.y);
                return this.curve.point(t, n)
            }, N.prototype.dbl = function() {
                if (this.inf) return this;
                var e = this.y.redAdd(this.y);
                if (0 === e.cmpn(0)) return this.curve.point(null, null);
                var r = this.curve.a,
                    t = this.x.redSqr(),
                    n = e.redInvm(),
                    i = t.redAdd(t).redIAdd(t).redIAdd(r).redMul(n),
                    o = i.redSqr().redISub(this.x.redAdd(this.x)),
                    a = i.redMul(this.x.redSub(o)).redISub(this.y);
                return this.curve.point(o, a)
            }, N.prototype.getX = function() {
                return this.x.fromRed()
            }, N.prototype.getY = function() {
                return this.y.fromRed()
            }, N.prototype.mul = function(e) {
                return e = new(a())(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
            }, N.prototype.mulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
            }, N.prototype.jmulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
            }, N.prototype.eq = function(e) {
                return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
            }, N.prototype.neg = function(e) {
                if (this.inf) return this;
                var r = this.curve.point(this.x, this.y.redNeg());
                if (e && this.precomputed) {
                    var t = this.precomputed,
                        n = function(e) {
                            return e.neg()
                        };
                    r.precomputed = {
                        naf: t.naf && {
                            wnd: t.naf.wnd,
                            points: t.naf.points.map(n)
                        },
                        doubles: t.doubles && {
                            step: t.doubles.step,
                            points: t.doubles.points.map(n)
                        }
                    }
                }
                return r
            }, N.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }, E(R, y.BasePoint), A.prototype.jpoint = function(e, r, t) {
                return new R(this, e, r, t)
            }, R.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var e = this.z.redInvm(),
                    r = e.redSqr(),
                    t = this.x.redMul(r),
                    n = this.y.redMul(r).redMul(e);
                return this.curve.point(t, n)
            }, R.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }, R.prototype.add = function(e) {
                if (this.isInfinity()) return e;
                if (e.isInfinity()) return this;
                var r = e.z.redSqr(),
                    t = this.z.redSqr(),
                    n = this.x.redMul(r),
                    i = e.x.redMul(t),
                    o = this.y.redMul(r.redMul(e.z)),
                    a = e.y.redMul(t.redMul(this.z)),
                    s = n.redSub(i),
                    u = o.redSub(a);
                if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = s.redSqr(),
                    f = c.redMul(s),
                    l = n.redMul(c),
                    h = u.redSqr().redIAdd(f).redISub(l).redISub(l),
                    d = u.redMul(l.redISub(h)).redISub(o.redMul(f)),
                    p = this.z.redMul(e.z).redMul(s);
                return this.curve.jpoint(h, d, p)
            }, R.prototype.mixedAdd = function(e) {
                if (this.isInfinity()) return e.toJ();
                if (e.isInfinity()) return this;
                var r = this.z.redSqr(),
                    t = this.x,
                    n = e.x.redMul(r),
                    i = this.y,
                    o = e.y.redMul(r).redMul(this.z),
                    a = t.redSub(n),
                    s = i.redSub(o);
                if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = a.redSqr(),
                    c = u.redMul(a),
                    f = t.redMul(u),
                    l = s.redSqr().redIAdd(c).redISub(f).redISub(f),
                    h = s.redMul(f.redISub(l)).redISub(i.redMul(c)),
                    d = this.z.redMul(a);
                return this.curve.jpoint(l, h, d)
            }, R.prototype.dblp = function(e) {
                if (0 === e) return this;
                if (this.isInfinity()) return this;
                if (!e) return this.dbl();
                var r;
                if (this.curve.zeroA || this.curve.threeA) {
                    var t = this;
                    for (r = 0; r < e; r++) t = t.dbl();
                    return t
                }
                var n = this.curve.a,
                    i = this.curve.tinv,
                    o = this.x,
                    a = this.y,
                    s = this.z,
                    u = s.redSqr().redSqr(),
                    c = a.redAdd(a);
                for (r = 0; r < e; r++) {
                    var f = o.redSqr(),
                        l = c.redSqr(),
                        h = l.redSqr(),
                        d = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)),
                        p = o.redMul(l),
                        v = d.redSqr().redISub(p.redAdd(p)),
                        g = p.redISub(v),
                        m = d.redMul(g);
                    m = m.redIAdd(m).redISub(h);
                    var y = c.redMul(s);
                    r + 1 < e && (u = u.redMul(h)), o = v, s = y, c = m
                }
                return this.curve.jpoint(o, c.redMul(i), s)
            }, R.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }, R.prototype._zeroDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n),
                        u = s.redSqr().redISub(a).redISub(a),
                        c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), e = u, r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.x.redSqr(),
                        l = this.y.redSqr(),
                        h = l.redSqr(),
                        d = this.x.redAdd(l).redSqr().redISub(f).redISub(h);
                    d = d.redIAdd(d);
                    var p = f.redAdd(f).redIAdd(f),
                        v = p.redSqr(),
                        g = h.redIAdd(h);
                    g = (g = g.redIAdd(g)).redIAdd(g), e = v.redISub(d).redISub(d), r = p.redMul(d.redISub(e)).redISub(g), t = (t = this.y.redMul(this.z)).redIAdd(t)
                }
                return this.curve.jpoint(e, r, t)
            }, R.prototype._threeDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                        u = s.redSqr().redISub(a).redISub(a);
                    e = u;
                    var c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.z.redSqr(),
                        l = this.y.redSqr(),
                        h = this.x.redMul(l),
                        d = this.x.redSub(f).redMul(this.x.redAdd(f));
                    d = d.redAdd(d).redIAdd(d);
                    var p = h.redIAdd(h),
                        v = (p = p.redIAdd(p)).redAdd(p);
                    e = d.redSqr().redISub(v), t = this.y.redAdd(this.z).redSqr().redISub(l).redISub(f);
                    var g = l.redSqr();
                    g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), r = d.redMul(p.redISub(e)).redISub(g)
                }
                return this.curve.jpoint(e, r, t)
            }, R.prototype._dbl = function() {
                var e = this.curve.a,
                    r = this.x,
                    t = this.y,
                    n = this.z,
                    i = n.redSqr().redSqr(),
                    o = r.redSqr(),
                    a = t.redSqr(),
                    s = o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),
                    u = r.redAdd(r),
                    c = (u = u.redIAdd(u)).redMul(a),
                    f = s.redSqr().redISub(c.redAdd(c)),
                    l = c.redISub(f),
                    h = a.redSqr();
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = s.redMul(l).redISub(h),
                    p = t.redAdd(t).redMul(n);
                return this.curve.jpoint(f, d, p)
            }, R.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var e = this.x.redSqr(),
                    r = this.y.redSqr(),
                    t = this.z.redSqr(),
                    n = r.redSqr(),
                    i = e.redAdd(e).redIAdd(e),
                    o = i.redSqr(),
                    a = this.x.redAdd(r).redSqr().redISub(e).redISub(n),
                    s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),
                    u = n.redIAdd(n);
                u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
                    f = r.redMul(c);
                f = (f = f.redIAdd(f)).redIAdd(f);
                var l = this.x.redMul(s).redISub(f);
                l = (l = l.redIAdd(l)).redIAdd(l);
                var h = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = this.z.redAdd(a).redSqr().redISub(t).redISub(s);
                return this.curve.jpoint(l, h, d)
            }, R.prototype.mul = function(e, r) {
                return e = new(a())(e, r), this.curve._wnafMul(this, e)
            }, R.prototype.eq = function(e) {
                if ("affine" === e.type) return this.eq(e.toJ());
                if (this === e) return !0;
                var r = this.z.redSqr(),
                    t = e.z.redSqr();
                if (0 !== this.x.redMul(t).redISub(e.x.redMul(r)).cmpn(0)) return !1;
                var n = r.redMul(this.z),
                    i = t.redMul(e.z);
                return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)
            }, R.prototype.eqXToP = function(e) {
                var r = this.z.redSqr(),
                    t = e.toRed(this.curve.red).redMul(r);
                if (0 === this.x.cmp(t)) return !0;
                for (var n = e.clone(), i = this.curve.redN.redMul(r);;) {
                    if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                    if (t.redIAdd(i), 0 === this.x.cmp(t)) return !0
                }
            }, R.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }, R.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            };
            var x = c((function(e, r) {
                    var t = r;
                    t.base = y, t.short = k, t.mont = null, t.edwards = null
                })),
                I = c((function(e, r) {
                    var t, n = r,
                        i = d.assert;

                    function o(e) {
                        "short" === e.type ? this.curve = new x.short(e) : "edwards" === e.type ? this.curve = new x.edwards(e) : this.curve = new x.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                    }

                    function a(e, r) {
                        Object.defineProperty(n, e, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var t = new o(r);
                                return Object.defineProperty(n, e, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: t
                                }), t
                            }
                        })
                    }
                    n.PresetCurve = o, a("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }), a("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }), a("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }), a("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: u().sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }), a("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: u().sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }), a("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["9"]
                    }), a("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: u().sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                    try {
                        t = null.crash()
                    } catch (s) {
                        t = void 0
                    }
                    a("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: u().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [{
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        }, {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", t]
                    })
                }));

            function P(e) {
                if (!(this instanceof P)) return new P(e);
                this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var r = h.toArray(e.entropy, e.entropyEnc || "hex"),
                    t = h.toArray(e.nonce, e.nonceEnc || "hex"),
                    n = h.toArray(e.pers, e.persEnc || "hex");
                f(r.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(r, t, n)
            }
            var S = P;
            P.prototype._init = function(e, r, t) {
                var n = e.concat(r).concat(t);
                this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
            }, P.prototype._hmac = function() {
                return new(u().hmac)(this.hash, this.K)
            }, P.prototype._update = function(e) {
                var r = this._hmac().update(this.V).update([0]);
                e && (r = r.update(e)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest())
            }, P.prototype.reseed = function(e, r, t, n) {
                "string" !== typeof r && (n = t, t = r, r = null), e = h.toArray(e, r), t = h.toArray(t, n), f(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(t || [])), this._reseed = 1
            }, P.prototype.generate = function(e, r, t, n) {
                if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                "string" !== typeof r && (n = t, t = r, r = null), t && (t = h.toArray(t, n || "hex"), this._update(t));
                for (var i = []; i.length < e;) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                var o = i.slice(0, e);
                return this._update(t), this._reseed++, h.encode(o, r)
            };
            var _ = d.assert;

            function T(e, r) {
                this.ec = e, this.priv = null, this.pub = null, r.priv && this._importPrivate(r.priv, r.privEnc), r.pub && this._importPublic(r.pub, r.pubEnc)
            }
            var O = T;
            T.fromPublic = function(e, r, t) {
                return r instanceof T ? r : new T(e, {
                    pub: r,
                    pubEnc: t
                })
            }, T.fromPrivate = function(e, r, t) {
                return r instanceof T ? r : new T(e, {
                    priv: r,
                    privEnc: t
                })
            }, T.prototype.validate = function() {
                var e = this.getPublic();
                return e.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }, T.prototype.getPublic = function(e, r) {
                return "string" === typeof e && (r = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, e) : this.pub
            }, T.prototype.getPrivate = function(e) {
                return "hex" === e ? this.priv.toString(16, 2) : this.priv
            }, T.prototype._importPrivate = function(e, r) {
                this.priv = new(a())(e, r || 16), this.priv = this.priv.umod(this.ec.curve.n)
            }, T.prototype._importPublic = function(e, r) {
                if (e.x || e.y) return "mont" === this.ec.curve.type ? _(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || _(e.x && e.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(e.x, e.y));
                this.pub = this.ec.curve.decodePoint(e, r)
            }, T.prototype.derive = function(e) {
                return e.validate() || _(e.validate(), "public point not validated"), e.mul(this.priv).getX()
            }, T.prototype.sign = function(e, r, t) {
                return this.ec.sign(e, this, r, t)
            }, T.prototype.verify = function(e, r) {
                return this.ec.verify(e, r, this)
            }, T.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            };
            var C = d.assert;

            function U(e, r) {
                if (e instanceof U) return e;
                this._importDER(e, r) || (C(e.r && e.s, "Signature without r or s"), this.r = new(a())(e.r, 16), this.s = new(a())(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }
            var L = U;

            function F() {
                this.place = 0
            }

            function D(e, r) {
                var t = e[r.place++];
                if (!(128 & t)) return t;
                var n = 15 & t;
                if (0 === n || n > 4) return !1;
                for (var i = 0, o = 0, a = r.place; o < n; o++, a++) i <<= 8, i |= e[a], i >>>= 0;
                return !(i <= 127) && (r.place = a, i)
            }

            function M(e) {
                for (var r = 0, t = e.length - 1; !e[r] && !(128 & e[r + 1]) && r < t;) r++;
                return 0 === r ? e : e.slice(r)
            }

            function B(e, r) {
                if (r < 128) e.push(r);
                else {
                    var t = 1 + (Math.log(r) / Math.LN2 >>> 3);
                    for (e.push(128 | t); --t;) e.push(r >>> (t << 3) & 255);
                    e.push(r)
                }
            }
            U.prototype._importDER = function(e, r) {
                e = d.toArray(e, r);
                var t = new F;
                if (48 !== e[t.place++]) return !1;
                var n = D(e, t);
                if (!1 === n) return !1;
                if (n + t.place !== e.length) return !1;
                if (2 !== e[t.place++]) return !1;
                var i = D(e, t);
                if (!1 === i) return !1;
                var o = e.slice(t.place, i + t.place);
                if (t.place += i, 2 !== e[t.place++]) return !1;
                var s = D(e, t);
                if (!1 === s) return !1;
                if (e.length !== s + t.place) return !1;
                var u = e.slice(t.place, s + t.place);
                if (0 === o[0]) {
                    if (!(128 & o[1])) return !1;
                    o = o.slice(1)
                }
                if (0 === u[0]) {
                    if (!(128 & u[1])) return !1;
                    u = u.slice(1)
                }
                return this.r = new(a())(o), this.s = new(a())(u), this.recoveryParam = null, !0
            }, U.prototype.toDER = function(e) {
                var r = this.r.toArray(),
                    t = this.s.toArray();
                for (128 & r[0] && (r = [0].concat(r)), 128 & t[0] && (t = [0].concat(t)), r = M(r), t = M(t); !t[0] && !(128 & t[1]);) t = t.slice(1);
                var n = [2];
                B(n, r.length), (n = n.concat(r)).push(2), B(n, t.length);
                var i = n.concat(t),
                    o = [48];
                return B(o, i.length), o = o.concat(i), d.encode(o, e)
            };
            var G = function() {
                    throw new Error("unsupported")
                },
                Z = d.assert;

            function j(e) {
                if (!(this instanceof j)) return new j(e);
                "string" === typeof e && (Z(Object.prototype.hasOwnProperty.call(I, e), "Unknown curve " + e), e = I[e]), e instanceof I.PresetCurve && (e = {
                    curve: e
                }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash
            }
            var K = j;
            j.prototype.keyPair = function(e) {
                return new O(this, e)
            }, j.prototype.keyFromPrivate = function(e, r) {
                return O.fromPrivate(this, e, r)
            }, j.prototype.keyFromPublic = function(e, r) {
                return O.fromPublic(this, e, r)
            }, j.prototype.genKeyPair = function(e) {
                e || (e = {});
                for (var r = new S({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || G(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), t = this.n.byteLength(), n = this.n.sub(new(a())(2));;) {
                    var i = new(a())(r.generate(t));
                    if (!(i.cmp(n) > 0)) return i.iaddn(1), this.keyFromPrivate(i)
                }
            }, j.prototype._truncateToN = function(e, r) {
                var t = 8 * e.byteLength() - this.n.bitLength();
                return t > 0 && (e = e.ushrn(t)), !r && e.cmp(this.n) >= 0 ? e.sub(this.n) : e
            }, j.prototype.sign = function(e, r, t, n) {
                "object" === typeof t && (n = t, t = null), n || (n = {}), r = this.keyFromPrivate(r, t), e = this._truncateToN(new(a())(e, 16));
                for (var i = this.n.byteLength(), o = r.getPrivate().toArray("be", i), s = e.toArray("be", i), u = new S({
                        hash: this.hash,
                        entropy: o,
                        nonce: s,
                        pers: n.pers,
                        persEnc: n.persEnc || "utf8"
                    }), c = this.n.sub(new(a())(1)), f = 0;; f++) {
                    var l = n.k ? n.k(f) : new(a())(u.generate(this.n.byteLength()));
                    if (!((l = this._truncateToN(l, !0)).cmpn(1) <= 0 || l.cmp(c) >= 0)) {
                        var h = this.g.mul(l);
                        if (!h.isInfinity()) {
                            var d = h.getX(),
                                p = d.umod(this.n);
                            if (0 !== p.cmpn(0)) {
                                var v = l.invm(this.n).mul(p.mul(r.getPrivate()).iadd(e));
                                if (0 !== (v = v.umod(this.n)).cmpn(0)) {
                                    var g = (h.getY().isOdd() ? 1 : 0) | (0 !== d.cmp(p) ? 2 : 0);
                                    return n.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), g ^= 1), new L({
                                        r: p,
                                        s: v,
                                        recoveryParam: g
                                    })
                                }
                            }
                        }
                    }
                }
            }, j.prototype.verify = function(e, r, t, n) {
                e = this._truncateToN(new(a())(e, 16)), t = this.keyFromPublic(t, n);
                var i = (r = new L(r, "hex")).r,
                    o = r.s;
                if (i.cmpn(1) < 0 || i.cmp(this.n) >= 0) return !1;
                if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                var s, u = o.invm(this.n),
                    c = u.mul(e).umod(this.n),
                    f = u.mul(i).umod(this.n);
                return this.curve._maxwellTrick ? !(s = this.g.jmulAdd(c, t.getPublic(), f)).isInfinity() && s.eqXToP(i) : !(s = this.g.mulAdd(c, t.getPublic(), f)).isInfinity() && 0 === s.getX().umod(this.n).cmp(i)
            }, j.prototype.recoverPubKey = function(e, r, t, n) {
                Z((3 & t) === t, "The recovery param is more than two bits"), r = new L(r, n);
                var i = this.n,
                    o = new(a())(e),
                    s = r.r,
                    u = r.s,
                    c = 1 & t,
                    f = t >> 1;
                if (s.cmp(this.curve.p.umod(this.curve.n)) >= 0 && f) throw new Error("Unable to find sencond key candinate");
                s = f ? this.curve.pointFromX(s.add(this.curve.n), c) : this.curve.pointFromX(s, c);
                var l = r.r.invm(i),
                    h = i.sub(o).mul(l).umod(i),
                    d = u.mul(l).umod(i);
                return this.g.mulAdd(h, s, d)
            }, j.prototype.getKeyRecoveryParam = function(e, r, t, n) {
                if (null !== (r = new L(r, n)).recoveryParam) return r.recoveryParam;
                for (var i = 0; i < 4; i++) {
                    var o;
                    try {
                        o = this.recoverPubKey(e, r, i)
                    } catch (e) {
                        continue
                    }
                    if (o.eq(t)) return i
                }
                throw new Error("Unable to find valid recovery factor")
            };
            var z = c((function(e, r) {
                    var t = r;
                    t.version = "6.5.4", t.utils = d, t.rand = function() {
                        throw new Error("unsupported")
                    }, t.curve = x, t.curves = I, t.ec = K, t.eddsa = null
                })).ec,
                q = !1,
                H = !1,
                W = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                V = W.default,
                J = null;
            var X, Q, Y = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(X || (X = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(Q || (Q = {}));
            var $ = "0123456789abcdef",
                ee = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == W[t] && this.throwArgumentError("invalid log level name", "logLevel", e), V > W[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (H) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += $[r[o] >> 4], t += $[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (u) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case Q.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var s = r;
                                    switch (s) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + s;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case Q.CALL_EXCEPTION:
                                case Q.INSUFFICIENT_FUNDS:
                                case Q.MISSING_NEW:
                                case Q.NONCE_EXPIRED:
                                case Q.REPLACEMENT_UNDERPRICED:
                                case Q.TRANSACTION_REPLACED:
                                case Q.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var u = new Error(r);
                            return u.reason = o, u.code = t, Object.keys(n).forEach((function(e) {
                                u[e] = n[e]
                            })), u
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), Y && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: Y
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return J || (J = new e("logger/5.7.0")), J
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), q) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            H = !!r, q = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = W[r.toLowerCase()];
                            null != t ? V = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            ee.errors = Q, ee.levels = X;
            var re = new ee("bytes/5.7.0");

            function te(e) {
                return !!e.toHexString
            }

            function ne(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return ne(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function ie(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function oe(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!ie(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!ie(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function ae(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    re.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), ne(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), te(e) && (e = e.toHexString()), se(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : re.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return ne(new Uint8Array(i))
                }
                return oe(e) ? ne(new Uint8Array(e)) : re.throwArgumentError("invalid arrayify value", "value", e)
            }

            function se(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var ue = "0123456789abcdef";

            function ce(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    re.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = ue[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), te(e)) return e.toHexString();
                if (se(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : re.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (oe(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += ue[(240 & o) >> 4] + ue[15 & o]
                    }
                    return n
                }
                return re.throwArgumentError("invalid hexlify value", "value", e)
            }

            function fe(e, r) {
                for ("string" !== typeof e ? e = ce(e) : se(e) || re.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && re.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }

            function le(e) {
                var r, t = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (se(r = e) && !(r.length % 2) || oe(r)) {
                    var n = ae(e);
                    64 === n.length ? (t.v = 27 + (n[32] >> 7), n[32] &= 127, t.r = ce(n.slice(0, 32)), t.s = ce(n.slice(32, 64))) : 65 === n.length ? (t.r = ce(n.slice(0, 32)), t.s = ce(n.slice(32, 64)), t.v = n[64]) : re.throwArgumentError("invalid signature string", "signature", e), t.v < 27 && (0 === t.v || 1 === t.v ? t.v += 27 : re.throwArgumentError("signature invalid v byte", "signature", e)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (n[32] |= 128), t._vs = ce(n.slice(32, 64))
                } else {
                    if (t.r = e.r, t.s = e.s, t.v = e.v, t.recoveryParam = e.recoveryParam, t._vs = e._vs, null != t._vs) {
                        var i = function(e, r) {
                            (e = ae(e)).length > r && re.throwArgumentError("value out of range", "value", arguments[0]);
                            var t = new Uint8Array(r);
                            return t.set(e, r - e.length), ne(t)
                        }(ae(t._vs), 32);
                        t._vs = ce(i);
                        var o = i[0] >= 128 ? 1 : 0;
                        null == t.recoveryParam ? t.recoveryParam = o : t.recoveryParam !== o && re.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), i[0] &= 127;
                        var a = ce(i);
                        null == t.s ? t.s = a : t.s !== a && re.throwArgumentError("signature v mismatch _vs", "signature", e)
                    }
                    if (null == t.recoveryParam) null == t.v ? re.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === t.v || 1 === t.v ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;
                    else if (null == t.v) t.v = 27 + t.recoveryParam;
                    else {
                        var s = 0 === t.v || 1 === t.v ? t.v : 1 - t.v % 2;
                        t.recoveryParam !== s && re.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                    }
                    null != t.r && se(t.r) ? t.r = fe(t.r, 32) : re.throwArgumentError("signature missing or invalid r", "signature", e), null != t.s && se(t.s) ? t.s = fe(t.s, 32) : re.throwArgumentError("signature missing or invalid s", "signature", e);
                    var u = ae(t.s);
                    u[0] >= 128 && re.throwArgumentError("signature s out of range", "signature", e), t.recoveryParam && (u[0] |= 128);
                    var c = ce(u);
                    t._vs && (se(t._vs) || re.throwArgumentError("signature invalid _vs", "signature", e), t._vs = fe(t._vs, 32)), null == t._vs ? t._vs = c : t._vs !== c && re.throwArgumentError("signature _vs mismatch v and s", "signature", e)
                }
                return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t
            }
            new ee("properties/5.7.0");

            function he(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            var de = new ee("signing-key/5.6.2"),
                pe = null;

            function ve() {
                return pe || (pe = new z("secp256k1")), pe
            }
            var ge = function() {
                function e(r) {
                    (0, n.Z)(this, e), he(this, "curve", "secp256k1"), he(this, "privateKey", ce(r)), 32 !== function(e) {
                        if ("string" !== typeof e) e = ce(e);
                        else if (!se(e) || e.length % 2) return null;
                        return (e.length - 2) / 2
                    }(this.privateKey) && de.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                    var t = ve().keyFromPrivate(ae(this.privateKey));
                    he(this, "publicKey", "0x" + t.getPublic(!1, "hex")), he(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), he(this, "_isSigningKey", !0)
                }
                return (0, i.Z)(e, [{
                    key: "_addPoint",
                    value: function(e) {
                        var r = ve().keyFromPublic(ae(this.publicKey)),
                            t = ve().keyFromPublic(ae(e));
                        return "0x" + r.pub.add(t.pub).encodeCompressed("hex")
                    }
                }, {
                    key: "signDigest",
                    value: function(e) {
                        var r = ve().keyFromPrivate(ae(this.privateKey)),
                            t = ae(e);
                        32 !== t.length && de.throwArgumentError("bad digest length", "digest", e);
                        var n = r.sign(t, {
                            canonical: !0
                        });
                        return le({
                            recoveryParam: n.recoveryParam,
                            r: fe("0x" + n.r.toString(16), 32),
                            s: fe("0x" + n.s.toString(16), 32)
                        })
                    }
                }, {
                    key: "computeSharedSecret",
                    value: function(e) {
                        var r = ve().keyFromPrivate(ae(this.privateKey)),
                            t = ve().keyFromPublic(ae(ye(e)));
                        return fe("0x" + r.derive(t.getPublic()).toString(16), 32)
                    }
                }], [{
                    key: "isSigningKey",
                    value: function(e) {
                        return !(!e || !e._isSigningKey)
                    }
                }]), e
            }();

            function me(e, r) {
                var t = le(r),
                    n = {
                        r: ae(t.r),
                        s: ae(t.s)
                    };
                return "0x" + ve().recoverPubKey(ae(e), n, t.recoveryParam).encode("hex", !1)
            }

            function ye(e, r) {
                var t = ae(e);
                if (32 === t.length) {
                    var n = new ge(t);
                    return r ? "0x" + ve().keyFromPrivate(t).getPublic(!0, "hex") : n.publicKey
                }
                return 33 === t.length ? r ? ce(t) : "0x" + ve().keyFromPublic(t).getPublic(!1, "hex") : 65 === t.length ? r ? "0x" + ve().keyFromPublic(t).getPublic(!0, "hex") : ce(t) : de.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
        },
        85742: function(e, r, t) {
            "use strict";
            t.d(r, {
                s: function() {
                    return a
                },
                F: function() {
                    return s
                }
            });
            var n = "0x0000000000000000000000000000000000000000000000000000000000000000",
                i = t(69939),
                o = t(72338);

            function a(e) {
                var r = (0, o.Y0)(e);
                if (r.length > 31) throw new Error("bytes32 string must be less than 32 bytes");
                return (0, i.Dv)((0, i.zo)([r, n]).slice(0, 32))
            }

            function s(e) {
                var r = (0, i.lE)(e);
                if (32 !== r.length) throw new Error("invalid bytes32 - not 32 bytes long");
                if (0 !== r[31]) throw new Error("invalid bytes32 string - no null terminator");
                for (var t = 31; 0 === r[t - 1];) t--;
                return (0, o.ZN)(r.slice(0, t))
            }
        },
        33088: function(e, r, t) {
            "use strict";
            t.d(r, {
                Ll: function() {
                    return p
                }
            });
            var n = t(72338);

            function i(e, r) {
                r || (r = function(e) {
                    return [parseInt(e, 16)]
                });
                var t = 0,
                    n = {};
                return e.split(",").forEach((function(e) {
                    var i = e.split(":");
                    t += parseInt(i[0], 16), n[t] = r(i[1])
                })), n
            }

            function o(e) {
                var r = 0;
                return e.split(",").map((function(e) {
                    var t = e.split("-");
                    return 1 === t.length ? t[1] = "0" : "" === t[1] && (t[1] = "1"), {
                        l: r + parseInt(t[0], 16),
                        h: r = parseInt(t[1], 16)
                    }
                }))
            }

            function a(e, r) {
                for (var t = 0, n = 0; n < r.length; n++) {
                    var i = r[n];
                    if (e >= (t += i.l) && e <= t + i.h && (e - t) % (i.d || 1) === 0) {
                        if (i.e && -1 !== i.e.indexOf(e - t)) continue;
                        return i
                    }
                }
                return null
            }
            var s = o("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),
                u = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((function(e) {
                    return parseInt(e, 16)
                })),
                c = [{
                    h: 25,
                    s: 32,
                    l: 65
                }, {
                    h: 30,
                    s: 32,
                    e: [23],
                    l: 127
                }, {
                    h: 54,
                    s: 1,
                    e: [48],
                    l: 64,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 57,
                    d: 2
                }, {
                    h: 44,
                    s: 1,
                    l: 17,
                    d: 2
                }, {
                    h: 10,
                    s: 1,
                    e: [2, 6, 8],
                    l: 61,
                    d: 2
                }, {
                    h: 16,
                    s: 1,
                    l: 68,
                    d: 2
                }, {
                    h: 84,
                    s: 1,
                    e: [18, 24, 66],
                    l: 19,
                    d: 2
                }, {
                    h: 26,
                    s: 32,
                    e: [17],
                    l: 435
                }, {
                    h: 22,
                    s: 1,
                    l: 71,
                    d: 2
                }, {
                    h: 15,
                    s: 80,
                    l: 40
                }, {
                    h: 31,
                    s: 32,
                    l: 16
                }, {
                    h: 32,
                    s: 1,
                    l: 80,
                    d: 2
                }, {
                    h: 52,
                    s: 1,
                    l: 42,
                    d: 2
                }, {
                    h: 12,
                    s: 1,
                    l: 55,
                    d: 2
                }, {
                    h: 40,
                    s: 1,
                    e: [38],
                    l: 15,
                    d: 2
                }, {
                    h: 14,
                    s: 1,
                    l: 48,
                    d: 2
                }, {
                    h: 37,
                    s: 48,
                    l: 49
                }, {
                    h: 148,
                    s: 1,
                    l: 6351,
                    d: 2
                }, {
                    h: 88,
                    s: 1,
                    l: 160,
                    d: 2
                }, {
                    h: 15,
                    s: 16,
                    l: 704
                }, {
                    h: 25,
                    s: 26,
                    l: 854
                }, {
                    h: 25,
                    s: 32,
                    l: 55915
                }, {
                    h: 37,
                    s: 40,
                    l: 1247
                }, {
                    h: 25,
                    s: -119711,
                    l: 53248
                }, {
                    h: 25,
                    s: -119763,
                    l: 52
                }, {
                    h: 25,
                    s: -119815,
                    l: 52
                }, {
                    h: 25,
                    s: -119867,
                    e: [1, 4, 5, 7, 8, 11, 12, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -119919,
                    l: 52
                }, {
                    h: 24,
                    s: -119971,
                    e: [2, 7, 8, 17],
                    l: 52
                }, {
                    h: 24,
                    s: -120023,
                    e: [2, 7, 13, 15, 16, 17],
                    l: 52
                }, {
                    h: 25,
                    s: -120075,
                    l: 52
                }, {
                    h: 25,
                    s: -120127,
                    l: 52
                }, {
                    h: 25,
                    s: -120179,
                    l: 52
                }, {
                    h: 25,
                    s: -120231,
                    l: 52
                }, {
                    h: 25,
                    s: -120283,
                    l: 52
                }, {
                    h: 25,
                    s: -120335,
                    l: 52
                }, {
                    h: 24,
                    s: -119543,
                    e: [17],
                    l: 56
                }, {
                    h: 24,
                    s: -119601,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119659,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119717,
                    e: [17],
                    l: 58
                }, {
                    h: 24,
                    s: -119775,
                    e: [17],
                    l: 58
                }],
                f = i("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),
                l = i("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),
                h = i("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", (function(e) {
                    if (e.length % 4 !== 0) throw new Error("bad data");
                    for (var r = [], t = 0; t < e.length; t += 4) r.push(parseInt(e.substring(t, t + 4), 16));
                    return r
                })),
                d = o("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

            function p(e) {
                if (e.match(/^[a-z0-9-]*$/i) && e.length <= 59) return e.toLowerCase();
                var r, t = (0, n.XL)(e);
                r = t.map((function(e) {
                    if (u.indexOf(e) >= 0) return [];
                    if (e >= 65024 && e <= 65039) return [];
                    var r = function(e) {
                        var r = a(e, c);
                        if (r) return [e + r.s];
                        var t = f[e];
                        if (t) return t;
                        var n = l[e];
                        return n ? [e + n[0]] : h[e] || null
                    }(e);
                    return r || [e]
                })), t = r.reduce((function(e, r) {
                    return r.forEach((function(r) {
                        e.push(r)
                    })), e
                }), []), (t = (0, n.XL)((0, n.uu)(t), n.Uj.NFKC)).forEach((function(e) {
                    if (a(e, d)) throw new Error("STRINGPREP_CONTAINS_PROHIBITED")
                })), t.forEach((function(e) {
                    if (a(e, s)) throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")
                }));
                var i = (0, n.uu)(t);
                if ("-" === i.substring(0, 1) || "--" === i.substring(2, 4) || "-" === i.substring(i.length - 1)) throw new Error("invalid hyphen");
                if (i.length > 63) throw new Error("too long");
                return i
            }
        },
        99513: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                UnicodeNormalizationForm: function() {
                    return o.Uj
                },
                Utf8ErrorFuncs: function() {
                    return o.te
                },
                Utf8ErrorReason: function() {
                    return o.Uw
                },
                _toEscapedUtf8String: function() {
                    return o.U$
                },
                formatBytes32String: function() {
                    return n.s
                },
                nameprep: function() {
                    return i.Ll
                },
                parseBytes32String: function() {
                    return n.F
                },
                toUtf8Bytes: function() {
                    return o.Y0
                },
                toUtf8CodePoints: function() {
                    return o.XL
                },
                toUtf8String: function() {
                    return o.ZN
                }
            });
            var n = t(85742),
                i = t(33088),
                o = t(72338)
        },
        72338: function(e, r, t) {
            "use strict";
            t.d(r, {
                Uj: function() {
                    return n
                },
                te: function() {
                    return u
                },
                Uw: function() {
                    return i
                },
                U$: function() {
                    return h
                },
                uu: function() {
                    return d
                },
                Y0: function() {
                    return f
                },
                XL: function() {
                    return v
                },
                ZN: function() {
                    return p
                }
            });
            var n, i, o = t(69939),
                a = new(t(35133).Yd)("strings/5.6.1");

            function s(e, r, t, n, o) {
                if (e === i.BAD_PREFIX || e === i.UNEXPECTED_CONTINUE) {
                    for (var a = 0, s = r + 1; s < t.length && t[s] >> 6 === 2; s++) a++;
                    return a
                }
                return e === i.OVERRUN ? t.length - r - 1 : 0
            }! function(e) {
                e.current = "", e.NFC = "NFC", e.NFD = "NFD", e.NFKC = "NFKC", e.NFKD = "NFKD"
            }(n || (n = {})),
            function(e) {
                e.UNEXPECTED_CONTINUE = "unexpected continuation byte", e.BAD_PREFIX = "bad codepoint prefix", e.OVERRUN = "string overrun", e.MISSING_CONTINUE = "missing continuation byte", e.OUT_OF_RANGE = "out of UTF-8 range", e.UTF16_SURROGATE = "UTF-16 surrogate", e.OVERLONG = "overlong representation"
            }(i || (i = {}));
            var u = Object.freeze({
                error: function(e, r, t, n, i) {
                    return a.throwArgumentError("invalid codepoint at offset ".concat(r, "; ").concat(e), "bytes", t)
                },
                ignore: s,
                replace: function(e, r, t, n, o) {
                    return e === i.OVERLONG ? (n.push(o), 0) : (n.push(65533), s(e, r, t))
                }
            });

            function c(e, r) {
                null == r && (r = u.error), e = (0, o.lE)(e);
                for (var t = [], n = 0; n < e.length;) {
                    var a = e[n++];
                    if (a >> 7 !== 0) {
                        var s = null,
                            c = null;
                        if (192 === (224 & a)) s = 1, c = 127;
                        else if (224 === (240 & a)) s = 2, c = 2047;
                        else {
                            if (240 !== (248 & a)) {
                                n += r(128 === (192 & a) ? i.UNEXPECTED_CONTINUE : i.BAD_PREFIX, n - 1, e, t);
                                continue
                            }
                            s = 3, c = 65535
                        }
                        if (n - 1 + s >= e.length) n += r(i.OVERRUN, n - 1, e, t);
                        else {
                            for (var f = a & (1 << 8 - s - 1) - 1, l = 0; l < s; l++) {
                                var h = e[n];
                                if (128 != (192 & h)) {
                                    n += r(i.MISSING_CONTINUE, n, e, t), f = null;
                                    break
                                }
                                f = f << 6 | 63 & h, n++
                            }
                            null !== f && (f > 1114111 ? n += r(i.OUT_OF_RANGE, n - 1 - s, e, t, f) : f >= 55296 && f <= 57343 ? n += r(i.UTF16_SURROGATE, n - 1 - s, e, t, f) : f <= c ? n += r(i.OVERLONG, n - 1 - s, e, t, f) : t.push(f))
                        }
                    } else t.push(a)
                }
                return t
            }

            function f(e) {
                var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current;
                r != n.current && (a.checkNormalize(), e = e.normalize(r));
                for (var t = [], i = 0; i < e.length; i++) {
                    var s = e.charCodeAt(i);
                    if (s < 128) t.push(s);
                    else if (s < 2048) t.push(s >> 6 | 192), t.push(63 & s | 128);
                    else if (55296 == (64512 & s)) {
                        i++;
                        var u = e.charCodeAt(i);
                        if (i >= e.length || 56320 !== (64512 & u)) throw new Error("invalid utf-8 string");
                        var c = 65536 + ((1023 & s) << 10) + (1023 & u);
                        t.push(c >> 18 | 240), t.push(c >> 12 & 63 | 128), t.push(c >> 6 & 63 | 128), t.push(63 & c | 128)
                    } else t.push(s >> 12 | 224), t.push(s >> 6 & 63 | 128), t.push(63 & s | 128)
                }
                return (0, o.lE)(t)
            }

            function l(e) {
                var r = "0000" + e.toString(16);
                return "\\u" + r.substring(r.length - 4)
            }

            function h(e, r) {
                return '"' + c(e, r).map((function(e) {
                    if (e < 256) {
                        switch (e) {
                            case 8:
                                return "\\b";
                            case 9:
                                return "\\t";
                            case 10:
                                return "\\n";
                            case 13:
                                return "\\r";
                            case 34:
                                return '\\"';
                            case 92:
                                return "\\\\"
                        }
                        if (e >= 32 && e < 127) return String.fromCharCode(e)
                    }
                    return e <= 65535 ? l(e) : l(55296 + ((e -= 65536) >> 10 & 1023)) + l(56320 + (1023 & e))
                })).join("") + '"'
            }

            function d(e) {
                return e.map((function(e) {
                    return e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode(55296 + (e >> 10 & 1023), 56320 + (1023 & e)))
                })).join("")
            }

            function p(e, r) {
                return d(c(e, r))
            }

            function v(e) {
                return c(f(e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.current))
            }
        },
        69939: function(e, r, t) {
            "use strict";
            t.d(r, {
                lE: function() {
                    return u
                },
                zo: function() {
                    return c
                },
                Dv: function() {
                    return h
                }
            });
            var n = new(t(35133).Yd)("bytes/5.7.0");

            function i(e) {
                return !!e.toHexString
            }

            function o(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return o(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function a(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function s(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!a(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!a(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function u(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), o(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e) && (e = e.toHexString()), f(e)) {
                    var a = e.substring(2);
                    a.length % 2 && ("left" === r.hexPad ? a = "0" + a : "right" === r.hexPad ? a += "0" : n.throwArgumentError("hex data is odd-length", "value", e));
                    for (var u = [], c = 0; c < a.length; c += 2) u.push(parseInt(a.substring(c, c + 2), 16));
                    return o(new Uint8Array(u))
                }
                return s(e) ? o(new Uint8Array(e)) : n.throwArgumentError("invalid arrayify value", "value", e)
            }

            function c(e) {
                var r = e.map((function(e) {
                        return u(e)
                    })),
                    t = r.reduce((function(e, r) {
                        return e + r.length
                    }), 0),
                    n = new Uint8Array(t);
                return r.reduce((function(e, r) {
                    return n.set(r, e), e + r.length
                }), 0), o(n)
            }

            function f(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var l = "0123456789abcdef";

            function h(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    n.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = l[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), i(e)) return e.toHexString();
                if (f(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : n.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (s(e)) {
                    for (var o = "0x", a = 0; a < e.length; a++) {
                        var u = e[a];
                        o += l[(240 & u) >> 4] + l[15 & u]
                    }
                    return o
                }
                return n.throwArgumentError("invalid hexlify value", "value", e)
            }
        },
        35133: function(e, r, t) {
            "use strict";
            t.d(r, {
                Yd: function() {
                    return p
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f
        },
        54741: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                TransactionTypes: function() {
                    return rr
                },
                accessListify: function() {
                    return lr
                },
                computeAddress: function() {
                    return sr
                },
                parse: function() {
                    return yr
                },
                recoverAddress: function() {
                    return ur
                },
                serialize: function() {
                    return gr
                }
            });
            var n = t(27853),
                i = t(84531),
                o = !1,
                a = !1,
                s = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                u = s.default,
                c = null;
            var f, l, h = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(f || (f = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(l || (l = {}));
            var d = "0123456789abcdef",
                p = function() {
                    function e(r) {
                        (0, n.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, i.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == s[t] && this.throwArgumentError("invalid log level name", "logLevel", e), u > s[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (a) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += d[r[o] >> 4], t += d[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                s = "";
                            switch (t) {
                                case l.NUMERIC_FAULT:
                                    s = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result"
                                    }
                                    break;
                                case l.CALL_EXCEPTION:
                                case l.INSUFFICIENT_FUNDS:
                                case l.MISSING_NEW:
                                case l.NONCE_EXPIRED:
                                case l.REPLACEMENT_UNDERPRICED:
                                case l.TRANSACTION_REPLACED:
                                case l.UNPREDICTABLE_GAS_LIMIT:
                                    s = t
                            }
                            s && (r += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), h && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: h
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return c || (c = new e("logger/5.7.0")), c
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), o) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            a = !!r, o = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = s[r.toLowerCase()];
                            null != t ? u = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            p.errors = l, p.levels = f;
            var v = new p("bytes/5.7.0");

            function g(e) {
                return !!e.toHexString
            }

            function m(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return m(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function y(e) {
                return k(e) && !(e.length % 2) || E(e)
            }

            function b(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function E(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!b(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!b(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function w(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), m(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e) && (e = e.toHexString()), k(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : v.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return m(new Uint8Array(i))
                }
                return E(e) ? m(new Uint8Array(e)) : v.throwArgumentError("invalid arrayify value", "value", e)
            }

            function A(e) {
                var r = w(e);
                if (0 === r.length) return r;
                for (var t = 0; t < r.length && 0 === r[t];) t++;
                return t && (r = r.slice(t)), r
            }

            function k(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var N = "0123456789abcdef";

            function R(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    v.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = N[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), g(e)) return e.toHexString();
                if (k(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : v.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (E(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += N[(240 & o) >> 4] + N[15 & o]
                    }
                    return n
                }
                return v.throwArgumentError("invalid hexlify value", "value", e)
            }

            function x(e) {
                if ("string" !== typeof e) e = R(e);
                else if (!k(e) || e.length % 2) return null;
                return (e.length - 2) / 2
            }

            function I(e, r, t) {
                return "string" !== typeof e ? e = R(e) : (!k(e) || e.length % 2) && v.throwArgumentError("invalid hexData", "value", e), r = 2 + 2 * r, null != t ? "0x" + e.substring(r, 2 + 2 * t) : "0x" + e.substring(r)
            }

            function P(e) {
                var r = "0x";
                return e.forEach((function(e) {
                    r += R(e).substring(2)
                })), r
            }

            function S(e, r) {
                for ("string" !== typeof e ? e = R(e) : k(e) || v.throwArgumentError("invalid hex string", "value", e), e.length > 2 * r + 2 && v.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * r + 2;) e = "0x0" + e.substring(2);
                return e
            }

            function _(e) {
                var r = {
                    r: "0x",
                    s: "0x",
                    _vs: "0x",
                    recoveryParam: 0,
                    v: 0,
                    yParityAndS: "0x",
                    compact: "0x"
                };
                if (y(e)) {
                    var t = w(e);
                    64 === t.length ? (r.v = 27 + (t[32] >> 7), t[32] &= 127, r.r = R(t.slice(0, 32)), r.s = R(t.slice(32, 64))) : 65 === t.length ? (r.r = R(t.slice(0, 32)), r.s = R(t.slice(32, 64)), r.v = t[64]) : v.throwArgumentError("invalid signature string", "signature", e), r.v < 27 && (0 === r.v || 1 === r.v ? r.v += 27 : v.throwArgumentError("signature invalid v byte", "signature", e)), r.recoveryParam = 1 - r.v % 2, r.recoveryParam && (t[32] |= 128), r._vs = R(t.slice(32, 64))
                } else {
                    if (r.r = e.r, r.s = e.s, r.v = e.v, r.recoveryParam = e.recoveryParam, r._vs = e._vs, null != r._vs) {
                        var n = function(e, r) {
                            (e = w(e)).length > r && v.throwArgumentError("value out of range", "value", arguments[0]);
                            var t = new Uint8Array(r);
                            return t.set(e, r - e.length), m(t)
                        }(w(r._vs), 32);
                        r._vs = R(n);
                        var i = n[0] >= 128 ? 1 : 0;
                        null == r.recoveryParam ? r.recoveryParam = i : r.recoveryParam !== i && v.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), n[0] &= 127;
                        var o = R(n);
                        null == r.s ? r.s = o : r.s !== o && v.throwArgumentError("signature v mismatch _vs", "signature", e)
                    }
                    if (null == r.recoveryParam) null == r.v ? v.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === r.v || 1 === r.v ? r.recoveryParam = r.v : r.recoveryParam = 1 - r.v % 2;
                    else if (null == r.v) r.v = 27 + r.recoveryParam;
                    else {
                        var a = 0 === r.v || 1 === r.v ? r.v : 1 - r.v % 2;
                        r.recoveryParam !== a && v.throwArgumentError("signature recoveryParam mismatch v", "signature", e)
                    }
                    null != r.r && k(r.r) ? r.r = S(r.r, 32) : v.throwArgumentError("signature missing or invalid r", "signature", e), null != r.s && k(r.s) ? r.s = S(r.s, 32) : v.throwArgumentError("signature missing or invalid s", "signature", e);
                    var s = w(r.s);
                    s[0] >= 128 && v.throwArgumentError("signature s out of range", "signature", e), r.recoveryParam && (s[0] |= 128);
                    var u = R(s);
                    r._vs && (k(r._vs) || v.throwArgumentError("signature invalid _vs", "signature", e), r._vs = S(r._vs, 32)), null == r._vs ? r._vs = u : r._vs !== u && v.throwArgumentError("signature _vs mismatch v and s", "signature", e)
                }
                return r.yParityAndS = r._vs, r.compact = r.r + r.yParityAndS.substring(2), r
            }
            var T = t(27239),
                O = t.n(T),
                C = O().BN,
                U = new p("bignumber/5.7.0"),
                L = {},
                F = 9007199254740991;
            var D = !1,
                M = function() {
                    function e(r, t) {
                        (0, n.Z)(this, e), r !== L && U.throwError("cannot call constructor directly; use BigNumber.from", p.errors.UNSUPPORTED_OPERATION, {
                            operation: "new (BigNumber)"
                        }), this._hex = t, this._isBigNumber = !0, Object.freeze(this)
                    }
                    return (0, i.Z)(e, [{
                        key: "fromTwos",
                        value: function(e) {
                            return G(Z(this).fromTwos(e))
                        }
                    }, {
                        key: "toTwos",
                        value: function(e) {
                            return G(Z(this).toTwos(e))
                        }
                    }, {
                        key: "abs",
                        value: function() {
                            return "-" === this._hex[0] ? e.from(this._hex.substring(1)) : this
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            return G(Z(this).add(Z(e)))
                        }
                    }, {
                        key: "sub",
                        value: function(e) {
                            return G(Z(this).sub(Z(e)))
                        }
                    }, {
                        key: "div",
                        value: function(r) {
                            return e.from(r).isZero() && j("division-by-zero", "div"), G(Z(this).div(Z(r)))
                        }
                    }, {
                        key: "mul",
                        value: function(e) {
                            return G(Z(this).mul(Z(e)))
                        }
                    }, {
                        key: "mod",
                        value: function(e) {
                            var r = Z(e);
                            return r.isNeg() && j("division-by-zero", "mod"), G(Z(this).umod(r))
                        }
                    }, {
                        key: "pow",
                        value: function(e) {
                            var r = Z(e);
                            return r.isNeg() && j("negative-power", "pow"), G(Z(this).pow(r))
                        }
                    }, {
                        key: "and",
                        value: function(e) {
                            var r = Z(e);
                            return (this.isNegative() || r.isNeg()) && j("unbound-bitwise-result", "and"), G(Z(this).and(r))
                        }
                    }, {
                        key: "or",
                        value: function(e) {
                            var r = Z(e);
                            return (this.isNegative() || r.isNeg()) && j("unbound-bitwise-result", "or"), G(Z(this).or(r))
                        }
                    }, {
                        key: "xor",
                        value: function(e) {
                            var r = Z(e);
                            return (this.isNegative() || r.isNeg()) && j("unbound-bitwise-result", "xor"), G(Z(this).xor(r))
                        }
                    }, {
                        key: "mask",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && j("negative-width", "mask"), G(Z(this).maskn(e))
                        }
                    }, {
                        key: "shl",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && j("negative-width", "shl"), G(Z(this).shln(e))
                        }
                    }, {
                        key: "shr",
                        value: function(e) {
                            return (this.isNegative() || e < 0) && j("negative-width", "shr"), G(Z(this).shrn(e))
                        }
                    }, {
                        key: "eq",
                        value: function(e) {
                            return Z(this).eq(Z(e))
                        }
                    }, {
                        key: "lt",
                        value: function(e) {
                            return Z(this).lt(Z(e))
                        }
                    }, {
                        key: "lte",
                        value: function(e) {
                            return Z(this).lte(Z(e))
                        }
                    }, {
                        key: "gt",
                        value: function(e) {
                            return Z(this).gt(Z(e))
                        }
                    }, {
                        key: "gte",
                        value: function(e) {
                            return Z(this).gte(Z(e))
                        }
                    }, {
                        key: "isNegative",
                        value: function() {
                            return "-" === this._hex[0]
                        }
                    }, {
                        key: "isZero",
                        value: function() {
                            return Z(this).isZero()
                        }
                    }, {
                        key: "toNumber",
                        value: function() {
                            try {
                                return Z(this).toNumber()
                            } catch (e) {
                                j("overflow", "toNumber", this.toString())
                            }
                            return null
                        }
                    }, {
                        key: "toBigInt",
                        value: function() {
                            try {
                                return BigInt(this.toString())
                            } catch (e) {}
                            return U.throwError("this platform does not support BigInt", p.errors.UNSUPPORTED_OPERATION, {
                                value: this.toString()
                            })
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return arguments.length > 0 && (10 === arguments[0] ? D || (D = !0, U.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? U.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", p.errors.UNEXPECTED_ARGUMENT, {}) : U.throwError("BigNumber.toString does not accept parameters", p.errors.UNEXPECTED_ARGUMENT, {})), Z(this).toString(10)
                        }
                    }, {
                        key: "toHexString",
                        value: function() {
                            return this._hex
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            return {
                                type: "BigNumber",
                                hex: this.toHexString()
                            }
                        }
                    }], [{
                        key: "from",
                        value: function(r) {
                            if (r instanceof e) return r;
                            if ("string" === typeof r) return r.match(/^-?0x[0-9a-f]+$/i) ? new e(L, B(r)) : r.match(/^-?[0-9]+$/) ? new e(L, B(new C(r))) : U.throwArgumentError("invalid BigNumber string", "value", r);
                            if ("number" === typeof r) return r % 1 && j("underflow", "BigNumber.from", r), (r >= F || r <= -F) && j("overflow", "BigNumber.from", r), e.from(String(r));
                            var t = r;
                            if ("bigint" === typeof t) return e.from(t.toString());
                            if (E(t)) return e.from(R(t));
                            if (t)
                                if (t.toHexString) {
                                    var n = t.toHexString();
                                    if ("string" === typeof n) return e.from(n)
                                } else {
                                    var i = t._hex;
                                    if (null == i && "BigNumber" === t.type && (i = t.hex), "string" === typeof i && (k(i) || "-" === i[0] && k(i.substring(1)))) return e.from(i)
                                }
                            return U.throwArgumentError("invalid BigNumber value", "value", r)
                        }
                    }, {
                        key: "isBigNumber",
                        value: function(e) {
                            return !(!e || !e._isBigNumber)
                        }
                    }]), e
                }();

            function B(e) {
                if ("string" !== typeof e) return B(e.toString(16));
                if ("-" === e[0]) return "-" === (e = e.substring(1))[0] && U.throwArgumentError("invalid hex", "value", e), "0x00" === (e = B(e)) ? e : "-" + e;
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e), "0x" === e) return "0x00";
                for (e.length % 2 && (e = "0x0" + e.substring(2)); e.length > 4 && "0x00" === e.substring(0, 4);) e = "0x" + e.substring(4);
                return e
            }

            function G(e) {
                return M.from(B(e))
            }

            function Z(e) {
                var r = M.from(e).toHexString();
                return "-" === r[0] ? new C("-" + r.substring(3), 16) : new C(r.substring(2), 16)
            }

            function j(e, r, t) {
                var n = {
                    fault: e,
                    operation: r
                };
                return null != t && (n.value = t), U.throwError(e, p.errors.NUMERIC_FAULT, n)
            }
            var K = t(3425),
                z = t.n(K);

            function q(e) {
                return "0x" + z().keccak_256(w(e))
            }
            var H = new p("address/5.7.0");

            function W(e) {
                k(e, 20) || H.throwArgumentError("invalid address", "address", e);
                for (var r = (e = e.toLowerCase()).substring(2).split(""), t = new Uint8Array(40), n = 0; n < 40; n++) t[n] = r[n].charCodeAt(0);
                for (var i = w(q(t)), o = 0; o < 40; o += 2) i[o >> 1] >> 4 >= 8 && (r[o] = r[o].toUpperCase()), (15 & i[o >> 1]) >= 8 && (r[o + 1] = r[o + 1].toUpperCase());
                return "0x" + r.join("")
            }
            for (var V = {}, J = 0; J < 10; J++) V[String(J)] = String(J);
            for (var X = 0; X < 26; X++) V[String.fromCharCode(65 + X)] = String(10 + X);
            var Q, Y = Math.floor((Q = 9007199254740991, Math.log10 ? Math.log10(Q) : Math.log(Q) / Math.LN10));

            function $(e) {
                for (var r = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map((function(e) {
                        return V[e]
                    })).join(""); r.length >= Y;) {
                    var t = r.substring(0, Y);
                    r = parseInt(t, 10) % 97 + r.substring(t.length)
                }
                for (var n = String(98 - parseInt(r, 10) % 97); n.length < 2;) n = "0" + n;
                return n
            }

            function ee(e) {
                var r, t = null;
                if ("string" !== typeof e && H.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), t = W(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && H.throwArgumentError("bad address checksum", "address", e);
                else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                    for (e.substring(2, 4) !== $(e) && H.throwArgumentError("bad icap checksum", "address", e), r = e.substring(4), t = new C(r, 36).toString(16); t.length < 40;) t = "0" + t;
                    t = W("0x" + t)
                } else H.throwArgumentError("invalid address", "address", e);
                return t
            }
            var re = M.from(0),
                te = new p("properties/5.7.0");

            function ne(e, r, t) {
                Object.defineProperty(e, r, {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            var ie = new p("rlp/5.7.0");

            function oe(e) {
                for (var r = []; e;) r.unshift(255 & e), e >>= 8;
                return r
            }

            function ae(e, r, t) {
                for (var n = 0, i = 0; i < t; i++) n = 256 * n + e[r + i];
                return n
            }

            function se(e) {
                if (Array.isArray(e)) {
                    var r = [];
                    if (e.forEach((function(e) {
                            r = r.concat(se(e))
                        })), r.length <= 55) return r.unshift(192 + r.length), r;
                    var t = oe(r.length);
                    return t.unshift(247 + t.length), t.concat(r)
                }
                y(e) || ie.throwArgumentError("RLP object must be BytesLike", "object", e);
                var n = Array.prototype.slice.call(w(e));
                if (1 === n.length && n[0] <= 127) return n;
                if (n.length <= 55) return n.unshift(128 + n.length), n;
                var i = oe(n.length);
                return i.unshift(183 + i.length), i.concat(n)
            }

            function ue(e) {
                return R(se(e))
            }

            function ce(e, r, t, n) {
                for (var i = []; t < r + 1 + n;) {
                    var o = fe(e, t);
                    i.push(o.result), (t += o.consumed) > r + 1 + n && ie.throwError("child data too short", p.errors.BUFFER_OVERRUN, {})
                }
                return {
                    consumed: 1 + n,
                    result: i
                }
            }

            function fe(e, r) {
                if (0 === e.length && ie.throwError("data too short", p.errors.BUFFER_OVERRUN, {}), e[r] >= 248) {
                    var t = e[r] - 247;
                    r + 1 + t > e.length && ie.throwError("data short segment too short", p.errors.BUFFER_OVERRUN, {});
                    var n = ae(e, r + 1, t);
                    return r + 1 + t + n > e.length && ie.throwError("data long segment too short", p.errors.BUFFER_OVERRUN, {}), ce(e, r, r + 1 + t, t + n)
                }
                if (e[r] >= 192) {
                    var i = e[r] - 192;
                    return r + 1 + i > e.length && ie.throwError("data array too short", p.errors.BUFFER_OVERRUN, {}), ce(e, r, r + 1, i)
                }
                if (e[r] >= 184) {
                    var o = e[r] - 183;
                    r + 1 + o > e.length && ie.throwError("data array too short", p.errors.BUFFER_OVERRUN, {});
                    var a = ae(e, r + 1, o);
                    return r + 1 + o + a > e.length && ie.throwError("data array too short", p.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + o + a,
                        result: R(e.slice(r + 1 + o, r + 1 + o + a))
                    }
                }
                if (e[r] >= 128) {
                    var s = e[r] - 128;
                    return r + 1 + s > e.length && ie.throwError("data too short", p.errors.BUFFER_OVERRUN, {}), {
                        consumed: 1 + s,
                        result: R(e.slice(r + 1, r + 1 + s))
                    }
                }
                return {
                    consumed: 1,
                    result: R(e[r])
                }
            }

            function le(e) {
                var r = w(e),
                    t = fe(r, 0);
                return t.consumed !== r.length && ie.throwArgumentError("invalid rlp data", "data", e), t.result
            }
            var he = t(12111),
                de = t.n(he);
            "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof t.g ? t.g : "undefined" !== typeof self && self;

            function pe(e, r, t) {
                return t = {
                    path: r,
                    exports: {},
                    require: function(e, r) {
                        return function() {
                            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                        }((void 0 === r || null === r) && t.path)
                    }
                }, e(t, t.exports), t.exports
            }
            var ve = ge;

            function ge(e, r) {
                if (!e) throw new Error(r || "Assertion failed")
            }
            ge.equal = function(e, r, t) {
                if (e != r) throw new Error(t || "Assertion failed: " + e + " != " + r)
            };
            var me = pe((function(e, r) {
                    var t = r;

                    function n(e) {
                        return 1 === e.length ? "0" + e : e
                    }

                    function i(e) {
                        for (var r = "", t = 0; t < e.length; t++) r += n(e[t].toString(16));
                        return r
                    }
                    t.toArray = function(e, r) {
                        if (Array.isArray(e)) return e.slice();
                        if (!e) return [];
                        var t = [];
                        if ("string" !== typeof e) {
                            for (var n = 0; n < e.length; n++) t[n] = 0 | e[n];
                            return t
                        }
                        if ("hex" === r) {
                            (e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 !== 0 && (e = "0" + e);
                            for (n = 0; n < e.length; n += 2) t.push(parseInt(e[n] + e[n + 1], 16))
                        } else
                            for (n = 0; n < e.length; n++) {
                                var i = e.charCodeAt(n),
                                    o = i >> 8,
                                    a = 255 & i;
                                o ? t.push(o, a) : t.push(a)
                            }
                        return t
                    }, t.zero2 = n, t.toHex = i, t.encode = function(e, r) {
                        return "hex" === r ? i(e) : e
                    }
                })),
                ye = pe((function(e, r) {
                    var t = r;
                    t.assert = ve, t.toArray = me.toArray, t.zero2 = me.zero2, t.toHex = me.toHex, t.encode = me.encode, t.getNAF = function(e, r, t) {
                        var n = new Array(Math.max(e.bitLength(), t) + 1);
                        n.fill(0);
                        for (var i = 1 << r + 1, o = e.clone(), a = 0; a < n.length; a++) {
                            var s, u = o.andln(i - 1);
                            o.isOdd() ? (s = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(s)) : s = 0, n[a] = s, o.iushrn(1)
                        }
                        return n
                    }, t.getJSF = function(e, r) {
                        var t = [
                            [],
                            []
                        ];
                        e = e.clone(), r = r.clone();
                        for (var n, i = 0, o = 0; e.cmpn(-i) > 0 || r.cmpn(-o) > 0;) {
                            var a, s, u = e.andln(3) + i & 3,
                                c = r.andln(3) + o & 3;
                            3 === u && (u = -1), 3 === c && (c = -1), a = 0 === (1 & u) ? 0 : 3 !== (n = e.andln(7) + i & 7) && 5 !== n || 2 !== c ? u : -u, t[0].push(a), s = 0 === (1 & c) ? 0 : 3 !== (n = r.andln(7) + o & 7) && 5 !== n || 2 !== u ? c : -c, t[1].push(s), 2 * i === a + 1 && (i = 1 - i), 2 * o === s + 1 && (o = 1 - o), e.iushrn(1), r.iushrn(1)
                        }
                        return t
                    }, t.cachedProperty = function(e, r, t) {
                        var n = "_" + r;
                        e.prototype[r] = function() {
                            return void 0 !== this[n] ? this[n] : this[n] = t.call(this)
                        }
                    }, t.parseBytes = function(e) {
                        return "string" === typeof e ? t.toArray(e, "hex") : e
                    }, t.intFromLE = function(e) {
                        return new(O())(e, "hex", "le")
                    }
                })),
                be = ye.getNAF,
                Ee = ye.getJSF,
                we = ye.assert;

            function Ae(e, r) {
                this.type = e, this.p = new(O())(r.p, 16), this.red = r.prime ? O().red(r.prime) : O().mont(this.p), this.zero = new(O())(0).toRed(this.red), this.one = new(O())(1).toRed(this.red), this.two = new(O())(2).toRed(this.red), this.n = r.n && new(O())(r.n, 16), this.g = r.g && this.pointFromJSON(r.g, r.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                var t = this.n && this.p.div(this.n);
                !t || t.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
            }
            var ke = Ae;

            function Ne(e, r) {
                this.curve = e, this.type = r, this.precomputed = null
            }
            Ae.prototype.point = function() {
                throw new Error("Not implemented")
            }, Ae.prototype.validate = function() {
                throw new Error("Not implemented")
            }, Ae.prototype._fixedNafMul = function(e, r) {
                we(e.precomputed);
                var t = e._getDoubles(),
                    n = be(r, 1, this._bitLength),
                    i = (1 << t.step + 1) - (t.step % 2 === 0 ? 2 : 1);
                i /= 3;
                var o, a, s = [];
                for (o = 0; o < n.length; o += t.step) {
                    a = 0;
                    for (var u = o + t.step - 1; u >= o; u--) a = (a << 1) + n[u];
                    s.push(a)
                }
                for (var c = this.jpoint(null, null, null), f = this.jpoint(null, null, null), l = i; l > 0; l--) {
                    for (o = 0; o < s.length; o++)(a = s[o]) === l ? f = f.mixedAdd(t.points[o]) : a === -l && (f = f.mixedAdd(t.points[o].neg()));
                    c = c.add(f)
                }
                return c.toP()
            }, Ae.prototype._wnafMul = function(e, r) {
                var t = 4,
                    n = e._getNAFPoints(t);
                t = n.wnd;
                for (var i = n.points, o = be(r, t, this._bitLength), a = this.jpoint(null, null, null), s = o.length - 1; s >= 0; s--) {
                    for (var u = 0; s >= 0 && 0 === o[s]; s--) u++;
                    if (s >= 0 && u++, a = a.dblp(u), s < 0) break;
                    var c = o[s];
                    we(0 !== c), a = "affine" === e.type ? c > 0 ? a.mixedAdd(i[c - 1 >> 1]) : a.mixedAdd(i[-c - 1 >> 1].neg()) : c > 0 ? a.add(i[c - 1 >> 1]) : a.add(i[-c - 1 >> 1].neg())
                }
                return "affine" === e.type ? a.toP() : a
            }, Ae.prototype._wnafMulAdd = function(e, r, t, n, i) {
                var o, a, s, u = this._wnafT1,
                    c = this._wnafT2,
                    f = this._wnafT3,
                    l = 0;
                for (o = 0; o < n; o++) {
                    var h = (s = r[o])._getNAFPoints(e);
                    u[o] = h.wnd, c[o] = h.points
                }
                for (o = n - 1; o >= 1; o -= 2) {
                    var d = o - 1,
                        p = o;
                    if (1 === u[d] && 1 === u[p]) {
                        var v = [r[d], null, null, r[p]];
                        0 === r[d].y.cmp(r[p].y) ? (v[1] = r[d].add(r[p]), v[2] = r[d].toJ().mixedAdd(r[p].neg())) : 0 === r[d].y.cmp(r[p].y.redNeg()) ? (v[1] = r[d].toJ().mixedAdd(r[p]), v[2] = r[d].add(r[p].neg())) : (v[1] = r[d].toJ().mixedAdd(r[p]), v[2] = r[d].toJ().mixedAdd(r[p].neg()));
                        var g = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                            m = Ee(t[d], t[p]);
                        for (l = Math.max(m[0].length, l), f[d] = new Array(l), f[p] = new Array(l), a = 0; a < l; a++) {
                            var y = 0 | m[0][a],
                                b = 0 | m[1][a];
                            f[d][a] = g[3 * (y + 1) + (b + 1)], f[p][a] = 0, c[d] = v
                        }
                    } else f[d] = be(t[d], u[d], this._bitLength), f[p] = be(t[p], u[p], this._bitLength), l = Math.max(f[d].length, l), l = Math.max(f[p].length, l)
                }
                var E = this.jpoint(null, null, null),
                    w = this._wnafT4;
                for (o = l; o >= 0; o--) {
                    for (var A = 0; o >= 0;) {
                        var k = !0;
                        for (a = 0; a < n; a++) w[a] = 0 | f[a][o], 0 !== w[a] && (k = !1);
                        if (!k) break;
                        A++, o--
                    }
                    if (o >= 0 && A++, E = E.dblp(A), o < 0) break;
                    for (a = 0; a < n; a++) {
                        var N = w[a];
                        0 !== N && (N > 0 ? s = c[a][N - 1 >> 1] : N < 0 && (s = c[a][-N - 1 >> 1].neg()), E = "affine" === s.type ? E.mixedAdd(s) : E.add(s))
                    }
                }
                for (o = 0; o < n; o++) c[o] = null;
                return i ? E : E.toP()
            }, Ae.BasePoint = Ne, Ne.prototype.eq = function() {
                throw new Error("Not implemented")
            }, Ne.prototype.validate = function() {
                return this.curve.validate(this)
            }, Ae.prototype.decodePoint = function(e, r) {
                e = ye.toArray(e, r);
                var t = this.p.byteLength();
                if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 === 2 * t) return 6 === e[0] ? we(e[e.length - 1] % 2 === 0) : 7 === e[0] && we(e[e.length - 1] % 2 === 1), this.point(e.slice(1, 1 + t), e.slice(1 + t, 1 + 2 * t));
                if ((2 === e[0] || 3 === e[0]) && e.length - 1 === t) return this.pointFromX(e.slice(1, 1 + t), 3 === e[0]);
                throw new Error("Unknown point format")
            }, Ne.prototype.encodeCompressed = function(e) {
                return this.encode(e, !0)
            }, Ne.prototype._encode = function(e) {
                var r = this.curve.p.byteLength(),
                    t = this.getX().toArray("be", r);
                return e ? [this.getY().isEven() ? 2 : 3].concat(t) : [4].concat(t, this.getY().toArray("be", r))
            }, Ne.prototype.encode = function(e, r) {
                return ye.encode(this._encode(r), e)
            }, Ne.prototype.precompute = function(e) {
                if (this.precomputed) return this;
                var r = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, e), r.beta = this._getBeta(), this.precomputed = r, this
            }, Ne.prototype._hasDoubles = function(e) {
                if (!this.precomputed) return !1;
                var r = this.precomputed.doubles;
                return !!r && r.points.length >= Math.ceil((e.bitLength() + 1) / r.step)
            }, Ne.prototype._getDoubles = function(e, r) {
                if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                for (var t = [this], n = this, i = 0; i < r; i += e) {
                    for (var o = 0; o < e; o++) n = n.dbl();
                    t.push(n)
                }
                return {
                    step: e,
                    points: t
                }
            }, Ne.prototype._getNAFPoints = function(e) {
                if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                for (var r = [this], t = (1 << e) - 1, n = 1 === t ? null : this.dbl(), i = 1; i < t; i++) r[i] = r[i - 1].add(n);
                return {
                    wnd: e,
                    points: r
                }
            }, Ne.prototype._getBeta = function() {
                return null
            }, Ne.prototype.dblp = function(e) {
                for (var r = this, t = 0; t < e; t++) r = r.dbl();
                return r
            };
            var Re = pe((function(e) {
                    "function" === typeof Object.create ? e.exports = function(e, r) {
                        r && (e.super_ = r, e.prototype = Object.create(r.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : e.exports = function(e, r) {
                        if (r) {
                            e.super_ = r;
                            var t = function() {};
                            t.prototype = r.prototype, e.prototype = new t, e.prototype.constructor = e
                        }
                    }
                })),
                xe = ye.assert;

            function Ie(e) {
                ke.call(this, "short", e), this.a = new(O())(e.a, 16).toRed(this.red), this.b = new(O())(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
            }
            Re(Ie, ke);
            var Pe = Ie;

            function Se(e, r, t, n) {
                ke.BasePoint.call(this, e, "affine"), null === r && null === t ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new(O())(r, 16), this.y = new(O())(t, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
            }

            function _e(e, r, t, n) {
                ke.BasePoint.call(this, e, "jacobian"), null === r && null === t && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new(O())(0)) : (this.x = new(O())(r, 16), this.y = new(O())(t, 16), this.z = new(O())(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
            }
            Ie.prototype._getEndomorphism = function(e) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    var r, t;
                    if (e.beta) r = new(O())(e.beta, 16).toRed(this.red);
                    else {
                        var n = this._getEndoRoots(this.p);
                        r = (r = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red)
                    }
                    if (e.lambda) t = new(O())(e.lambda, 16);
                    else {
                        var i = this._getEndoRoots(this.n);
                        0 === this.g.mul(i[0]).x.cmp(this.g.x.redMul(r)) ? t = i[0] : (t = i[1], xe(0 === this.g.mul(t).x.cmp(this.g.x.redMul(r))))
                    }
                    return {
                        beta: r,
                        lambda: t,
                        basis: e.basis ? e.basis.map((function(e) {
                            return {
                                a: new(O())(e.a, 16),
                                b: new(O())(e.b, 16)
                            }
                        })) : this._getEndoBasis(t)
                    }
                }
            }, Ie.prototype._getEndoRoots = function(e) {
                var r = e === this.p ? this.red : O().mont(e),
                    t = new(O())(2).toRed(r).redInvm(),
                    n = t.redNeg(),
                    i = new(O())(3).toRed(r).redNeg().redSqrt().redMul(t);
                return [n.redAdd(i).fromRed(), n.redSub(i).fromRed()]
            }, Ie.prototype._getEndoBasis = function(e) {
                for (var r, t, n, i, o, a, s, u, c, f = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), l = e, h = this.n.clone(), d = new(O())(1), p = new(O())(0), v = new(O())(0), g = new(O())(1), m = 0; 0 !== l.cmpn(0);) {
                    var y = h.div(l);
                    u = h.sub(y.mul(l)), c = v.sub(y.mul(d));
                    var b = g.sub(y.mul(p));
                    if (!n && u.cmp(f) < 0) r = s.neg(), t = d, n = u.neg(), i = c;
                    else if (n && 2 === ++m) break;
                    s = u, h = l, l = u, v = d, d = c, g = p, p = b
                }
                o = u.neg(), a = c;
                var E = n.sqr().add(i.sqr());
                return o.sqr().add(a.sqr()).cmp(E) >= 0 && (o = r, a = t), n.negative && (n = n.neg(), i = i.neg()), o.negative && (o = o.neg(), a = a.neg()), [{
                    a: n,
                    b: i
                }, {
                    a: o,
                    b: a
                }]
            }, Ie.prototype._endoSplit = function(e) {
                var r = this.endo.basis,
                    t = r[0],
                    n = r[1],
                    i = n.b.mul(e).divRound(this.n),
                    o = t.b.neg().mul(e).divRound(this.n),
                    a = i.mul(t.a),
                    s = o.mul(n.a),
                    u = i.mul(t.b),
                    c = o.mul(n.b);
                return {
                    k1: e.sub(a).sub(s),
                    k2: u.add(c).neg()
                }
            }, Ie.prototype.pointFromX = function(e, r) {
                (e = new(O())(e, 16)).red || (e = e.toRed(this.red));
                var t = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),
                    n = t.redSqrt();
                if (0 !== n.redSqr().redSub(t).cmp(this.zero)) throw new Error("invalid point");
                var i = n.fromRed().isOdd();
                return (r && !i || !r && i) && (n = n.redNeg()), this.point(e, n)
            }, Ie.prototype.validate = function(e) {
                if (e.inf) return !0;
                var r = e.x,
                    t = e.y,
                    n = this.a.redMul(r),
                    i = r.redSqr().redMul(r).redIAdd(n).redIAdd(this.b);
                return 0 === t.redSqr().redISub(i).cmpn(0)
            }, Ie.prototype._endoWnafMulAdd = function(e, r, t) {
                for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < e.length; o++) {
                    var a = this._endoSplit(r[o]),
                        s = e[o],
                        u = s._getBeta();
                    a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2
                }
                for (var c = this._wnafMulAdd(1, n, i, 2 * o, t), f = 0; f < 2 * o; f++) n[f] = null, i[f] = null;
                return c
            }, Re(Se, ke.BasePoint), Ie.prototype.point = function(e, r, t) {
                return new Se(this, e, r, t)
            }, Ie.prototype.pointFromJSON = function(e, r) {
                return Se.fromJSON(this, e, r)
            }, Se.prototype._getBeta = function() {
                if (this.curve.endo) {
                    var e = this.precomputed;
                    if (e && e.beta) return e.beta;
                    var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (e) {
                        var t = this.curve,
                            n = function(e) {
                                return t.point(e.x.redMul(t.endo.beta), e.y)
                            };
                        e.beta = r, r.precomputed = {
                            beta: null,
                            naf: e.naf && {
                                wnd: e.naf.wnd,
                                points: e.naf.points.map(n)
                            },
                            doubles: e.doubles && {
                                step: e.doubles.step,
                                points: e.doubles.points.map(n)
                            }
                        }
                    }
                    return r
                }
            }, Se.prototype.toJSON = function() {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }, Se.fromJSON = function(e, r, t) {
                "string" === typeof r && (r = JSON.parse(r));
                var n = e.point(r[0], r[1], t);
                if (!r[2]) return n;

                function i(r) {
                    return e.point(r[0], r[1], t)
                }
                var o = r[2];
                return n.precomputed = {
                    beta: null,
                    doubles: o.doubles && {
                        step: o.doubles.step,
                        points: [n].concat(o.doubles.points.map(i))
                    },
                    naf: o.naf && {
                        wnd: o.naf.wnd,
                        points: [n].concat(o.naf.points.map(i))
                    }
                }, n
            }, Se.prototype.inspect = function() {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }, Se.prototype.isInfinity = function() {
                return this.inf
            }, Se.prototype.add = function(e) {
                if (this.inf) return e;
                if (e.inf) return this;
                if (this.eq(e)) return this.dbl();
                if (this.neg().eq(e)) return this.curve.point(null, null);
                if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                var r = this.y.redSub(e.y);
                0 !== r.cmpn(0) && (r = r.redMul(this.x.redSub(e.x).redInvm()));
                var t = r.redSqr().redISub(this.x).redISub(e.x),
                    n = r.redMul(this.x.redSub(t)).redISub(this.y);
                return this.curve.point(t, n)
            }, Se.prototype.dbl = function() {
                if (this.inf) return this;
                var e = this.y.redAdd(this.y);
                if (0 === e.cmpn(0)) return this.curve.point(null, null);
                var r = this.curve.a,
                    t = this.x.redSqr(),
                    n = e.redInvm(),
                    i = t.redAdd(t).redIAdd(t).redIAdd(r).redMul(n),
                    o = i.redSqr().redISub(this.x.redAdd(this.x)),
                    a = i.redMul(this.x.redSub(o)).redISub(this.y);
                return this.curve.point(o, a)
            }, Se.prototype.getX = function() {
                return this.x.fromRed()
            }, Se.prototype.getY = function() {
                return this.y.fromRed()
            }, Se.prototype.mul = function(e) {
                return e = new(O())(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e)
            }, Se.prototype.mulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
            }, Se.prototype.jmulAdd = function(e, r, t) {
                var n = [this, r],
                    i = [e, t];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
            }, Se.prototype.eq = function(e) {
                return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y))
            }, Se.prototype.neg = function(e) {
                if (this.inf) return this;
                var r = this.curve.point(this.x, this.y.redNeg());
                if (e && this.precomputed) {
                    var t = this.precomputed,
                        n = function(e) {
                            return e.neg()
                        };
                    r.precomputed = {
                        naf: t.naf && {
                            wnd: t.naf.wnd,
                            points: t.naf.points.map(n)
                        },
                        doubles: t.doubles && {
                            step: t.doubles.step,
                            points: t.doubles.points.map(n)
                        }
                    }
                }
                return r
            }, Se.prototype.toJ = function() {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }, Re(_e, ke.BasePoint), Ie.prototype.jpoint = function(e, r, t) {
                return new _e(this, e, r, t)
            }, _e.prototype.toP = function() {
                if (this.isInfinity()) return this.curve.point(null, null);
                var e = this.z.redInvm(),
                    r = e.redSqr(),
                    t = this.x.redMul(r),
                    n = this.y.redMul(r).redMul(e);
                return this.curve.point(t, n)
            }, _e.prototype.neg = function() {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }, _e.prototype.add = function(e) {
                if (this.isInfinity()) return e;
                if (e.isInfinity()) return this;
                var r = e.z.redSqr(),
                    t = this.z.redSqr(),
                    n = this.x.redMul(r),
                    i = e.x.redMul(t),
                    o = this.y.redMul(r.redMul(e.z)),
                    a = e.y.redMul(t.redMul(this.z)),
                    s = n.redSub(i),
                    u = o.redSub(a);
                if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var c = s.redSqr(),
                    f = c.redMul(s),
                    l = n.redMul(c),
                    h = u.redSqr().redIAdd(f).redISub(l).redISub(l),
                    d = u.redMul(l.redISub(h)).redISub(o.redMul(f)),
                    p = this.z.redMul(e.z).redMul(s);
                return this.curve.jpoint(h, d, p)
            }, _e.prototype.mixedAdd = function(e) {
                if (this.isInfinity()) return e.toJ();
                if (e.isInfinity()) return this;
                var r = this.z.redSqr(),
                    t = this.x,
                    n = e.x.redMul(r),
                    i = this.y,
                    o = e.y.redMul(r).redMul(this.z),
                    a = t.redSub(n),
                    s = i.redSub(o);
                if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = a.redSqr(),
                    c = u.redMul(a),
                    f = t.redMul(u),
                    l = s.redSqr().redIAdd(c).redISub(f).redISub(f),
                    h = s.redMul(f.redISub(l)).redISub(i.redMul(c)),
                    d = this.z.redMul(a);
                return this.curve.jpoint(l, h, d)
            }, _e.prototype.dblp = function(e) {
                if (0 === e) return this;
                if (this.isInfinity()) return this;
                if (!e) return this.dbl();
                var r;
                if (this.curve.zeroA || this.curve.threeA) {
                    var t = this;
                    for (r = 0; r < e; r++) t = t.dbl();
                    return t
                }
                var n = this.curve.a,
                    i = this.curve.tinv,
                    o = this.x,
                    a = this.y,
                    s = this.z,
                    u = s.redSqr().redSqr(),
                    c = a.redAdd(a);
                for (r = 0; r < e; r++) {
                    var f = o.redSqr(),
                        l = c.redSqr(),
                        h = l.redSqr(),
                        d = f.redAdd(f).redIAdd(f).redIAdd(n.redMul(u)),
                        p = o.redMul(l),
                        v = d.redSqr().redISub(p.redAdd(p)),
                        g = p.redISub(v),
                        m = d.redMul(g);
                    m = m.redIAdd(m).redISub(h);
                    var y = c.redMul(s);
                    r + 1 < e && (u = u.redMul(h)), o = v, s = y, c = m
                }
                return this.curve.jpoint(o, c.redMul(i), s)
            }, _e.prototype.dbl = function() {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }, _e.prototype._zeroDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n),
                        u = s.redSqr().redISub(a).redISub(a),
                        c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), e = u, r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.x.redSqr(),
                        l = this.y.redSqr(),
                        h = l.redSqr(),
                        d = this.x.redAdd(l).redSqr().redISub(f).redISub(h);
                    d = d.redIAdd(d);
                    var p = f.redAdd(f).redIAdd(f),
                        v = p.redSqr(),
                        g = h.redIAdd(h);
                    g = (g = g.redIAdd(g)).redIAdd(g), e = v.redISub(d).redISub(d), r = p.redMul(d.redISub(e)).redISub(g), t = (t = this.y.redMul(this.z)).redIAdd(t)
                }
                return this.curve.jpoint(e, r, t)
            }, _e.prototype._threeDbl = function() {
                var e, r, t;
                if (this.zOne) {
                    var n = this.x.redSqr(),
                        i = this.y.redSqr(),
                        o = i.redSqr(),
                        a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    a = a.redIAdd(a);
                    var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                        u = s.redSqr().redISub(a).redISub(a);
                    e = u;
                    var c = o.redIAdd(o);
                    c = (c = c.redIAdd(c)).redIAdd(c), r = s.redMul(a.redISub(u)).redISub(c), t = this.y.redAdd(this.y)
                } else {
                    var f = this.z.redSqr(),
                        l = this.y.redSqr(),
                        h = this.x.redMul(l),
                        d = this.x.redSub(f).redMul(this.x.redAdd(f));
                    d = d.redAdd(d).redIAdd(d);
                    var p = h.redIAdd(h),
                        v = (p = p.redIAdd(p)).redAdd(p);
                    e = d.redSqr().redISub(v), t = this.y.redAdd(this.z).redSqr().redISub(l).redISub(f);
                    var g = l.redSqr();
                    g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), r = d.redMul(p.redISub(e)).redISub(g)
                }
                return this.curve.jpoint(e, r, t)
            }, _e.prototype._dbl = function() {
                var e = this.curve.a,
                    r = this.x,
                    t = this.y,
                    n = this.z,
                    i = n.redSqr().redSqr(),
                    o = r.redSqr(),
                    a = t.redSqr(),
                    s = o.redAdd(o).redIAdd(o).redIAdd(e.redMul(i)),
                    u = r.redAdd(r),
                    c = (u = u.redIAdd(u)).redMul(a),
                    f = s.redSqr().redISub(c.redAdd(c)),
                    l = c.redISub(f),
                    h = a.redSqr();
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = s.redMul(l).redISub(h),
                    p = t.redAdd(t).redMul(n);
                return this.curve.jpoint(f, d, p)
            }, _e.prototype.trpl = function() {
                if (!this.curve.zeroA) return this.dbl().add(this);
                var e = this.x.redSqr(),
                    r = this.y.redSqr(),
                    t = this.z.redSqr(),
                    n = r.redSqr(),
                    i = e.redAdd(e).redIAdd(e),
                    o = i.redSqr(),
                    a = this.x.redAdd(r).redSqr().redISub(e).redISub(n),
                    s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),
                    u = n.redIAdd(n);
                u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
                var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
                    f = r.redMul(c);
                f = (f = f.redIAdd(f)).redIAdd(f);
                var l = this.x.redMul(s).redISub(f);
                l = (l = l.redIAdd(l)).redIAdd(l);
                var h = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
                h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
                var d = this.z.redAdd(a).redSqr().redISub(t).redISub(s);
                return this.curve.jpoint(l, h, d)
            }, _e.prototype.mul = function(e, r) {
                return e = new(O())(e, r), this.curve._wnafMul(this, e)
            }, _e.prototype.eq = function(e) {
                if ("affine" === e.type) return this.eq(e.toJ());
                if (this === e) return !0;
                var r = this.z.redSqr(),
                    t = e.z.redSqr();
                if (0 !== this.x.redMul(t).redISub(e.x.redMul(r)).cmpn(0)) return !1;
                var n = r.redMul(this.z),
                    i = t.redMul(e.z);
                return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0)
            }, _e.prototype.eqXToP = function(e) {
                var r = this.z.redSqr(),
                    t = e.toRed(this.curve.red).redMul(r);
                if (0 === this.x.cmp(t)) return !0;
                for (var n = e.clone(), i = this.curve.redN.redMul(r);;) {
                    if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                    if (t.redIAdd(i), 0 === this.x.cmp(t)) return !0
                }
            }, _e.prototype.inspect = function() {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }, _e.prototype.isInfinity = function() {
                return 0 === this.z.cmpn(0)
            };
            var Te = pe((function(e, r) {
                    var t = r;
                    t.base = ke, t.short = Pe, t.mont = null, t.edwards = null
                })),
                Oe = pe((function(e, r) {
                    var t, n = r,
                        i = ye.assert;

                    function o(e) {
                        "short" === e.type ? this.curve = new Te.short(e) : "edwards" === e.type ? this.curve = new Te.edwards(e) : this.curve = new Te.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                    }

                    function a(e, r) {
                        Object.defineProperty(n, e, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var t = new o(r);
                                return Object.defineProperty(n, e, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: t
                                }), t
                            }
                        })
                    }
                    n.PresetCurve = o, a("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: de().sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }), a("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: de().sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }), a("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: de().sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }), a("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: de().sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }), a("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: de().sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }), a("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: de().sha256,
                        gRed: !1,
                        g: ["9"]
                    }), a("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: de().sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                    try {
                        t = null.crash()
                    } catch (s) {
                        t = void 0
                    }
                    a("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: de().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [{
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        }, {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }],
                        gRed: !1,
                        g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", t]
                    })
                }));

            function Ce(e) {
                if (!(this instanceof Ce)) return new Ce(e);
                this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                var r = me.toArray(e.entropy, e.entropyEnc || "hex"),
                    t = me.toArray(e.nonce, e.nonceEnc || "hex"),
                    n = me.toArray(e.pers, e.persEnc || "hex");
                ve(r.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(r, t, n)
            }
            var Ue = Ce;
            Ce.prototype._init = function(e, r, t) {
                var n = e.concat(r).concat(t);
                this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
                this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
            }, Ce.prototype._hmac = function() {
                return new(de().hmac)(this.hash, this.K)
            }, Ce.prototype._update = function(e) {
                var r = this._hmac().update(this.V).update([0]);
                e && (r = r.update(e)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest())
            }, Ce.prototype.reseed = function(e, r, t, n) {
                "string" !== typeof r && (n = t, t = r, r = null), e = me.toArray(e, r), t = me.toArray(t, n), ve(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(t || [])), this._reseed = 1
            }, Ce.prototype.generate = function(e, r, t, n) {
                if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                "string" !== typeof r && (n = t, t = r, r = null), t && (t = me.toArray(t, n || "hex"), this._update(t));
                for (var i = []; i.length < e;) this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                var o = i.slice(0, e);
                return this._update(t), this._reseed++, me.encode(o, r)
            };
            var Le = ye.assert;

            function Fe(e, r) {
                this.ec = e, this.priv = null, this.pub = null, r.priv && this._importPrivate(r.priv, r.privEnc), r.pub && this._importPublic(r.pub, r.pubEnc)
            }
            var De = Fe;
            Fe.fromPublic = function(e, r, t) {
                return r instanceof Fe ? r : new Fe(e, {
                    pub: r,
                    pubEnc: t
                })
            }, Fe.fromPrivate = function(e, r, t) {
                return r instanceof Fe ? r : new Fe(e, {
                    priv: r,
                    privEnc: t
                })
            }, Fe.prototype.validate = function() {
                var e = this.getPublic();
                return e.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }, Fe.prototype.getPublic = function(e, r) {
                return "string" === typeof e && (r = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, e) : this.pub
            }, Fe.prototype.getPrivate = function(e) {
                return "hex" === e ? this.priv.toString(16, 2) : this.priv
            }, Fe.prototype._importPrivate = function(e, r) {
                this.priv = new(O())(e, r || 16), this.priv = this.priv.umod(this.ec.curve.n)
            }, Fe.prototype._importPublic = function(e, r) {
                if (e.x || e.y) return "mont" === this.ec.curve.type ? Le(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || Le(e.x && e.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(e.x, e.y));
                this.pub = this.ec.curve.decodePoint(e, r)
            }, Fe.prototype.derive = function(e) {
                return e.validate() || Le(e.validate(), "public point not validated"), e.mul(this.priv).getX()
            }, Fe.prototype.sign = function(e, r, t) {
                return this.ec.sign(e, this, r, t)
            }, Fe.prototype.verify = function(e, r) {
                return this.ec.verify(e, r, this)
            }, Fe.prototype.inspect = function() {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            };
            var Me = ye.assert;

            function Be(e, r) {
                if (e instanceof Be) return e;
                this._importDER(e, r) || (Me(e.r && e.s, "Signature without r or s"), this.r = new(O())(e.r, 16), this.s = new(O())(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam)
            }
            var Ge = Be;

            function Ze() {
                this.place = 0
            }

            function je(e, r) {
                var t = e[r.place++];
                if (!(128 & t)) return t;
                var n = 15 & t;
                if (0 === n || n > 4) return !1;
                for (var i = 0, o = 0, a = r.place; o < n; o++, a++) i <<= 8, i |= e[a], i >>>= 0;
                return !(i <= 127) && (r.place = a, i)
            }

            function Ke(e) {
                for (var r = 0, t = e.length - 1; !e[r] && !(128 & e[r + 1]) && r < t;) r++;
                return 0 === r ? e : e.slice(r)
            }

            function ze(e, r) {
                if (r < 128) e.push(r);
                else {
                    var t = 1 + (Math.log(r) / Math.LN2 >>> 3);
                    for (e.push(128 | t); --t;) e.push(r >>> (t << 3) & 255);
                    e.push(r)
                }
            }
            Be.prototype._importDER = function(e, r) {
                e = ye.toArray(e, r);
                var t = new Ze;
                if (48 !== e[t.place++]) return !1;
                var n = je(e, t);
                if (!1 === n) return !1;
                if (n + t.place !== e.length) return !1;
                if (2 !== e[t.place++]) return !1;
                var i = je(e, t);
                if (!1 === i) return !1;
                var o = e.slice(t.place, i + t.place);
                if (t.place += i, 2 !== e[t.place++]) return !1;
                var a = je(e, t);
                if (!1 === a) return !1;
                if (e.length !== a + t.place) return !1;
                var s = e.slice(t.place, a + t.place);
                if (0 === o[0]) {
                    if (!(128 & o[1])) return !1;
                    o = o.slice(1)
                }
                if (0 === s[0]) {
                    if (!(128 & s[1])) return !1;
                    s = s.slice(1)
                }
                return this.r = new(O())(o), this.s = new(O())(s), this.recoveryParam = null, !0
            }, Be.prototype.toDER = function(e) {
                var r = this.r.toArray(),
                    t = this.s.toArray();
                for (128 & r[0] && (r = [0].concat(r)), 128 & t[0] && (t = [0].concat(t)), r = Ke(r), t = Ke(t); !t[0] && !(128 & t[1]);) t = t.slice(1);
                var n = [2];
                ze(n, r.length), (n = n.concat(r)).push(2), ze(n, t.length);
                var i = n.concat(t),
                    o = [48];
                return ze(o, i.length), o = o.concat(i), ye.encode(o, e)
            };
            var qe = function() {
                    throw new Error("unsupported")
                },
                He = ye.assert;

            function We(e) {
                if (!(this instanceof We)) return new We(e);
                "string" === typeof e && (He(Object.prototype.hasOwnProperty.call(Oe, e), "Unknown curve " + e), e = Oe[e]), e instanceof Oe.PresetCurve && (e = {
                    curve: e
                }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash
            }
            var Ve = We;
            We.prototype.keyPair = function(e) {
                return new De(this, e)
            }, We.prototype.keyFromPrivate = function(e, r) {
                return De.fromPrivate(this, e, r)
            }, We.prototype.keyFromPublic = function(e, r) {
                return De.fromPublic(this, e, r)
            }, We.prototype.genKeyPair = function(e) {
                e || (e = {});
                for (var r = new Ue({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || qe(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), t = this.n.byteLength(), n = this.n.sub(new(O())(2));;) {
                    var i = new(O())(r.generate(t));
                    if (!(i.cmp(n) > 0)) return i.iaddn(1), this.keyFromPrivate(i)
                }
            }, We.prototype._truncateToN = function(e, r) {
                var t = 8 * e.byteLength() - this.n.bitLength();
                return t > 0 && (e = e.ushrn(t)), !r && e.cmp(this.n) >= 0 ? e.sub(this.n) : e
            }, We.prototype.sign = function(e, r, t, n) {
                "object" === typeof t && (n = t, t = null), n || (n = {}), r = this.keyFromPrivate(r, t), e = this._truncateToN(new(O())(e, 16));
                for (var i = this.n.byteLength(), o = r.getPrivate().toArray("be", i), a = e.toArray("be", i), s = new Ue({
                        hash: this.hash,
                        entropy: o,
                        nonce: a,
                        pers: n.pers,
                        persEnc: n.persEnc || "utf8"
                    }), u = this.n.sub(new(O())(1)), c = 0;; c++) {
                    var f = n.k ? n.k(c) : new(O())(s.generate(this.n.byteLength()));
                    if (!((f = this._truncateToN(f, !0)).cmpn(1) <= 0 || f.cmp(u) >= 0)) {
                        var l = this.g.mul(f);
                        if (!l.isInfinity()) {
                            var h = l.getX(),
                                d = h.umod(this.n);
                            if (0 !== d.cmpn(0)) {
                                var p = f.invm(this.n).mul(d.mul(r.getPrivate()).iadd(e));
                                if (0 !== (p = p.umod(this.n)).cmpn(0)) {
                                    var v = (l.getY().isOdd() ? 1 : 0) | (0 !== h.cmp(d) ? 2 : 0);
                                    return n.canonical && p.cmp(this.nh) > 0 && (p = this.n.sub(p), v ^= 1), new Ge({
                                        r: d,
                                        s: p,
                                        recoveryParam: v
                                    })
                                }
                            }
                        }
                    }
                }
            }, We.prototype.verify = function(e, r, t, n) {
                e = this._truncateToN(new(O())(e, 16)), t = this.keyFromPublic(t, n);
                var i = (r = new Ge(r, "hex")).r,
                    o = r.s;
                if (i.cmpn(1) < 0 || i.cmp(this.n) >= 0) return !1;
                if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                var a, s = o.invm(this.n),
                    u = s.mul(e).umod(this.n),
                    c = s.mul(i).umod(this.n);
                return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(u, t.getPublic(), c)).isInfinity() && a.eqXToP(i) : !(a = this.g.mulAdd(u, t.getPublic(), c)).isInfinity() && 0 === a.getX().umod(this.n).cmp(i)
            }, We.prototype.recoverPubKey = function(e, r, t, n) {
                He((3 & t) === t, "The recovery param is more than two bits"), r = new Ge(r, n);
                var i = this.n,
                    o = new(O())(e),
                    a = r.r,
                    s = r.s,
                    u = 1 & t,
                    c = t >> 1;
                if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && c) throw new Error("Unable to find sencond key candinate");
                a = c ? this.curve.pointFromX(a.add(this.curve.n), u) : this.curve.pointFromX(a, u);
                var f = r.r.invm(i),
                    l = i.sub(o).mul(f).umod(i),
                    h = s.mul(f).umod(i);
                return this.g.mulAdd(l, a, h)
            }, We.prototype.getKeyRecoveryParam = function(e, r, t, n) {
                if (null !== (r = new Ge(r, n)).recoveryParam) return r.recoveryParam;
                for (var i = 0; i < 4; i++) {
                    var o;
                    try {
                        o = this.recoverPubKey(e, r, i)
                    } catch (e) {
                        continue
                    }
                    if (o.eq(t)) return i
                }
                throw new Error("Unable to find valid recovery factor")
            };
            var Je = pe((function(e, r) {
                    var t = r;
                    t.version = "6.5.4", t.utils = ye, t.rand = function() {
                        throw new Error("unsupported")
                    }, t.curve = Te, t.curves = Oe, t.ec = Ve, t.eddsa = null
                })).ec,
                Xe = new p("signing-key/5.7.0"),
                Qe = null;

            function Ye() {
                return Qe || (Qe = new Je("secp256k1")), Qe
            }
            var $e = function() {
                function e(r) {
                    (0, n.Z)(this, e), ne(this, "curve", "secp256k1"), ne(this, "privateKey", R(r)), 32 !== x(this.privateKey) && Xe.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                    var t = Ye().keyFromPrivate(w(this.privateKey));
                    ne(this, "publicKey", "0x" + t.getPublic(!1, "hex")), ne(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), ne(this, "_isSigningKey", !0)
                }
                return (0, i.Z)(e, [{
                    key: "_addPoint",
                    value: function(e) {
                        var r = Ye().keyFromPublic(w(this.publicKey)),
                            t = Ye().keyFromPublic(w(e));
                        return "0x" + r.pub.add(t.pub).encodeCompressed("hex")
                    }
                }, {
                    key: "signDigest",
                    value: function(e) {
                        var r = Ye().keyFromPrivate(w(this.privateKey)),
                            t = w(e);
                        32 !== t.length && Xe.throwArgumentError("bad digest length", "digest", e);
                        var n = r.sign(t, {
                            canonical: !0
                        });
                        return _({
                            recoveryParam: n.recoveryParam,
                            r: S("0x" + n.r.toString(16), 32),
                            s: S("0x" + n.s.toString(16), 32)
                        })
                    }
                }, {
                    key: "computeSharedSecret",
                    value: function(e) {
                        var r = Ye().keyFromPrivate(w(this.privateKey)),
                            t = Ye().keyFromPublic(w(er(e)));
                        return S("0x" + r.derive(t.getPublic()).toString(16), 32)
                    }
                }], [{
                    key: "isSigningKey",
                    value: function(e) {
                        return !(!e || !e._isSigningKey)
                    }
                }]), e
            }();

            function er(e, r) {
                var t = w(e);
                if (32 === t.length) {
                    var n = new $e(t);
                    return r ? "0x" + Ye().keyFromPrivate(t).getPublic(!0, "hex") : n.publicKey
                }
                return 33 === t.length ? r ? R(t) : "0x" + Ye().keyFromPublic(t).getPublic(!1, "hex") : 65 === t.length ? r ? "0x" + Ye().keyFromPublic(t).getPublic(!0, "hex") : R(t) : Xe.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
            }
            var rr, tr = new p("transactions/5.6.2");

            function nr(e) {
                return "0x" === e ? null : ee(e)
            }

            function ir(e) {
                return "0x" === e ? re : M.from(e)
            }! function(e) {
                e[e.legacy = 0] = "legacy", e[e.eip2930 = 1] = "eip2930", e[e.eip1559 = 2] = "eip1559"
            }(rr || (rr = {}));
            var or = [{
                    name: "nonce",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasPrice",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "gasLimit",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "to",
                    length: 20
                }, {
                    name: "value",
                    maxLength: 32,
                    numeric: !0
                }, {
                    name: "data"
                }],
                ar = {
                    chainId: !0,
                    data: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    nonce: !0,
                    to: !0,
                    type: !0,
                    value: !0
                };

            function sr(e) {
                return ee(I(q(I(er(e), 1)), 12))
            }

            function ur(e, r) {
                return sr(function(e, r) {
                    var t = _(r),
                        n = {
                            r: w(t.r),
                            s: w(t.s)
                        };
                    return "0x" + Ye().recoverPubKey(w(e), n, t.recoveryParam).encode("hex", !1)
                }(w(e), r))
            }

            function cr(e, r) {
                var t = A(M.from(e).toHexString());
                return t.length > 32 && tr.throwArgumentError("invalid length for " + r, "transaction:" + r, e), t
            }

            function fr(e, r) {
                return {
                    address: ee(e),
                    storageKeys: (r || []).map((function(r, t) {
                        return 32 !== x(r) && tr.throwArgumentError("invalid access list storageKey", "accessList[".concat(e, ":").concat(t, "]"), r), r.toLowerCase()
                    }))
                }
            }

            function lr(e) {
                if (Array.isArray(e)) return e.map((function(e, r) {
                    return Array.isArray(e) ? (e.length > 2 && tr.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[".concat(r, "]"), e), fr(e[0], e[1])) : fr(e.address, e.storageKeys)
                }));
                var r = Object.keys(e).map((function(r) {
                    var t = e[r].reduce((function(e, r) {
                        return e[r] = !0, e
                    }), {});
                    return fr(r, Object.keys(t).sort())
                }));
                return r.sort((function(e, r) {
                    return e.address.localeCompare(r.address)
                })), r
            }

            function hr(e) {
                return lr(e).map((function(e) {
                    return [e.address, e.storageKeys]
                }))
            }

            function dr(e, r) {
                if (null != e.gasPrice) {
                    var t = M.from(e.gasPrice),
                        n = M.from(e.maxFeePerGas || 0);
                    t.eq(n) || tr.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                        gasPrice: t,
                        maxFeePerGas: n
                    })
                }
                var i = [cr(e.chainId || 0, "chainId"), cr(e.nonce || 0, "nonce"), cr(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), cr(e.maxFeePerGas || 0, "maxFeePerGas"), cr(e.gasLimit || 0, "gasLimit"), null != e.to ? ee(e.to) : "0x", cr(e.value || 0, "value"), e.data || "0x", hr(e.accessList || [])];
                if (r) {
                    var o = _(r);
                    i.push(cr(o.recoveryParam, "recoveryParam")), i.push(A(o.r)), i.push(A(o.s))
                }
                return P(["0x02", ue(i)])
            }

            function pr(e, r) {
                var t = [cr(e.chainId || 0, "chainId"), cr(e.nonce || 0, "nonce"), cr(e.gasPrice || 0, "gasPrice"), cr(e.gasLimit || 0, "gasLimit"), null != e.to ? ee(e.to) : "0x", cr(e.value || 0, "value"), e.data || "0x", hr(e.accessList || [])];
                if (r) {
                    var n = _(r);
                    t.push(cr(n.recoveryParam, "recoveryParam")), t.push(A(n.r)), t.push(A(n.s))
                }
                return P(["0x01", ue(t)])
            }

            function vr(e, r) {
                var t, n;
                n = ar, (t = e) && "object" === typeof t || te.throwArgumentError("invalid object", "object", t), Object.keys(t).forEach((function(e) {
                    n[e] || te.throwArgumentError("invalid object key - " + e, "transaction:" + e, t)
                }));
                var i = [];
                or.forEach((function(r) {
                    var t = e[r.name] || [],
                        n = {};
                    r.numeric && (n.hexPad = "left"), t = w(R(t, n)), r.length && t.length !== r.length && t.length > 0 && tr.throwArgumentError("invalid length for " + r.name, "transaction:" + r.name, t), r.maxLength && (t = A(t)).length > r.maxLength && tr.throwArgumentError("invalid length for " + r.name, "transaction:" + r.name, t), i.push(R(t))
                }));
                var o = 0;
                if (null != e.chainId ? "number" !== typeof(o = e.chainId) && tr.throwArgumentError("invalid transaction.chainId", "transaction", e) : r && !y(r) && r.v > 28 && (o = Math.floor((r.v - 35) / 2)), 0 !== o && (i.push(R(o)), i.push("0x"), i.push("0x")), !r) return ue(i);
                var a = _(r),
                    s = 27 + a.recoveryParam;
                return 0 !== o ? (i.pop(), i.pop(), i.pop(), s += 2 * o + 8, a.v > 28 && a.v !== s && tr.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", r)) : a.v !== s && tr.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", r), i.push(R(s)), i.push(A(w(a.r))), i.push(A(w(a.s))), ue(i)
            }

            function gr(e, r) {
                if (null == e.type || 0 === e.type) return null != e.accessList && tr.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", e), vr(e, r);
                switch (e.type) {
                    case 1:
                        return pr(e, r);
                    case 2:
                        return dr(e, r)
                }
                return tr.throwError("unsupported transaction type: ".concat(e.type), p.errors.UNSUPPORTED_OPERATION, {
                    operation: "serializeTransaction",
                    transactionType: e.type
                })
            }

            function mr(e, r, t) {
                try {
                    var n = ir(r[0]).toNumber();
                    if (0 !== n && 1 !== n) throw new Error("bad recid");
                    e.v = n
                } catch (o) {
                    tr.throwArgumentError("invalid v for transaction type: 1", "v", r[0])
                }
                e.r = S(r[1], 32), e.s = S(r[2], 32);
                try {
                    var i = q(t(e));
                    e.from = ur(i, {
                        r: e.r,
                        s: e.s,
                        recoveryParam: e.v
                    })
                } catch (o) {}
            }

            function yr(e) {
                var r = w(e);
                if (r[0] > 127) return function(e) {
                    var r = le(e);
                    9 !== r.length && 6 !== r.length && tr.throwArgumentError("invalid raw transaction", "rawTransaction", e);
                    var t = {
                        nonce: ir(r[0]).toNumber(),
                        gasPrice: ir(r[1]),
                        gasLimit: ir(r[2]),
                        to: nr(r[3]),
                        value: ir(r[4]),
                        data: r[5],
                        chainId: 0
                    };
                    if (6 === r.length) return t;
                    try {
                        t.v = M.from(r[6]).toNumber()
                    } catch (a) {
                        return t
                    }
                    if (t.r = S(r[7], 32), t.s = S(r[8], 32), M.from(t.r).isZero() && M.from(t.s).isZero()) t.chainId = t.v, t.v = 0;
                    else {
                        t.chainId = Math.floor((t.v - 35) / 2), t.chainId < 0 && (t.chainId = 0);
                        var n = t.v - 27,
                            i = r.slice(0, 6);
                        0 !== t.chainId && (i.push(R(t.chainId)), i.push("0x"), i.push("0x"), n -= 2 * t.chainId + 8);
                        var o = q(ue(i));
                        try {
                            t.from = ur(o, {
                                r: R(t.r),
                                s: R(t.s),
                                recoveryParam: n
                            })
                        } catch (a) {}
                        t.hash = q(e)
                    }
                    return t.type = null, t
                }(r);
                switch (r[0]) {
                    case 1:
                        return function(e) {
                            var r = le(e.slice(1));
                            8 !== r.length && 11 !== r.length && tr.throwArgumentError("invalid component count for transaction type: 1", "payload", R(e));
                            var t = {
                                type: 1,
                                chainId: ir(r[0]).toNumber(),
                                nonce: ir(r[1]).toNumber(),
                                gasPrice: ir(r[2]),
                                gasLimit: ir(r[3]),
                                to: nr(r[4]),
                                value: ir(r[5]),
                                data: r[6],
                                accessList: lr(r[7])
                            };
                            return 8 === r.length || (t.hash = q(e), mr(t, r.slice(8), pr)), t
                        }(r);
                    case 2:
                        return function(e) {
                            var r = le(e.slice(1));
                            9 !== r.length && 12 !== r.length && tr.throwArgumentError("invalid component count for transaction type: 2", "payload", R(e));
                            var t = ir(r[2]),
                                n = ir(r[3]),
                                i = {
                                    type: 2,
                                    chainId: ir(r[0]).toNumber(),
                                    nonce: ir(r[1]).toNumber(),
                                    maxPriorityFeePerGas: t,
                                    maxFeePerGas: n,
                                    gasPrice: null,
                                    gasLimit: ir(r[4]),
                                    to: nr(r[5]),
                                    value: ir(r[6]),
                                    data: r[7],
                                    accessList: lr(r[8])
                                };
                            return 9 === r.length || (i.hash = q(e), mr(i, r.slice(9), dr)), i
                        }(r)
                }
                return tr.throwError("unsupported transaction type: ".concat(r[0]), p.errors.UNSUPPORTED_OPERATION, {
                    operation: "parseTransaction",
                    transactionType: r[0]
                })
            }
        },
        8356: function(e, r, t) {
            "use strict";
            t.r(r), t.d(r, {
                _fetchData: function() {
                    return K
                },
                fetchJson: function() {
                    return z
                },
                poll: function() {
                    return q
                }
            });
            var n = t(27166),
                i = t(27853),
                o = t(84531),
                a = !1,
                s = !1,
                u = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                },
                c = u.default,
                f = null;
            var l, h, d = function() {
                try {
                    var e = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((function(r) {
                            try {
                                if ("test" !== "test".normalize(r)) throw new Error("bad normalize")
                            } catch (t) {
                                e.push(r)
                            }
                        })), e.length) throw new Error("missing " + e.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
                } catch (r) {
                    return r.message
                }
                return null
            }();
            ! function(e) {
                e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF"
            }(l || (l = {})),
            function(e) {
                e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED"
            }(h || (h = {}));
            var p = "0123456789abcdef",
                v = function() {
                    function e(r) {
                        (0, i.Z)(this, e), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: r,
                            writable: !1
                        })
                    }
                    return (0, o.Z)(e, [{
                        key: "_log",
                        value: function(e, r) {
                            var t = e.toLowerCase();
                            null == u[t] && this.throwArgumentError("invalid log level name", "logLevel", e), c > u[t] || console.log.apply(console, r)
                        }
                    }, {
                        key: "debug",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.DEBUG, t)
                        }
                    }, {
                        key: "info",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.INFO, t)
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                            this._log(e.levels.WARNING, t)
                        }
                    }, {
                        key: "makeError",
                        value: function(r, t, n) {
                            if (s) return this.makeError("censored error", t, {});
                            t || (t = e.errors.UNKNOWN_ERROR), n || (n = {});
                            var i = [];
                            Object.keys(n).forEach((function(e) {
                                var r = n[e];
                                try {
                                    if (r instanceof Uint8Array) {
                                        for (var t = "", o = 0; o < r.length; o++) t += p[r[o] >> 4], t += p[15 & r[o]];
                                        i.push(e + "=Uint8Array(0x" + t + ")")
                                    } else i.push(e + "=" + JSON.stringify(r))
                                } catch (c) {
                                    i.push(e + "=" + JSON.stringify(n[e].toString()))
                                }
                            })), i.push("code=".concat(t)), i.push("version=".concat(this.version));
                            var o = r,
                                a = "";
                            switch (t) {
                                case h.NUMERIC_FAULT:
                                    a = "NUMERIC_FAULT";
                                    var u = r;
                                    switch (u) {
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            a += "-" + u;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            a += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            a += "-unbound-result"
                                    }
                                    break;
                                case h.CALL_EXCEPTION:
                                case h.INSUFFICIENT_FUNDS:
                                case h.MISSING_NEW:
                                case h.NONCE_EXPIRED:
                                case h.REPLACEMENT_UNDERPRICED:
                                case h.TRANSACTION_REPLACED:
                                case h.UNPREDICTABLE_GAS_LIMIT:
                                    a = t
                            }
                            a && (r += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (r += " (" + i.join(", ") + ")");
                            var c = new Error(r);
                            return c.reason = o, c.code = t, Object.keys(n).forEach((function(e) {
                                c[e] = n[e]
                            })), c
                        }
                    }, {
                        key: "throwError",
                        value: function(e, r, t) {
                            throw this.makeError(e, r, t)
                        }
                    }, {
                        key: "throwArgumentError",
                        value: function(r, t, n) {
                            return this.throwError(r, e.errors.INVALID_ARGUMENT, {
                                argument: t,
                                value: n
                            })
                        }
                    }, {
                        key: "assert",
                        value: function(e, r, t, n) {
                            e || this.throwError(r, t, n)
                        }
                    }, {
                        key: "assertArgument",
                        value: function(e, r, t, n) {
                            e || this.throwArgumentError(r, t, n)
                        }
                    }, {
                        key: "checkNormalize",
                        value: function(r) {
                            null == r && (r = "platform missing String.prototype.normalize"), d && this.throwError("platform missing String.prototype.normalize", e.errors.UNSUPPORTED_OPERATION, {
                                operation: "String.prototype.normalize",
                                form: d
                            })
                        }
                    }, {
                        key: "checkSafeUint53",
                        value: function(r, t) {
                            "number" === typeof r && (null == t && (t = "value not safe"), (r < 0 || r >= 9007199254740991) && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "out-of-safe-range",
                                value: r
                            }), r % 1 && this.throwError(t, e.errors.NUMERIC_FAULT, {
                                operation: "checkSafeInteger",
                                fault: "non-integer",
                                value: r
                            }))
                        }
                    }, {
                        key: "checkArgumentCount",
                        value: function(r, t, n) {
                            n = n ? ": " + n : "", r < t && this.throwError("missing argument" + n, e.errors.MISSING_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            }), r > t && this.throwError("too many arguments" + n, e.errors.UNEXPECTED_ARGUMENT, {
                                count: r,
                                expectedCount: t
                            })
                        }
                    }, {
                        key: "checkNew",
                        value: function(r, t) {
                            r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }, {
                        key: "checkAbstract",
                        value: function(r, t) {
                            r === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", e.errors.UNSUPPORTED_OPERATION, {
                                name: r.name,
                                operation: "new"
                            }) : r !== Object && null != r || this.throwError("missing new", e.errors.MISSING_NEW, {
                                name: t.name
                            })
                        }
                    }], [{
                        key: "globalLogger",
                        value: function() {
                            return f || (f = new e("logger/5.7.0")), f
                        }
                    }, {
                        key: "setCensorship",
                        value: function(r, t) {
                            if (!r && t && this.globalLogger().throwError("cannot permanently disable censorship", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                }), a) {
                                if (!r) return;
                                this.globalLogger().throwError("error censorship permanent", e.errors.UNSUPPORTED_OPERATION, {
                                    operation: "setCensorship"
                                })
                            }
                            s = !!r, a = !!t
                        }
                    }, {
                        key: "setLogLevel",
                        value: function(r) {
                            var t = u[r.toLowerCase()];
                            null != t ? c = t : e.globalLogger().warn("invalid log level - " + r)
                        }
                    }, {
                        key: "from",
                        value: function(r) {
                            return new e(r)
                        }
                    }]), e
                }();
            v.errors = h, v.levels = l;
            var g = new v("bytes/5.7.0");

            function m(e) {
                return !!e.toHexString
            }

            function y(e) {
                return e.slice || (e.slice = function() {
                    var r = Array.prototype.slice.call(arguments);
                    return y(new Uint8Array(Array.prototype.slice.apply(e, r)))
                }), e
            }

            function b(e) {
                return k(e) && !(e.length % 2) || w(e)
            }

            function E(e) {
                return "number" === typeof e && e == e && e % 1 === 0
            }

            function w(e) {
                if (null == e) return !1;
                if (e.constructor === Uint8Array) return !0;
                if ("string" === typeof e) return !1;
                if (!E(e.length) || e.length < 0) return !1;
                for (var r = 0; r < e.length; r++) {
                    var t = e[r];
                    if (!E(t) || t < 0 || t >= 256) return !1
                }
                return !0
            }

            function A(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    g.checkSafeUint53(e, "invalid arrayify value");
                    for (var t = []; e;) t.unshift(255 & e), e = parseInt(String(e / 256));
                    return 0 === t.length && t.push(0), y(new Uint8Array(t))
                }
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), m(e) && (e = e.toHexString()), k(e)) {
                    var n = e.substring(2);
                    n.length % 2 && ("left" === r.hexPad ? n = "0" + n : "right" === r.hexPad ? n += "0" : g.throwArgumentError("hex data is odd-length", "value", e));
                    for (var i = [], o = 0; o < n.length; o += 2) i.push(parseInt(n.substring(o, o + 2), 16));
                    return y(new Uint8Array(i))
                }
                return w(e) ? y(new Uint8Array(e)) : g.throwArgumentError("invalid arrayify value", "value", e)
            }

            function k(e, r) {
                return !("string" !== typeof e || !e.match(/^0x[0-9A-Fa-f]*$/)) && (!r || e.length === 2 + 2 * r)
            }
            var N = "0123456789abcdef";

            function R(e, r) {
                if (r || (r = {}), "number" === typeof e) {
                    g.checkSafeUint53(e, "invalid hexlify value");
                    for (var t = ""; e;) t = N[15 & e] + t, e = Math.floor(e / 16);
                    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00"
                }
                if ("bigint" === typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                if (r.allowMissingPrefix && "string" === typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), m(e)) return e.toHexString();
                if (k(e)) return e.length % 2 && ("left" === r.hexPad ? e = "0x0" + e.substring(2) : "right" === r.hexPad ? e += "0" : g.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                if (w(e)) {
                    for (var n = "0x", i = 0; i < e.length; i++) {
                        var o = e[i];
                        n += N[(240 & o) >> 4] + N[15 & o]
                    }
                    return n
                }
                return g.throwArgumentError("invalid hexlify value", "value", e)
            }

            function x(e) {
                e = atob(e);
                for (var r = [], t = 0; t < e.length; t++) r.push(e.charCodeAt(t));
                return A(r)
            }

            function I(e) {
                e = A(e);
                for (var r = "", t = 0; t < e.length; t++) r += String.fromCharCode(e[t]);
                return btoa(r)
            }
            new v("properties/5.7.0");

            function P(e) {
                var r = {};
                for (var t in e) r[t] = e[t];
                return r
            }
            var S, _, T = new v("strings/5.7.0");

            function O(e, r, t, n, i) {
                if (e === _.BAD_PREFIX || e === _.UNEXPECTED_CONTINUE) {
                    for (var o = 0, a = r + 1; a < t.length && t[a] >> 6 === 2; a++) o++;
                    return o
                }
                return e === _.OVERRUN ? t.length - r - 1 : 0
            }! function(e) {
                e.current = "", e.NFC = "NFC", e.NFD = "NFD", e.NFKC = "NFKC", e.NFKD = "NFKD"
            }(S || (S = {})),
            function(e) {
                e.UNEXPECTED_CONTINUE = "unexpected continuation byte", e.BAD_PREFIX = "bad codepoint prefix", e.OVERRUN = "string overrun", e.MISSING_CONTINUE = "missing continuation byte", e.OUT_OF_RANGE = "out of UTF-8 range", e.UTF16_SURROGATE = "UTF-16 surrogate", e.OVERLONG = "overlong representation"
            }(_ || (_ = {}));
            var C = Object.freeze({
                error: function(e, r, t, n, i) {
                    return T.throwArgumentError("invalid codepoint at offset ".concat(r, "; ").concat(e), "bytes", t)
                },
                ignore: O,
                replace: function(e, r, t, n, i) {
                    return e === _.OVERLONG ? (n.push(i), 0) : (n.push(65533), O(e, r, t))
                }
            });

            function U(e, r) {
                null == r && (r = C.error), e = A(e);
                for (var t = [], n = 0; n < e.length;) {
                    var i = e[n++];
                    if (i >> 7 !== 0) {
                        var o = null,
                            a = null;
                        if (192 === (224 & i)) o = 1, a = 127;
                        else if (224 === (240 & i)) o = 2, a = 2047;
                        else {
                            if (240 !== (248 & i)) {
                                n += r(128 === (192 & i) ? _.UNEXPECTED_CONTINUE : _.BAD_PREFIX, n - 1, e, t);
                                continue
                            }
                            o = 3, a = 65535
                        }
                        if (n - 1 + o >= e.length) n += r(_.OVERRUN, n - 1, e, t);
                        else {
                            for (var s = i & (1 << 8 - o - 1) - 1, u = 0; u < o; u++) {
                                var c = e[n];
                                if (128 != (192 & c)) {
                                    n += r(_.MISSING_CONTINUE, n, e, t), s = null;
                                    break
                                }
                                s = s << 6 | 63 & c, n++
                            }
                            null !== s && (s > 1114111 ? n += r(_.OUT_OF_RANGE, n - 1 - o, e, t, s) : s >= 55296 && s <= 57343 ? n += r(_.UTF16_SURROGATE, n - 1 - o, e, t, s) : s <= a ? n += r(_.OVERLONG, n - 1 - o, e, t, s) : t.push(s))
                        }
                    } else t.push(i)
                }
                return t
            }

            function L(e) {
                var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : S.current;
                r != S.current && (T.checkNormalize(), e = e.normalize(r));
                for (var t = [], n = 0; n < e.length; n++) {
                    var i = e.charCodeAt(n);
                    if (i < 128) t.push(i);
                    else if (i < 2048) t.push(i >> 6 | 192), t.push(63 & i | 128);
                    else if (55296 == (64512 & i)) {
                        n++;
                        var o = e.charCodeAt(n);
                        if (n >= e.length || 56320 !== (64512 & o)) throw new Error("invalid utf-8 string");
                        var a = 65536 + ((1023 & i) << 10) + (1023 & o);
                        t.push(a >> 18 | 240), t.push(a >> 12 & 63 | 128), t.push(a >> 6 & 63 | 128), t.push(63 & a | 128)
                    } else t.push(i >> 12 | 224), t.push(i >> 6 & 63 | 128), t.push(63 & i | 128)
                }
                return A(t)
            }

            function F(e, r) {
                return U(e, r).map((function(e) {
                    return e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode(55296 + (e >> 10 & 1023), 56320 + (1023 & e)))
                })).join("")
            }
            var D = function(e, r, t, n) {
                return new(t || (t = Promise))((function(i, o) {
                    function a(e) {
                        try {
                            u(n.next(e))
                        } catch (r) {
                            o(r)
                        }
                    }

                    function s(e) {
                        try {
                            u(n.throw(e))
                        } catch (r) {
                            o(r)
                        }
                    }

                    function u(e) {
                        var r;
                        e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                            e(r)
                        }))).then(a, s)
                    }
                    u((n = n.apply(e, r || [])).next())
                }))
            };

            function M(e, r) {
                return D(this, void 0, void 0, (0, n.Z)().mark((function t() {
                    var i, o, a, s;
                    return (0, n.Z)().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return null == r && (r = {}), i = {
                                    method: r.method || "GET",
                                    headers: r.headers || {},
                                    body: r.body || void 0
                                }, !0 !== r.skipFetchSetup && (i.mode = "cors", i.cache = "no-cache", i.credentials = "same-origin", i.redirect = "follow", i.referrer = "client"), t.next = 6, fetch(e, i);
                            case 6:
                                return o = t.sent, t.next = 9, o.arrayBuffer();
                            case 9:
                                return a = t.sent, s = {}, o.headers.forEach ? o.headers.forEach((function(e, r) {
                                    s[r.toLowerCase()] = e
                                })) : o.headers.keys().forEach((function(e) {
                                    s[e.toLowerCase()] = o.headers.get(e)
                                })), t.abrupt("return", {
                                    headers: s,
                                    statusCode: o.status,
                                    statusMessage: o.statusText,
                                    body: A(new Uint8Array(a))
                                });
                            case 13:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))
            }
            var B = function(e, r, t, n) {
                    return new(t || (t = Promise))((function(i, o) {
                        function a(e) {
                            try {
                                u(n.next(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function s(e) {
                            try {
                                u(n.throw(e))
                            } catch (r) {
                                o(r)
                            }
                        }

                        function u(e) {
                            var r;
                            e.done ? i(e.value) : (r = e.value, r instanceof t ? r : new t((function(e) {
                                e(r)
                            }))).then(a, s)
                        }
                        u((n = n.apply(e, r || [])).next())
                    }))
                },
                G = new v("web/5.6.1");

            function Z(e) {
                return new Promise((function(r) {
                    setTimeout(r, e)
                }))
            }

            function j(e, r) {
                if (null == e) return null;
                if ("string" === typeof e) return e;
                if (b(e)) {
                    if (r && ("text" === r.split("/")[0] || "application/json" === r.split(";")[0].trim())) try {
                        return F(e)
                    } catch (t) {}
                    return R(e)
                }
                return e
            }

            function K(e, r, t) {
                var i = "object" === typeof e && null != e.throttleLimit ? e.throttleLimit : 12;
                G.assertArgument(i > 0 && i % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", i);
                var o = "object" === typeof e ? e.throttleCallback : null,
                    a = "object" === typeof e && "number" === typeof e.throttleSlotInterval ? e.throttleSlotInterval : 100;
                G.assertArgument(a > 0 && a % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", a);
                var s = "object" === typeof e && !!e.errorPassThrough,
                    u = {},
                    c = null,
                    f = {
                        method: "GET"
                    },
                    l = !1,
                    h = 12e4;
                if ("string" === typeof e) c = e;
                else if ("object" === typeof e) {
                    if (null != e && null != e.url || G.throwArgumentError("missing URL", "connection.url", e), c = e.url, "number" === typeof e.timeout && e.timeout > 0 && (h = e.timeout), e.headers)
                        for (var d in e.headers) u[d.toLowerCase()] = {
                            key: d,
                            value: String(e.headers[d])
                        }, ["if-none-match", "if-modified-since"].indexOf(d.toLowerCase()) >= 0 && (l = !0);
                    if (f.allowGzip = !!e.allowGzip, null != e.user && null != e.password) {
                        "https:" !== c.substring(0, 6) && !0 !== e.allowInsecureAuthentication && G.throwError("basic authentication requires a secure https url", v.errors.INVALID_ARGUMENT, {
                            argument: "url",
                            url: c,
                            user: e.user,
                            password: "[REDACTED]"
                        });
                        var p = e.user + ":" + e.password;
                        u.authorization = {
                            key: "Authorization",
                            value: "Basic " + I(L(p))
                        }
                    }
                    null != e.skipFetchSetup && (f.skipFetchSetup = !!e.skipFetchSetup)
                }
                var g = new RegExp("^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$", "i"),
                    m = c ? c.match(g) : null;
                if (m) try {
                    var y = {
                            statusCode: 200,
                            statusMessage: "OK",
                            headers: {
                                "content-type": m[1]
                            },
                            body: x(m[2])
                        },
                        b = y.body;
                    return t && (b = t(y.body, y)), Promise.resolve(b)
                } catch (k) {
                    G.throwError("processing response error", v.errors.SERVER_ERROR, {
                        body: j(m[1], m[2]),
                        error: k,
                        requestBody: null,
                        requestMethod: "GET",
                        url: c
                    })
                }
                r && (f.method = "POST", f.body = r, null == u["content-type"] && (u["content-type"] = {
                    key: "Content-Type",
                    value: "application/octet-stream"
                }), null == u["content-length"] && (u["content-length"] = {
                    key: "Content-Length",
                    value: String(r.length)
                }));
                var E = {};
                Object.keys(u).forEach((function(e) {
                    var r = u[e];
                    E[r.key] = r.value
                })), f.headers = E;
                var w = function() {
                        var e = null;
                        return {
                            promise: new Promise((function(r, t) {
                                h && (e = setTimeout((function() {
                                    null != e && (e = null, t(G.makeError("timeout", v.errors.TIMEOUT, {
                                        requestBody: j(f.body, E["content-type"]),
                                        requestMethod: f.method,
                                        timeout: h,
                                        url: c
                                    })))
                                }), h))
                            })),
                            cancel: function() {
                                null != e && (clearTimeout(e), e = null)
                            }
                        }
                    }(),
                    A = function() {
                        return B(this, void 0, void 0, (0, n.Z)().mark((function e() {
                            var r, u, h, d, p, g, m, y, b, A;
                            return (0, n.Z)().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        r = 0;
                                    case 1:
                                        if (!(r < i)) {
                                            e.next = 65;
                                            break
                                        }
                                        return u = null, e.prev = 3, e.next = 6, M(c, f);
                                    case 6:
                                        if (u = e.sent, !(r < i)) {
                                            e.next = 28;
                                            break
                                        }
                                        if (301 !== u.statusCode && 302 !== u.statusCode) {
                                            e.next = 15;
                                            break
                                        }
                                        if (h = u.headers.location || "", "GET" !== f.method || !h.match(/^https:/)) {
                                            e.next = 13;
                                            break
                                        }
                                        return c = u.headers.location, e.abrupt("continue", 62);
                                    case 13:
                                        e.next = 28;
                                        break;
                                    case 15:
                                        if (429 !== u.statusCode) {
                                            e.next = 28;
                                            break
                                        }
                                        if (d = !0, !o) {
                                            e.next = 21;
                                            break
                                        }
                                        return e.next = 20, o(r, c);
                                    case 20:
                                        d = e.sent;
                                    case 21:
                                        if (!d) {
                                            e.next = 28;
                                            break
                                        }
                                        return p = 0, g = u.headers["retry-after"], p = "string" === typeof g && g.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(g) : a * parseInt(String(Math.random() * Math.pow(2, r))), e.next = 27, Z(p);
                                    case 27:
                                        return e.abrupt("continue", 62);
                                    case 28:
                                        e.next = 34;
                                        break;
                                    case 30:
                                        e.prev = 30, e.t0 = e.catch(3), null == (u = e.t0.response) && (w.cancel(), G.throwError("missing response", v.errors.SERVER_ERROR, {
                                            requestBody: j(f.body, E["content-type"]),
                                            requestMethod: f.method,
                                            serverError: e.t0,
                                            url: c
                                        }));
                                    case 34:
                                        if (m = u.body, l && 304 === u.statusCode ? m = null : !s && (u.statusCode < 200 || u.statusCode >= 300) && (w.cancel(), G.throwError("bad response", v.errors.SERVER_ERROR, {
                                                status: u.statusCode,
                                                headers: u.headers,
                                                body: j(m, u.headers ? u.headers["content-type"] : null),
                                                requestBody: j(f.body, E["content-type"]),
                                                requestMethod: f.method,
                                                url: c
                                            })), !t) {
                                            e.next = 60;
                                            break
                                        }
                                        return e.prev = 37, e.next = 40, t(m, u);
                                    case 40:
                                        return y = e.sent, w.cancel(), e.abrupt("return", y);
                                    case 45:
                                        if (e.prev = 45, e.t1 = e.catch(37), !(e.t1.throttleRetry && r < i)) {
                                            e.next = 58;
                                            break
                                        }
                                        if (b = !0, !o) {
                                            e.next = 53;
                                            break
                                        }
                                        return e.next = 52, o(r, c);
                                    case 52:
                                        b = e.sent;
                                    case 53:
                                        if (!b) {
                                            e.next = 58;
                                            break
                                        }
                                        return A = a * parseInt(String(Math.random() * Math.pow(2, r))), e.next = 57, Z(A);
                                    case 57:
                                        return e.abrupt("continue", 62);
                                    case 58:
                                        w.cancel(), G.throwError("processing response error", v.errors.SERVER_ERROR, {
                                            body: j(m, u.headers ? u.headers["content-type"] : null),
                                            error: e.t1,
                                            requestBody: j(f.body, E["content-type"]),
                                            requestMethod: f.method,
                                            url: c
                                        });
                                    case 60:
                                        return w.cancel(), e.abrupt("return", m);
                                    case 62:
                                        r++, e.next = 1;
                                        break;
                                    case 65:
                                        return e.abrupt("return", G.throwError("failed response", v.errors.SERVER_ERROR, {
                                            requestBody: j(f.body, E["content-type"]),
                                            requestMethod: f.method,
                                            url: c
                                        }));
                                    case 66:
                                    case "end":
                                        return e.stop()
                                }
                            }), e, null, [
                                [3, 30],
                                [37, 45]
                            ])
                        })))
                    }();
                return Promise.race([w.promise, A])
            }

            function z(e, r, t) {
                var n = null;
                if (null != r) {
                    n = L(r);
                    var i = "string" === typeof e ? {
                        url: e
                    } : P(e);
                    if (i.headers) 0 !== Object.keys(i.headers).filter((function(e) {
                        return "content-type" === e.toLowerCase()
                    })).length || (i.headers = P(i.headers), i.headers["content-type"] = "application/json");
                    else i.headers = {
                        "content-type": "application/json"
                    };
                    e = i
                }
                return K(e, n, (function(e, r) {
                    var n = null;
                    if (null != e) try {
                        n = JSON.parse(F(e))
                    } catch (i) {
                        G.throwError("invalid JSON", v.errors.SERVER_ERROR, {
                            body: e,
                            error: i
                        })
                    }
                    return t && (n = t(n, r)), n
                }))
            }

            function q(e, r) {
                return r || (r = {}), null == (r = P(r)).floor && (r.floor = 0), null == r.ceiling && (r.ceiling = 1e4), null == r.interval && (r.interval = 250), new Promise((function(t, n) {
                    var i = null,
                        o = !1,
                        a = function() {
                            return !o && (o = !0, i && clearTimeout(i), !0)
                        };
                    r.timeout && (i = setTimeout((function() {
                        a() && n(new Error("timeout"))
                    }), r.timeout));
                    var s = r.retryLimit,
                        u = 0;
                    ! function i() {
                        return e().then((function(e) {
                            if (void 0 !== e) a() && t(e);
                            else if (r.oncePoll) r.oncePoll.once("poll", i);
                            else if (r.onceBlock) r.onceBlock.once("block", i);
                            else if (!o) {
                                if (++u > s) return void(a() && n(new Error("retry limit reached")));
                                var c = r.interval * parseInt(String(Math.random() * Math.pow(2, u)));
                                c < r.floor && (c = r.floor), c > r.ceiling && (c = r.ceiling), setTimeout(i, c)
                            }
                            return null
                        }), (function(e) {
                            a() && n(e)
                        }))
                    }()
                }))
            }
        },
        71060: function(e) {
            "use strict";
            var r = Object.prototype.hasOwnProperty,
                t = "~";

            function n() {}

            function i(e, r, t) {
                this.fn = e, this.context = r, this.once = t || !1
            }

            function o(e, r, n, o, a) {
                if ("function" !== typeof n) throw new TypeError("The listener must be a function");
                var s = new i(n, o || e, a),
                    u = t ? t + r : r;
                return e._events[u] ? e._events[u].fn ? e._events[u] = [e._events[u], s] : e._events[u].push(s) : (e._events[u] = s, e._eventsCount++), e
            }

            function a(e, r) {
                0 === --e._eventsCount ? e._events = new n : delete e._events[r]
            }

            function s() {
                this._events = new n, this._eventsCount = 0
            }
            Object.create && (n.prototype = Object.create(null), (new n).__proto__ || (t = !1)), s.prototype.eventNames = function() {
                var e, n, i = [];
                if (0 === this._eventsCount) return i;
                for (n in e = this._events) r.call(e, n) && i.push(t ? n.slice(1) : n);
                return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i
            }, s.prototype.listeners = function(e) {
                var r = t ? t + e : e,
                    n = this._events[r];
                if (!n) return [];
                if (n.fn) return [n.fn];
                for (var i = 0, o = n.length, a = new Array(o); i < o; i++) a[i] = n[i].fn;
                return a
            }, s.prototype.listenerCount = function(e) {
                var r = t ? t + e : e,
                    n = this._events[r];
                return n ? n.fn ? 1 : n.length : 0
            }, s.prototype.emit = function(e, r, n, i, o, a) {
                var s = t ? t + e : e;
                if (!this._events[s]) return !1;
                var u, c, f = this._events[s],
                    l = arguments.length;
                if (f.fn) {
                    switch (f.once && this.removeListener(e, f.fn, void 0, !0), l) {
                        case 1:
                            return f.fn.call(f.context), !0;
                        case 2:
                            return f.fn.call(f.context, r), !0;
                        case 3:
                            return f.fn.call(f.context, r, n), !0;
                        case 4:
                            return f.fn.call(f.context, r, n, i), !0;
                        case 5:
                            return f.fn.call(f.context, r, n, i, o), !0;
                        case 6:
                            return f.fn.call(f.context, r, n, i, o, a), !0
                    }
                    for (c = 1, u = new Array(l - 1); c < l; c++) u[c - 1] = arguments[c];
                    f.fn.apply(f.context, u)
                } else {
                    var h, d = f.length;
                    for (c = 0; c < d; c++) switch (f[c].once && this.removeListener(e, f[c].fn, void 0, !0), l) {
                        case 1:
                            f[c].fn.call(f[c].context);
                            break;
                        case 2:
                            f[c].fn.call(f[c].context, r);
                            break;
                        case 3:
                            f[c].fn.call(f[c].context, r, n);
                            break;
                        case 4:
                            f[c].fn.call(f[c].context, r, n, i);
                            break;
                        default:
                            if (!u)
                                for (h = 1, u = new Array(l - 1); h < l; h++) u[h - 1] = arguments[h];
                            f[c].fn.apply(f[c].context, u)
                    }
                }
                return !0
            }, s.prototype.on = function(e, r, t) {
                return o(this, e, r, t, !1)
            }, s.prototype.once = function(e, r, t) {
                return o(this, e, r, t, !0)
            }, s.prototype.removeListener = function(e, r, n, i) {
                var o = t ? t + e : e;
                if (!this._events[o]) return this;
                if (!r) return a(this, o), this;
                var s = this._events[o];
                if (s.fn) s.fn !== r || i && !s.once || n && s.context !== n || a(this, o);
                else {
                    for (var u = 0, c = [], f = s.length; u < f; u++)(s[u].fn !== r || i && !s[u].once || n && s[u].context !== n) && c.push(s[u]);
                    c.length ? this._events[o] = 1 === c.length ? c[0] : c : a(this, o)
                }
                return this
            }, s.prototype.removeAllListeners = function(e) {
                var r;
                return e ? (r = t ? t + e : e, this._events[r] && a(this, r)) : (this._events = new n, this._eventsCount = 0), this
            }, s.prototype.off = s.prototype.removeListener, s.prototype.addListener = s.prototype.on, s.prefixed = t, s.EventEmitter = s, e.exports = s
        },
        16977: function(e) {
            "use strict";
            var r, t = "object" === typeof Reflect ? Reflect : null,
                n = t && "function" === typeof t.apply ? t.apply : function(e, r, t) {
                    return Function.prototype.apply.call(e, r, t)
                };
            r = t && "function" === typeof t.ownKeys ? t.ownKeys : Object.getOwnPropertySymbols ? function(e) {
                return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))
            } : function(e) {
                return Object.getOwnPropertyNames(e)
            };
            var i = Number.isNaN || function(e) {
                return e !== e
            };

            function o() {
                o.init.call(this)
            }
            e.exports = o, e.exports.once = function(e, r) {
                return new Promise((function(t, n) {
                    function i(t) {
                        e.removeListener(r, o), n(t)
                    }

                    function o() {
                        "function" === typeof e.removeListener && e.removeListener("error", i), t([].slice.call(arguments))
                    }
                    v(e, r, o, {
                        once: !0
                    }), "error" !== r && function(e, r, t) {
                        "function" === typeof e.on && v(e, "error", r, t)
                    }(e, i, {
                        once: !0
                    })
                }))
            }, o.EventEmitter = o, o.prototype._events = void 0, o.prototype._eventsCount = 0, o.prototype._maxListeners = void 0;
            var a = 10;

            function s(e) {
                if ("function" !== typeof e) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e)
            }

            function u(e) {
                return void 0 === e._maxListeners ? o.defaultMaxListeners : e._maxListeners
            }

            function c(e, r, t, n) {
                var i, o, a, c;
                if (s(t), void 0 === (o = e._events) ? (o = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== o.newListener && (e.emit("newListener", r, t.listener ? t.listener : t), o = e._events), a = o[r]), void 0 === a) a = o[r] = t, ++e._eventsCount;
                else if ("function" === typeof a ? a = o[r] = n ? [t, a] : [a, t] : n ? a.unshift(t) : a.push(t), (i = u(e)) > 0 && a.length > i && !a.warned) {
                    a.warned = !0;
                    var f = new Error("Possible EventEmitter memory leak detected. " + a.length + " " + String(r) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                    f.name = "MaxListenersExceededWarning", f.emitter = e, f.type = r, f.count = a.length, c = f, console && console.warn && console.warn(c)
                }
                return e
            }

            function f() {
                if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
            }

            function l(e, r, t) {
                var n = {
                        fired: !1,
                        wrapFn: void 0,
                        target: e,
                        type: r,
                        listener: t
                    },
                    i = f.bind(n);
                return i.listener = t, n.wrapFn = i, i
            }

            function h(e, r, t) {
                var n = e._events;
                if (void 0 === n) return [];
                var i = n[r];
                return void 0 === i ? [] : "function" === typeof i ? t ? [i.listener || i] : [i] : t ? function(e) {
                    for (var r = new Array(e.length), t = 0; t < r.length; ++t) r[t] = e[t].listener || e[t];
                    return r
                }(i) : p(i, i.length)
            }

            function d(e) {
                var r = this._events;
                if (void 0 !== r) {
                    var t = r[e];
                    if ("function" === typeof t) return 1;
                    if (void 0 !== t) return t.length
                }
                return 0
            }

            function p(e, r) {
                for (var t = new Array(r), n = 0; n < r; ++n) t[n] = e[n];
                return t
            }

            function v(e, r, t, n) {
                if ("function" === typeof e.on) n.once ? e.once(r, t) : e.on(r, t);
                else {
                    if ("function" !== typeof e.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
                    e.addEventListener(r, (function i(o) {
                        n.once && e.removeEventListener(r, i), t(o)
                    }))
                }
            }
            Object.defineProperty(o, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                    return a
                },
                set: function(e) {
                    if ("number" !== typeof e || e < 0 || i(e)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                    a = e
                }
            }), o.init = function() {
                void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
            }, o.prototype.setMaxListeners = function(e) {
                if ("number" !== typeof e || e < 0 || i(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                return this._maxListeners = e, this
            }, o.prototype.getMaxListeners = function() {
                return u(this)
            }, o.prototype.emit = function(e) {
                for (var r = [], t = 1; t < arguments.length; t++) r.push(arguments[t]);
                var i = "error" === e,
                    o = this._events;
                if (void 0 !== o) i = i && void 0 === o.error;
                else if (!i) return !1;
                if (i) {
                    var a;
                    if (r.length > 0 && (a = r[0]), a instanceof Error) throw a;
                    var s = new Error("Unhandled error." + (a ? " (" + a.message + ")" : ""));
                    throw s.context = a, s
                }
                var u = o[e];
                if (void 0 === u) return !1;
                if ("function" === typeof u) n(u, this, r);
                else {
                    var c = u.length,
                        f = p(u, c);
                    for (t = 0; t < c; ++t) n(f[t], this, r)
                }
                return !0
            }, o.prototype.addListener = function(e, r) {
                return c(this, e, r, !1)
            }, o.prototype.on = o.prototype.addListener, o.prototype.prependListener = function(e, r) {
                return c(this, e, r, !0)
            }, o.prototype.once = function(e, r) {
                return s(r), this.on(e, l(this, e, r)), this
            }, o.prototype.prependOnceListener = function(e, r) {
                return s(r), this.prependListener(e, l(this, e, r)), this
            }, o.prototype.removeListener = function(e, r) {
                var t, n, i, o, a;
                if (s(r), void 0 === (n = this._events)) return this;
                if (void 0 === (t = n[e])) return this;
                if (t === r || t.listener === r) 0 === --this._eventsCount ? this._events = Object.create(null) : (delete n[e], n.removeListener && this.emit("removeListener", e, t.listener || r));
                else if ("function" !== typeof t) {
                    for (i = -1, o = t.length - 1; o >= 0; o--)
                        if (t[o] === r || t[o].listener === r) {
                            a = t[o].listener, i = o;
                            break
                        }
                    if (i < 0) return this;
                    0 === i ? t.shift() : function(e, r) {
                        for (; r + 1 < e.length; r++) e[r] = e[r + 1];
                        e.pop()
                    }(t, i), 1 === t.length && (n[e] = t[0]), void 0 !== n.removeListener && this.emit("removeListener", e, a || r)
                }
                return this
            }, o.prototype.off = o.prototype.removeListener, o.prototype.removeAllListeners = function(e) {
                var r, t, n;
                if (void 0 === (t = this._events)) return this;
                if (void 0 === t.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== t[e] && (0 === --this._eventsCount ? this._events = Object.create(null) : delete t[e]), this;
                if (0 === arguments.length) {
                    var i, o = Object.keys(t);
                    for (n = 0; n < o.length; ++n) "removeListener" !== (i = o[n]) && this.removeAllListeners(i);
                    return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
                }
                if ("function" === typeof(r = t[e])) this.removeListener(e, r);
                else if (void 0 !== r)
                    for (n = r.length - 1; n >= 0; n--) this.removeListener(e, r[n]);
                return this
            }, o.prototype.listeners = function(e) {
                return h(this, e, !0)
            }, o.prototype.rawListeners = function(e) {
                return h(this, e, !1)
            }, o.listenerCount = function(e, r) {
                return "function" === typeof e.listenerCount ? e.listenerCount(r) : d.call(e, r)
            }, o.prototype.listenerCount = d, o.prototype.eventNames = function() {
                return this._eventsCount > 0 ? r(this._events) : []
            }
        },
        84224: function(e) {
            "use strict";
            e.exports = function(e) {
                var r = e.uri,
                    t = e.name,
                    n = e.type;
                this.uri = r, this.name = t, this.type = n
            }
        },
        70679: function(e, r, t) {
            "use strict";
            var n = t(49286);
            e.exports = function e(r, t, i) {
                var o;
                void 0 === t && (t = ""), void 0 === i && (i = n);
                var a = new Map;

                function s(e, r) {
                    var t = a.get(r);
                    t ? t.push.apply(t, e) : a.set(r, e)
                }
                if (i(r)) o = null, s([t], r);
                else {
                    var u = t ? t + "." : "";
                    if ("undefined" !== typeof FileList && r instanceof FileList) o = Array.prototype.map.call(r, (function(e, r) {
                        return s(["" + u + r], e), null
                    }));
                    else if (Array.isArray(r)) o = r.map((function(r, t) {
                        var n = e(r, "" + u + t, i);
                        return n.files.forEach(s), n.clone
                    }));
                    else if (r && r.constructor === Object)
                        for (var c in o = {}, r) {
                            var f = e(r[c], "" + u + c, i);
                            f.files.forEach(s), o[c] = f.clone
                        } else o = r
                }
                return {
                    clone: o,
                    files: a
                }
            }
        },
        23048: function(e, r, t) {
            "use strict";
            r.ReactNativeFile = t(84224), r.extractFiles = t(70679), r.isExtractableFile = t(49286)
        },
        49286: function(e, r, t) {
            "use strict";
            var n = t(84224);
            e.exports = function(e) {
                return "undefined" !== typeof File && e instanceof File || "undefined" !== typeof Blob && e instanceof Blob || e instanceof n
            }
        },
        4429: function(e) {
            e.exports = n, n.default = n, n.stable = a, n.stableStringify = a;
            var r = [],
                t = [];

            function n(e, n, o) {
                var a;
                for (i(e, "", [], void 0), a = 0 === t.length ? JSON.stringify(e, n, o) : JSON.stringify(e, u(n), o); 0 !== r.length;) {
                    var s = r.pop();
                    4 === s.length ? Object.defineProperty(s[0], s[1], s[3]) : s[0][s[1]] = s[2]
                }
                return a
            }

            function i(e, n, o, a) {
                var s;
                if ("object" === typeof e && null !== e) {
                    for (s = 0; s < o.length; s++)
                        if (o[s] === e) {
                            var u = Object.getOwnPropertyDescriptor(a, n);
                            return void(void 0 !== u.get ? u.configurable ? (Object.defineProperty(a, n, {
                                value: "[Circular]"
                            }), r.push([a, n, e, u])) : t.push([e, n]) : (a[n] = "[Circular]", r.push([a, n, e])))
                        }
                    if (o.push(e), Array.isArray(e))
                        for (s = 0; s < e.length; s++) i(e[s], s, o, e);
                    else {
                        var c = Object.keys(e);
                        for (s = 0; s < c.length; s++) {
                            var f = c[s];
                            i(e[f], f, o, e)
                        }
                    }
                    o.pop()
                }
            }

            function o(e, r) {
                return e < r ? -1 : e > r ? 1 : 0
            }

            function a(e, n, i) {
                var o, a = s(e, "", [], void 0) || e;
                for (o = 0 === t.length ? JSON.stringify(a, n, i) : JSON.stringify(a, u(n), i); 0 !== r.length;) {
                    var c = r.pop();
                    4 === c.length ? Object.defineProperty(c[0], c[1], c[3]) : c[0][c[1]] = c[2]
                }
                return o
            }

            function s(e, n, i, a) {
                var u;
                if ("object" === typeof e && null !== e) {
                    for (u = 0; u < i.length; u++)
                        if (i[u] === e) {
                            var c = Object.getOwnPropertyDescriptor(a, n);
                            return void(void 0 !== c.get ? c.configurable ? (Object.defineProperty(a, n, {
                                value: "[Circular]"
                            }), r.push([a, n, e, c])) : t.push([e, n]) : (a[n] = "[Circular]", r.push([a, n, e])))
                        }
                    if ("function" === typeof e.toJSON) return;
                    if (i.push(e), Array.isArray(e))
                        for (u = 0; u < e.length; u++) s(e[u], u, i, e);
                    else {
                        var f = {},
                            l = Object.keys(e).sort(o);
                        for (u = 0; u < l.length; u++) {
                            var h = l[u];
                            s(e[h], h, i, e), f[h] = e[h]
                        }
                        if (void 0 === a) return f;
                        r.push([a, n, e]), a[n] = f
                    }
                    i.pop()
                }
            }

            function u(e) {
                return e = void 0 !== e ? e : function(e, r) {
                        return r
                    },
                    function(r, n) {
                        if (t.length > 0)
                            for (var i = 0; i < t.length; i++) {
                                var o = t[i];
                                if (o[1] === r && o[0] === n) {
                                    n = "[Circular]", t.splice(i, 1);
                                    break
                                }
                            }
                        return e.call(this, r, n)
                    }
            }
        },
        64395: function(e) {
            "use strict";
            var r = [],
                t = [];

            function n(e, r, t, i) {
                if (e === r) return 0 !== e || 1 / e == 1 / r;
                if (null == e || null == r) return !1;
                if ("object" != typeof e || "object" != typeof r) return !1;
                var o = Object.prototype.toString,
                    a = o.call(e);
                if (a != o.call(r)) return !1;
                switch (a) {
                    case "[object String]":
                        return e == String(r);
                    case "[object Number]":
                        return !isNaN(e) && !isNaN(r) && e == Number(r);
                    case "[object Date]":
                    case "[object Boolean]":
                        return +e == +r;
                    case "[object RegExp]":
                        return e.source == r.source && e.global == r.global && e.multiline == r.multiline && e.ignoreCase == r.ignoreCase
                }
                for (var s = t.length; s--;)
                    if (t[s] == e) return i[s] == r;
                t.push(e), i.push(r);
                var u = 0;
                if ("[object Array]" === a) {
                    if ((u = e.length) !== r.length) return !1;
                    for (; u--;)
                        if (!n(e[u], r[u], t, i)) return !1
                } else {
                    if (e.constructor !== r.constructor) return !1;
                    if (e.hasOwnProperty("valueOf") && r.hasOwnProperty("valueOf")) return e.valueOf() == r.valueOf();
                    var c = Object.keys(e);
                    if (c.length != Object.keys(r).length) return !1;
                    for (var f = 0; f < c.length; f++)
                        if (!n(e[c[f]], r[c[f]], t, i)) return !1
                }
                return t.pop(), i.pop(), !0
            }
            e.exports = function(e, i) {
                var o = r.length ? r.pop() : [],
                    a = t.length ? t.pop() : [],
                    s = n(e, i, o, a);
                return o.length = 0, a.length = 0, r.push(o), t.push(a), s
            }
        },
        61164: function(e) {
            "use strict";

            function r(e) {
                return function() {
                    return e
                }
            }
            var t = function() {};
            t.thatReturns = r, t.thatReturnsFalse = r(!1), t.thatReturnsTrue = r(!0), t.thatReturnsNull = r(null), t.thatReturnsThis = function() {
                return this
            }, t.thatReturnsArgument = function(e) {
                return e
            }, e.exports = t
        },
        67694: function(e, r, t) {
            "use strict";
            var n = t(61164);
            e.exports = n
        }
    }
]);
//# sourceMappingURL=300.3236afcf.js.map